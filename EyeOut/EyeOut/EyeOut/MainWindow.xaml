<Window x:Class="EyeOut.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        
        xmlns:userbo="clr-namespace:EyeOut;assembly=EyeOut"
        xmlns:local="clr-namespace:EyeOut" 
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"      
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        
        xmlns:diagnostics="clr-namespace:System.Diagnostics;assembly=WindowsBase" 
        
        Closing="Window_Closing" 
        Icon="Content\pic\eyeout.png"
        Title="EyeOut Telepresence 2015, Daniel Davidek" Height="730" Width="1300"
        
        Top="0" Left="70"
        >
    <!--Closed="Window_Closed"-->


    <Window.CommandBindings>
        <CommandBinding Command="Help" 
        CanExecute="CanExecute"
        Executed="StartTelepresence" />
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Command="Help" Key="T" Modifiers="Ctrl"/>
    </Window.InputBindings>


    <!--instances of binding classes, styles definitions-->
    <Window.Resources>
        <!--new instance of C_controlMot named controlMot-->
        <local:C_SPI x:Key="spi"/>

        <!--Filtering and sorting of datagrid dgLog-->
        <CollectionViewSource x:Key="ItemCollectionViewSource_log"  
                              CollectionViewType="ListCollectionView"
                              Filter="CollectionViewSource_Filter">
            <CollectionViewSource.SortDescriptions>
                <!-- Requires 'xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"' declaration. -->
                <scm:SortDescription PropertyName="time" Direction="Descending"/>
                <scm:SortDescription PropertyName="queue" Direction="Descending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <!--cam datagrid-->
        <CollectionViewSource x:Key="ItemCollectionViewSource_cam"  
                              CollectionViewType="ListCollectionView"/>

        <!--about libraries-->
        <CollectionViewSource x:Key="ItemCollectionViewSource_aboutLibraries"  
                              CollectionViewType="ListCollectionView"/>

        <!--motorData-->
        <CollectionViewSource x:Key="ItemCollectionViewSource_motorData"  
                              CollectionViewType="ListCollectionView">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="address" Direction="Ascending"/>
                <scm:SortDescription PropertyName="letter_regByteType" Direction="Ascending"/>
                <scm:SortDescription PropertyName="name" Direction="Ascending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>



        <!--checkbox list for filterming dgLog-->
        <ObjectDataProvider x:Key="enumValues_LogMsgSource" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:e_LogMsgSource"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <!--checkbox list for selecting active motor-->
        <ObjectDataProvider x:Key="enumValues_rot" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:e_rot"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <!--____________________________________________________-->
        <!--ENUM TO string convertors-->
        <!--spi connection status-->
        <local:VCMyEnumToString x:Key="vcMyEnumToString"/>
        <!--motor e_rot -->
        <local:CONV_e_rot_ToString x:Key="conv_e_rot_ToString"/>

        <local:C_State x:Key="C_state"/>
        <!--<local:C_Logger.Instance x:Key="C_Logger"/>-->
        <!--<ResourceDictionary>
            <ObjectDataProvider x:Key="MyEnum" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="local:e_stateSPI" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ValueConverters:VCMyEnumToString x:Key="vcMyEnumToString"/>
        </ResourceDictionary>-->
    </Window.Resources>

    <Grid >

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="5" />
            <RowDefinition Height="200"/>
        </Grid.RowDefinitions>
        <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" />
        <TabControl x:Name="tcMain" Grid.Row="0" >
            <TabItem Header="Dynamixel Motors" Background="Orange">
                <!--<Grid Background="#FFE5E5E5">-->
                <Grid Background="Orange">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="142" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0" Grid.Row="0">
                        <GroupBox  Header="Connection control" >
                            <StackPanel>
                                <GroupBox Header="Protocol" >
                                    <StackPanel>
                                        <Label Content="COM Port:"/>
                                        <ComboBox Name="cbPort">
                                            <ComboBox.SelectedValue>
                                                <Binding Source="{StaticResource spi}" Path="PortName"/>
                                            </ComboBox.SelectedValue>
                                        </ComboBox>
                                        <Button Name="btnRescanPort" Content="Rescan Ports" Click="btnRescanPort_Click" />
                                        <Label Content="Selected [bps]:"/>
                                        <TextBox Name="txBaudRate" Background="#FF66FF4E">
                                            <TextBox.Text>
                                                <!--<Binding ElementName="lsBaudRate" Path="SelectedValue"/>-->
                                                <Binding Source="{StaticResource spi}" Path="BaudRate">
                                                    <!--<Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>-->
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                        <Label Content="BaudRate list:"/>
                                        <ListBox x:Name="lsBaudRate" MinHeight="20" SelectionMode="Single" SelectedIndex="0">
                                            <ListBox.SelectedValue>
                                                <Binding Source="{StaticResource spi}" Path="BaudRate">
                                                    <!--<Binding.ValidationRules>
                                                        <ExceptionValidationRule/>
                                                    </Binding.ValidationRules>-->
                                                </Binding>
                                            </ListBox.SelectedValue>

                                        </ListBox>
                                    </StackPanel>
                                </GroupBox>
                                <Button Name="btnConnect" Content="ReConnect" Click="btnSPIConnect_Click" />
                                <Button x:Name="btnSPIClose" Content="Close connection" Click="btnSPIClose_Click" />

                                <!--<Check Content="Connect" Appearence="Button" />-->
                                <!--<ToggleButton Content="Push to Connect" />-->
                            </StackPanel>
                        </GroupBox>
                        <GroupBox  Header="Motor settings" Visibility="Collapsed" >
                            <StackPanel>
                                <Button Content="Search for connected" Click="btnSearch4motors_Click"/>
                                <GroupBox Header="Select">
                                    <ListBox Name="lsMot" MinHeight="40"/>
                                </GroupBox>
                                <GroupBox Header="Selected motor info" VerticalAlignment="Top">
                                    <StackPanel>
                                        <ListBox Name="lsInfo" MinHeight="40" SelectionMode="Multiple"/>
                                        <TextBox>
                                            Selected information
                                        </TextBox>
                                    </StackPanel>
                                </GroupBox>

                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Send raw bytes">

                            <StackPanel>
                                <ListBox IsEnabled="False">
                                    <ListBoxItem>Syntax</ListBoxItem>
                                    <ListBoxItem FontSize="8">FF FF ID LEN INS PAR CHS</ListBoxItem>
                                </ListBox>
                                <TextBox x:Name="txRawBytes" FontSize="8" TextChanged="txRawBytes_TextChanged">
                                    FF FF 01 02 01 FB
                                </TextBox>
                                <Button x:Name="btnSendRawBytes" Content="Send raw bytes" Click="btnSendRawBytes_Click"/>
                            </StackPanel>
                        </GroupBox>
                        <Button Visibility="Collapsed" x:Name="btnDontTry" Content="DO TRY IT!" Click="btnDontTry_Click"/>
                        <Button Visibility="Collapsed" x:Name="btnTry" Content="TRY IT I DARE YOU!" Click="btnTry_Click"/>

                    </StackPanel>
                    <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />
                    <Grid Grid.Column="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="450"/>
                        </Grid.ColumnDefinitions>

                    <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch"/>
                    <DockPanel Grid.Column="0">
                        
                    <Grid Grid.Column="2" Background="#FFE5E5E5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height= "3*" />
                            <RowDefinition Height="5" />
                            <RowDefinition Height="110" />
                        </Grid.RowDefinitions>


                        <DockPanel Grid.Row="0" >
                            <Grid Grid.Column="2" Background="#FFE5E5E5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="220" />
                                    <ColumnDefinition Width="5" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" />

                                <StackPanel Grid.Column="0">
                                            <GroupBox Header="Reading data from motors">
                                                <StackPanel>
                                                    <GroupBox Header="Settings">
                                                    <StackPanel>
                                                    <DockPanel>
                                                    <GroupBox Header="Chosen motor:">
                                                        <ListBox x:Name="lsReadPresentPositionMotors" 
                                                                ItemsSource="{Binding Source={StaticResource enumValues_rot}}"         
                                                                SelectionMode="Multiple" >
                                                            <ListBox.ItemsPanel>
                                                                <ItemsPanelTemplate>
                                                                    <WrapPanel IsItemsHost="True" HorizontalAlignment="Center"/>
                                                                </ItemsPanelTemplate>
                                                            </ListBox.ItemsPanel>
                                                            <ListBox.ItemTemplate>
                                                                <DataTemplate>
                                                                    <Border BorderThickness="1" BorderBrush="Black">
                                                                        <TextBlock  Width="23" HorizontalAlignment="Stretch" Text="{Binding Converter={StaticResource conv_e_rot_ToString}}"/>
                                                                    </Border>
                                                                </DataTemplate>
                                                            </ListBox.ItemTemplate>
                                                        </ListBox>

                                                    </GroupBox>

                                                        <ToggleButton x:Name="tbtActiveReadPresentPosition" Content=" ActiveReading " IsChecked="True" Click="tbtActiveReadPresentPosition_Click"/>
                                                    </DockPanel>
                                                    <GroupBox Header="Active reading timer [1 to 1000] ms">
                                                                <Grid >
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition />
                                                                        <ColumnDefinition Width="42"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Slider Grid.Column="0" x:Name="slActiveReadingTimerInterval" Minimum="1" Maximum="1000" LargeChange="50" SmallChange="1" TickFrequency="50" Value="50" AutoToolTipPlacement="TopLeft" TickPlacement="BottomRight"
                                                                ValueChanged="slActiveReadingTimerInterval_ValueChanged"/>
                                                                    <TextBox Grid.Column="1" TextAlignment="Center" 
                                                                    Text="{Binding ElementName=slActiveReadingTimerInterval, Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </Grid>
                                                    </GroupBox>

                                                        <GroupBox Header="Select which data to read">
                                                            <ListBox SelectionMode="Single">
                                                                <ListBoxItem x:Name="lsiActualPostionEtc"
                                                                    Content="Actual Postion Speed Load etc."
                                                                             IsSelected="True"> 
                                                                    <ListBoxItem.ToolTip>
                                                                        <ToolTip>
                                                                            <StackPanel>
                                                                                <TextBlock FontWeight="Bold" Text="Active reading of Data from selected motors:"/>
                                                                                <ListBox>
                                                                                    <ListBoxItem>Present Position</ListBoxItem>
                                                                                    <ListBoxItem>Present Speed</ListBoxItem>
                                                                                    <ListBoxItem>Present Load</ListBoxItem>
                                                                                    <ListBoxItem>Present Voltage</ListBoxItem>
                                                                                    <ListBoxItem>Present Temperature</ListBoxItem>
                                                                                    <ListBoxItem>Registered Instruction</ListBoxItem>
                                                                                    <ListBoxItem>Moving state</ListBoxItem>
                                                                                </ListBox>
                                                                                <TextBlock Text="= register bytes from address [36-46] - not including [45]"/>
                                                                            </StackPanel>
                                                                        </ToolTip>
                                                                    </ListBoxItem.ToolTip>
                                                                </ListBoxItem>

                                                                <ListBoxItem x:Name="lsiWholeRegister"
                                                                    Content="Whole readable register"/>
                                                                </ListBox>
                                                </GroupBox>
                                        </StackPanel>
                                                </GroupBox>
                                                    <GroupBox Header="Statistics">
                                                        <ListBox x:Name="lsReadStatistics">
                                                        </ListBox>
                                                    </GroupBox>
                                                </StackPanel>
                                            </GroupBox>
                                </StackPanel>

                                <Grid Grid.Column="2" Background="#FFE5E5E5">
                                    <GroupBox Header="Control of individual motors">
                                        <DockPanel>
                                            <StackPanel DockPanel.Dock="Top"
                                                Orientation="Horizontal">
                                                <GroupBox Header="Chosen motor:">
                                                    <ListBox x:Name="lsChosenMotor" 
                                                             
                                                     ItemsSource="{Binding Source={StaticResource enumValues_rot}}"         
                                                     SelectionMode="Single" SelectionChanged="lsChosenMotor_SelectionChanged"
                                                     MinWidth="90">
                                                        <ListBox.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <WrapPanel IsItemsHost="True" HorizontalAlignment="Center"/>
                                                            </ItemsPanelTemplate>
                                                        </ListBox.ItemsPanel>
                                                        <ListBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <Border BorderThickness="1" BorderBrush="Black">
                                                                    <TextBlock  Width="23" HorizontalAlignment="Stretch" Text="{Binding Converter={StaticResource conv_e_rot_ToString}}">
                                                                        <!--<TextBlock.ToolTip >
                                                                            <ToolTip>
                                                                                <TextBlock  Width="23" HorizontalAlignment="Stretch" Text="{Binding Converter={StaticResource conv_e_rot_ToString}}"/>
                                                                            </ToolTip>
                                                                        </TextBlock.ToolTip >-->
                                                                    </TextBlock>

                                                                </Border>
                                                            </DataTemplate>
                                                        </ListBox.ItemTemplate>
                                                    </ListBox>

                                                    <!--Converter={StaticResource conv_e_rot_ToString}-->
                                                </GroupBox>
                                                <StackPanel>
                                                    <CheckBox x:Name="cbExampleDoubleClick" Content="Send by DoubleClick and Enter" 
                                                      DockPanel.Dock="Top" IsChecked="True"/>
                                                    <Button Name="btnSendExample" Content="Send example to [Chosen motor]" 
                                                            VerticalAlignment="Top" DockPanel.Dock="Top" MaxHeight="20" Click="btnSendExample_Click"/>
                                                </StackPanel>
                                            </StackPanel>
                                            <GroupBox 
                                                Grid.Column="2" x:Name="gpCmds" Header="Example commands" >
                                                <Grid>
                                                    <DockPanel>
                                                        <ListBox x:Name="lsCmdEx" DockPanel.Dock="Top" MinHeight="40" 
                                                             MouseDoubleClick="lsCmdEx_MouseDoubleClick" KeyDown="lsCmdEx_KeyDown" />
                                                    </DockPanel>
                                                </Grid>
                                            </GroupBox>
                                        </DockPanel>
                                    </GroupBox>
                                    <!--</Grid>-->
                                </Grid>

                            </Grid>
                        </DockPanel>

                        <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" />

                        <DockPanel Grid.Row="2" >
                            <GroupBox Header="Individual motor Position &amp; Speed gui control" Grid.Column="2">
                                <Grid x:Name="grAllMotors" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="100"/>
                                        <ColumnDefinition Width="2"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="2"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="2"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="15"/>
                                        <RowDefinition Height="2"/>
                                        <RowDefinition Height="15"/>
                                        <RowDefinition Height="2"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="2"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>


                                    <GridSplitter Grid.Row="1" Grid.ColumnSpan="10"  HorizontalAlignment="Stretch" Background="DarkGray"/>
                                    <GridSplitter Grid.Row="3" Grid.ColumnSpan="10"  HorizontalAlignment="Stretch" Background="DarkGray"/>
                                    <GridSplitter Grid.Row="5" Grid.ColumnSpan="10"  HorizontalAlignment="Stretch" Background="DarkGray"/>
                                    <GridSplitter Grid.Column="1" Grid.RowSpan="10" HorizontalAlignment="Stretch" Background="Gray"/>
                                    <GridSplitter Grid.Column="3" Grid.RowSpan="10" HorizontalAlignment="Stretch" Background="Gray"/>
                                    <GridSplitter Grid.Column="5" Grid.RowSpan="10" HorizontalAlignment="Stretch" Background="Gray"/>


                                    <StackPanel Grid.Column="0" Grid.Row="0">
                                        <Button MaxHeight="20" Content="Reset to default" VerticalAlignment="Top" Click="btnResetMotors_Click" />
                                    </StackPanel>
                                    <StackPanel Grid.Column="2" Grid.Row="0">
                                        <TextBlock Text="Yaw Motor"/>
                                    </StackPanel>
                                    <StackPanel Grid.Column="4" Grid.Row="0">
                                        <TextBlock Text="Pitch Motor"/>
                                    </StackPanel>
                                    <StackPanel Grid.Column="6" Grid.Row="0">
                                        <TextBlock Text="Roll Motor"/>
                                    </StackPanel>

                                    <StackPanel Grid.Column="0" Grid.Row="2">
                                                <Button MaxHeight="20" Content="Apply sliders" VerticalAlignment="Top" Click="btnStartMotors_Click" />
                                            </StackPanel>
                                    <StackPanel Grid.Column="2" Grid.Row="2">
                                        <CheckBox Content="Set values on change" IsChecked="True" x:Name="cbSendValuesToMotorYaw" Checked ="cbSetValues_ValueChanged" Unchecked="cbSetValues_ValueChanged"/>
                                    </StackPanel>
                                    <StackPanel Grid.Column="4" Grid.Row="2">
                                        <CheckBox Content="Set values on change" IsChecked="True" x:Name="cbSendValuesToMotorPitch" Checked ="cbSetValues_ValueChanged" Unchecked="cbSetValues_ValueChanged"/>
                                    </StackPanel>
                                    <StackPanel Grid.Column="6" Grid.Row="2">
                                        <CheckBox Content="Set values on change" IsChecked="True" x:Name="cbSendValuesToMotorRoll" Checked ="cbSetValues_ValueChanged" Unchecked="cbSetValues_ValueChanged"/>
                                    </StackPanel>


                                    <StackPanel Grid.Column="0" Grid.Row="4">
                                        <Label Content="Position [0 to 360]°" />
                                    </StackPanel>
                                    <StackPanel Grid.Column="2" Grid.Row="4">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="42"/>
                                            </Grid.ColumnDefinitions>
                                            <Slider Grid.Column="0"
                                                        x:Name="slAngleYaw"   
                                                        SmallChange="0.1" TickPlacement="TopLeft"
                                                        ValueChanged="slider_ValueChanged"
                                                            Minimum="0"
                                                        Ticks ="0,30,60,90,120,150,180,210,240,270,300,330,360,44,45,46,88,89,90,91,92,134,135,136,178,179,180,181,182,224,225,226,268,269,270,271,272,314,315,316,358,359,1,2"/>
                                            <!--TickFrequency="45" />-->
                                            <!--DataContext="{Binding Source={StaticResource motYawDataSource}}"
                                                Value="{Binding angleDeg, Mode=Default}"-->
                                            <TextBox Grid.Column="1" TextAlignment="Center" 
                                                             Text="{Binding ElementName=slAngleYaw, Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
                                        </Grid>
                                    </StackPanel>
                                    <StackPanel Grid.Column="4" Grid.Row="4">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="42"/>
                                            </Grid.ColumnDefinitions>
                                            <Slider Grid.Column="0"
                                                    x:Name="slAnglePitch" 
                                                    SmallChange="0.1" TickPlacement="TopLeft"
                                                    ValueChanged="slider_ValueChanged" 
                                                    Ticks ="0,30,60,90,120,150,180,210,240,270,300,330,360,44,45,46,88,89,90,91,92,134,135,136,178,179,180,181,182,224,225,226,268,269,270,271,272,314,315,316,358,359,1,2"
                                                    />
                                            <TextBox Grid.Column="1" TextAlignment="Center" 
                                                        Text="{Binding ElementName=slAnglePitch, Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
                                        </Grid>
                                    </StackPanel>
                                    <StackPanel Grid.Column="6" Grid.Row="4">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="42"/>
                                            </Grid.ColumnDefinitions>
                                            <Slider Grid.Column="0"
                                                    x:Name="slAngleRoll" 
                                                    SmallChange="0.1" TickPlacement="TopLeft"
                                                    ValueChanged="slider_ValueChanged" 
                                                    Ticks ="0,30,60,90,120,150,180,210,240,270,300,330,360,44,45,46,88,89,90,91,92,134,135,136,178,179,180,181,182,224,225,226,268,269,270,271,272,314,315,316,358,359,1,2"
                                                    />
                                            <TextBox Grid.Column="1" TextAlignment="Center" 
                                                        Text="{Binding ElementName=slAngleRoll, Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
                                        </Grid>
                                    </StackPanel>


                                    <StackPanel Grid.Column="0" Grid.Row="6">
                                        <Label Content="Speed [1 to 101], 0 = no speed control" />
                                    </StackPanel>
                                    <StackPanel Grid.Column="2" Grid.Row="6">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="42"/>
                                            </Grid.ColumnDefinitions>
                                            <Slider Grid.Column="0"
                                                    x:Name="slSpeedYaw" 
                                                    SmallChange="0.1" TickPlacement="TopLeft"
                                                    ValueChanged="slider_ValueChanged" 
                                                    />
                                            <TextBox Grid.Column="1" TextAlignment="Center" 
                                                        Text="{Binding ElementName=slSpeedYaw, Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
                                        </Grid>
                                    </StackPanel>
                                    <StackPanel Grid.Column="4" Grid.Row="6">
                                        <Grid Grid.Row="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="42"/>
                                            </Grid.ColumnDefinitions>
                                            <Slider Grid.Column="0"
                                                    x:Name="slSpeedPitch" 
                                                    SmallChange="0.1" TickPlacement="TopLeft"
                                                    ValueChanged="slider_ValueChanged" 
                                                    />
                                            <TextBox Grid.Column="1" TextAlignment="Center" 
                                                        Text="{Binding ElementName=slSpeedPitch, Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
                                        </Grid>
                                    </StackPanel>
                                    <StackPanel Grid.Column="6" Grid.Row="6">
                                        <Grid Grid.Row="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="42"/>
                                            </Grid.ColumnDefinitions>
                                            <Slider Grid.Column="0"
                                                    x:Name="slSpeedRoll" 
                                                    SmallChange="0.1" TickPlacement="TopLeft"
                                                    ValueChanged="slider_ValueChanged" 
                                                    />
                                            <TextBox Grid.Column="1" TextAlignment="Center" 
                                                        Text="{Binding ElementName=slSpeedRoll, Path=Value, UpdateSourceTrigger=PropertyChanged}"/>
                                        </Grid>
                                    </StackPanel>

                                </Grid>
                            </GroupBox>

                        </DockPanel>
                    </Grid>

                    </DockPanel>

                        <GroupBox Header="Motors' pc shadow register view:" Grid.Column="2">

                            <DockPanel>
                                        <Button DockPanel.Dock="Top"
                                            Content="Refresh table from shadow register (debug only - automatic otherwise)" Click="btnRefreshMotorData_Click"/>
                                        <!--<ToggleButton x:Name="tbtMotorDataRefresh" Content="Active preview" 
                                                      IsChecked="True"
                                                      Checked="tbtMotorDataRefresh_CheckedChanged"
                                                      Unchecked="tbtMotorDataRefresh_CheckedChanged"/>-->
                                    <!--Checked="tbtMotorDataRefresh_Checked" Unchecked="tbtMotorDataRefresh_Unchecked"/>-->
                                    <Grid>
                                        <DataGrid 
                                        x:Name="dgMotorData"
                                          DataContext="{StaticResource ItemCollectionViewSource_motorData}"
                                          ItemsSource="{Binding}"
                                          AutoGenerateColumns = "False" 
                                          CanUserAddRows="False"
                                            ScrollViewer.CanContentScroll="True"
                                           ScrollViewer.VerticalScrollBarVisibility="Visible"
                                        >
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Address" IsReadOnly="True" Binding="{Binding Path=address}" Width="5" />
                                            <DataGridTextColumn Header="Type" IsReadOnly="True" Binding="{Binding Path=letter_regByteType}" Width="5" />
                                            <DataGridTextColumn Header="Name" IsReadOnly="True" Binding="{Binding Path=name}" Width="120" />
                                                <DataGridTextColumn Header="Yaw" IsReadOnly="True" Binding="{Binding Path=yaw}" Width="2*" />
                                                <DataGridTextColumn Header="Pitch" IsReadOnly="True" Binding="{Binding Path=pitch}" Width="2*" />
                                                <DataGridTextColumn Header="Roll" IsReadOnly="True"  Binding="{Binding Path=roll}" Width="2*" />
                                        </DataGrid.Columns>
                                    </DataGrid>
                                        </Grid>
                            </DockPanel>
                            </GroupBox>
                    </Grid >
                </Grid>
            </TabItem>
            <TabItem x:Name="tiCamera" Header="Basler Camera" Background="GreenYellow">
                <Grid Background="GreenYellow">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="372*"/>
                        <ColumnDefinition Width="116*"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="489*"/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="Camera source selection" Grid.Column="0" Grid.ColumnSpan="2">
                        <StackPanel >
                            <Button x:Name="btnCamSourcesRefresh" Content="Rescan video sources" Click="btnCamSourcesRefresh_Click"/>
                            <DataGrid Grid.Column="1"
                                    x:Name="dgCams"
                                        DataContext="{StaticResource ItemCollectionViewSource_cam}"
                                        ItemsSource="{Binding}"
                                        AutoGenerateColumns = "False" 
                                        CanUserAddRows="False"
                                        SelectionChanged="dgCams_SelectionChanged"
                                    >
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="ID"  IsReadOnly="True" Binding="{Binding Path=DeviceID}" Width="10" />
                                    <DataGridTextColumn Header="Name" IsReadOnly="True"  Binding="{Binding Path=DeviceName}" Width="100"/>
                                    <DataGridTextColumn Header="Identifier" IsReadOnly="True"  Binding="{Binding Path=Identifier}" Width="200"/>
                                </DataGrid.Columns>
                            </DataGrid>
                            <GroupBox Header="All connected camera previews" >
                                <StackPanel>
                                    <ToggleButton x:Name="tbtActivePreviewList" Content="Active preview of All connected cameras" Checked="tbtActivePreviewList_Checked" />
                                    <StackPanel x:Name="spCamPreview" CanHorizontallyScroll="True" Orientation="Horizontal" MaxHeight="100">
                                        <!--there will be images generated here  camImages-->


                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </GroupBox>
                    <GridSplitter Grid.Column="2" Width="5" HorizontalAlignment="Stretch" />
                    <GroupBox Grid.Column="3" Header="Actual camera preview">
                        <StackPanel >
                            <ToggleButton x:Name="tbtActivePreviewActual" Content="Active preview of Actual camera" Checked="tbtActivePreviewActual_Checked" />
                            <Image x:Name="imgMain" Stretch="Fill"/>
                        </StackPanel>
                    </GroupBox>
                    <!--<Image HorizontalAlignment="Left" Height="100" Margin="227.5,10,0,0" VerticalAlignment="Top" Width="100" Source="pack://siteoforigin:,,,/pic/eyeout.png" Grid.Column="1"/>-->
                </Grid>
            </TabItem>

            <TabItem x:Name="tiOculus" Header="Logger" Background="DeepSkyBlue">
                <Grid Background="DeepSkyBlue">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch"/>

                    <GroupBox Header="Settings" Grid.Column="0">
                        <StackPanel>
                            <GroupBox Header="Log messages count">
                                <StackPanel>
                                    <CheckBox x:Name="cbLogShowCount" Content="Show Count in Status Label" IsEnabled="False"/>
                                    <CheckBox x:Name="cbLogSetMaximum" Content="Set logger message buffer count" IsChecked="True"
                                              Checked="cbLogSetMaximum_ValueChanged" Unchecked="cbLogSetMaximum_ValueChanged"/>
                                    <GroupBox Header="Logger message buffer" IsEnabled="{Binding ElementName=cbLogSetMaximum, Path=IsChecked}" >
                                        <TextBox x:Name="txLogBufferCount" PreviewTextInput="txLogBufferCount_PreviewTextInput" Text="5000"/>
                                    </GroupBox>
                                </StackPanel>
                            </GroupBox>
                            <!--<ListBox Name="listBoxZone" ItemsSource="{Binding TheList}" Height="115" Background="Azure">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <CheckBox Name="CheckBoxZone" Content="{Binding TheText}"
                                            Tag="{Binding TheValue}" Checked="CheckBoxZone_Checked" Margin="0,5,0,0"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>-->
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Export" Grid.Column="2">
                        <StackPanel>
                            <Button Content="Export whole log to csv" IsEnabled="False"/>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Information" Grid.Column="4">
                        <StackPanel>
                            <TextBlock TextWrapping="Wrap" >
                                * You can filter the log messages by selecting items from the list on left side of the logger. 
                            </TextBlock>
                            <TextBlock TextWrapping="Wrap">
                                * As it is stated in the tooltip, you can select all or unselect all by Rigth and Left mouse doubleclicking.
                            </TextBlock>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </TabItem>

            <TabItem x:Name="tiTelepresence" Header="EyeOut Telepresence" Foreground="Wheat" Background="Black">
                <!--<Grid Background="#FFE5E5E5">-->
                <Grid Background="Black" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="5"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <GridSplitter Grid.Row="1"  Height="5" VerticalAlignment="Stretch"/>
                        <GroupBox Grid.Row="0" Header="Actual camera preview">
                            <StackPanel >
                                <ToggleButton Content="Active preview" 
                                          IsChecked="{Binding IsChecked, ElementName=tbtActivePreviewActual}"
                                          >
                                    <!--binding to other tbtActivePreviewActual-->

                                </ToggleButton>
                                <Image x:Name="imgMain_TP" Stretch="Fill"/>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox  Grid.Row="2" Header="Acquisition data">
                            <ListBox>
                                <ListBoxItem Content="Oculus Acc data"/>
                                <ListBoxItem Content="Motor data"/>
                            </ListBox>
                        </GroupBox>
                    </Grid>
                    <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch"/>
                    <GroupBox Grid.Column="2" Header="Telepresence configuration">

                        <GroupBox.Resources>
                            <Style TargetType="CheckBox">
                                <!--<Setter Property="FontSize" Value="8" />-->
                                <!--<Setter Property="FontWeight" Value="Normal" />-->
                                <Setter Property="Foreground" Value="LimeGreen"/>
                            </Style>
                        </GroupBox.Resources>

                        <StackPanel>
                            <GroupBox Header="HUD">
                                <StackPanel>
                                    <CheckBox x:Name="cbHudTime" Content="Time" IsEnabled="False"/>
                                    <CheckBox x:Name="cbHudCompas" Content="Radar" IsEnabled="False"/>
                                    <CheckBox x:Name="cbHudMotorPosture" Content="Motor posture" IsEnabled="False"/>
                                </StackPanel>
                            </GroupBox>

                            <GroupBox Header="Motor Control">
                                <StackPanel>
                                    <CheckBox x:Name="cbWriteMotorData" Content="Send accelerometer data from oculus to position motors" IsChecked="False"/>
                                    <CheckBox x:Name="cbReadMotorData" Content="Read position motor data from motors" IsChecked="False"/>
                                </StackPanel>
                            </GroupBox>

                            <GroupBox Header="Gaze and Posture mark visibility">
                                <StackPanel>
                                    <CheckBox x:Name="cbDrawOculusGaze" Content="Oculus gaze" IsChecked="True"/>
                                    <CheckBox x:Name="cbDrawMotorPostureSent" Content="Posture sent to motors" IsChecked="True"/>
                                    <CheckBox x:Name="cbDrawMotorPostureSeen" Content="Motor posture read-out" IsChecked="True"/>
                                </StackPanel>
                            </GroupBox>
                            <GroupBox Header="Anti-sickness">
                                <StackPanel>
                                    <CheckBox Content="Skybox" IsEnabled="False"/>
                                    <CheckBox Content="Virtual Nose" IsEnabled="False"/>
                                </StackPanel>
                            </GroupBox>
                            <GroupBox Header="Safety">
                                <StackPanel>
                                    <CheckBox x:Name="cbSafe_Warning" Content="Safety warning before every telepresention" IsChecked="False"/>
                                    <CheckBox Content="Don't change the motor angle limits inside motors" IsChecked="True" IsEnabled="False"/>
                                </StackPanel>
                            </GroupBox>
                            <GroupBox Header="Config bundles">
                                <ListBox>
                                    Default settings
                                </ListBox>
                            </GroupBox>
                            <ToggleButton x:Name="tbtToggleTP" Content="Start Telepresence" Click="tbtToggleTP_Click" Checked="tbtToggleTP_ValueChanged" Unchecked="tbtToggleTP_ValueChanged" Background="GreenYellow" Height="42" FontWeight="ExtraBold" FontSize="26"/>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="About" Width="80" Background="WhiteSmoke">
                <Grid Background="WhiteSmoke">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="0" Source="Content/pic/eyeout.png" Height="42" Width="42" />
                            <StackPanel Grid.Column="1">
                                <TextBlock TextAlignment="Center" FontSize="42">
                                    EyeOut
                                </TextBlock>
                                <TextBlock TextAlignment="Center" FontSize="20">
                                    Telepresence frontend
                                </TextBlock>
                            </StackPanel>
                            <Image Grid.Column="2" Source="Content/pic/eyeout.png" Height="42" Width="42" FlowDirection="RightToLeft"/>
                        </Grid>
                        <ListBox MaxWidth="320">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Columns="2"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>

                            <ListBoxItem Content="Author: " HorizontalAlignment="Right"/>
                            <ListBoxItem Content="Bc. Daniel Davídek" />
                            <ListBoxItem Content="Creation Date: " HorizontalAlignment="Right"/>
                            <ListBoxItem Content="2014/2015" />
                            <ListBoxItem Content="Purpose: " HorizontalAlignment="Right"/>
                            <ListBoxItem Content="Masters thesis" />
                            <ListBoxItem Content="University: " HorizontalAlignment="Right"/>
                            <ListBoxItem Content="Brno University of Technology" />
                        </ListBox>
                        <GroupBox MaxWidth="420" Header="Used libraries">

                            <DataGrid Grid.Column="1"
                                x:Name="dgAboutLibraries"
                                  DataContext="{StaticResource ItemCollectionViewSource_aboutLibraries}"
                                  ItemsSource="{Binding}"
                                  AutoGenerateColumns = "False" 
                                  CanUserAddRows="False"
                                  MinHeight="100"
                                >
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Name"  IsReadOnly="True" Binding="{Binding Path=Name}" Width="76"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Version" IsReadOnly="True"  Binding="{Binding Path=Version}"></DataGridTextColumn>
                                    <DataGridTextColumn Header="Purpose" IsReadOnly="True"  Binding="{Binding Path=Purpose}" ></DataGridTextColumn>
                                    <DataGridTextColumn Header="License" IsReadOnly="True"  Binding="{Binding Path=License}" ></DataGridTextColumn>
                                    <DataGridTextColumn Header="About" IsReadOnly="True"  Binding="{Binding Path=About}" ></DataGridTextColumn>
                                    <DataGridTextColumn Header="Site" IsReadOnly="True"  Binding="{Binding Path=Site}" ></DataGridTextColumn>

                                </DataGrid.Columns>
                            </DataGrid>

                        </GroupBox>
                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>


        <!--LOG start-->
        <Grid Grid.Row="2" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0"  >
                <Grid.RowDefinitions>
                    <RowDefinition Height="32"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <!--DataContext="{Binding Path=C_State}"-->
                <StackPanel Grid.Row="0">
                    <!--<Label x:Name="tslConnected" BorderThickness="1" BorderBrush="Black"
                Content="{Binding Source={x:Static local:C_State.Spi}, Converter={StaticResource vcMyEnumToString},Mode=OneWay}" />-->
                    <!--<Content-->
                    <!--Content="{Binding Source={x:Static local:C_State.Spi}, Converter={StaticResource vcMyEnumToString}}" >-->
                    <!--<TextBlock Text="{Binding Converter={StaticResource vcMyEnumToString}}"/>-->

                    <Label x:Name="tslConnected" BorderThickness="1" BorderBrush="Black"
                           Padding="0" HorizontalAlignment="Center"
                    Content="{Binding Source={StaticResource ResourceKey=C_state}, Path=Spi,
                    Converter={StaticResource vcMyEnumToString},Mode =OneWay}" >
                        <Label.ToolTip>
                        <ToolTip>
                            <StackPanel>
                                <TextBlock >Serial port interface with motors</TextBlock>
                            </StackPanel>
                        </ToolTip>
                        </Label.ToolTip>
                    </Label>
                    <Label x:Name="lbLogCount" MouseDown="lbLogCount_MouseDown"
                           HorizontalAlignment="Center"
                        BorderThickness="1" BorderBrush="Black"
                           Padding="0" Content="Click Log.Count">
                           <!--Content="{Binding Source={x:Static local:C_Logger.Instance}, Mode =OneWay, Path=logMsgCount}">-->
                    <!--Content="{Binding Source={StaticResource ResourceKey=C_Logger}, Path=logMsgCount}" >-->
                        
                        <Label.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock >Number of all logged messages - actualize on click</TextBlock>
                                </StackPanel>
                            </ToolTip>
                        </Label.ToolTip>
                    </Label>
                </StackPanel>
                <DockPanel Grid.Row="1">
                    <ListBox DockPanel.Dock="Top"
                        x:Name="lsLogSrcSelction" 
                         ItemsSource="{Binding Source={StaticResource enumValues_LogMsgSource}}" 
                         SelectionMode="Multiple" SelectionChanged="CompleteFilter_Changed"
                         ScrollViewer.CanContentScroll="True"
                         ScrollViewer.VerticalScrollBarVisibility="Hidden"
                         ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                         MouseDoubleClick="lsLogSrcSelction_MouseDoubleClick"
                         >

                        <ListBox.ToolTip>
                            <ToolTip>
                                <StackPanel>
                                    <TextBlock >Left mouse double click selects all</TextBlock>
                                    <TextBlock >Right mouse double click unselects all</TextBlock>
                                </StackPanel>
                            </ToolTip>
                        </ListBox.ToolTip>
                    </ListBox>

                </DockPanel>

            </Grid>
            <DataGrid Grid.Column="1"
            x:Name="dgLog"
              DataContext="{StaticResource ItemCollectionViewSource_log}"
              ItemsSource="{Binding}"
              AutoGenerateColumns = "False" 
              CanUserAddRows="False"
            >
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Time"  IsReadOnly="True" Binding="{Binding Path=time, StringFormat=HH:mm:ss.fff}" Width="76" />
                    <DataGridTextColumn Header="#"  IsReadOnly="True" Binding="{Binding Path=queue}" Width="5" />
                    <DataGridTextColumn Header="Type" IsReadOnly="True"  Binding="{Binding Path=type}" Width="50" />
                    <DataGridTextColumn Header="Source" IsReadOnly="True"  Binding="{Binding Path=src}" />
                    <DataGridTextColumn Header="Message" IsReadOnly="True"  Binding="{Binding Path=msg}" MinWidth="50" />
                </DataGrid.Columns>
            </DataGrid>


        </Grid>
        <!--LOG end-->
    </Grid>
</Window>
