<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Basler.Pylon.Controls.WPF</name>
    </assembly>
    <members>
        <member name="T:Basler.Pylon.Controls.WPF.BaseParameterControl">
            <summary>
            Represents a custom control that is used by other parameter specific controls.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BaseParameterControl.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Basler.Pylon.Controls.WPF.BaseParameterControl"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BaseParameterControl.CopyToClipboard">
            <summary>
            Copies the current value to the clipboard.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BaseParameterControl.#ctor">
            <summary>
            Initializes a member of the <see cref="T:Basler.Pylon.Controls.WPF.BaseParameterControl"/> class.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.BaseParameterControl.HasFocusProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.BaseParameterControl.HasFocus"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.BaseParameterControl.CameraProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.BaseParameterControl.Camera"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.BaseParameterControl.ModelProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.BaseParameterControl.Model"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.BaseParameterControl.ParameterPathProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.BaseParameterControl.ParameterPath"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.BaseParameterControl.ParameterDisplayNameProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.BaseParameterControl.ParameterDisplayName"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.BaseParameterControl.ParameterProperty">
            <summary>
             The <see cref="P:Basler.Pylon.Controls.WPF.BaseParameterControl.Parameter"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.BaseParameterControl.IsNameVisibleProperty">
            <summary>
             The <see cref="P:Basler.Pylon.Controls.WPF.BaseParameterControl.IsNameVisible"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.BaseParameterControl.IsValueVisibleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.BaseParameterControl.IsValueVisible"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.BaseParameterControl.IsFocusVisualStyleEnabledProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.BaseParameterControl.IsFocusVisualStyleEnabled"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.BaseParameterControl.ValueRepresentatonProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.BaseParameterControl.ValueRepresentaton"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.BaseParameterControl.VisualPathProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.BaseParameterControl.VisualPath"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.BaseParameterControl.NameWidthProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.BaseParameterControl.NameWidth"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.BaseParameterControl.ValueWidthProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.BaseParameterControl.ValueWidth"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.BaseParameterControl.AllowDragProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.BaseParameterControl.AllowDrag"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.BaseParameterControl.IsGenericControlProperty">
            <summary>
            The is generic control property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.BaseParameterControl.CopyToClipboardCommand">
            <summary>
            The copy to clipboard command.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BaseParameterControl.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />Â routed event is raised on this
            element. Implement this method to add class handling for this event.
            </summary>
            <param name="e">
            The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> object that contains the event data. The event
            data reports that the left mouse button was pressed.
            </param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BaseParameterControl.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled attached <see cref="E:System.Windows.Input.Mouse.MouseMove"/> event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. 
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> object that contains the event data. The event data reports that the mouse was moved.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BaseParameterControl.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled routed <see cref="E:System.Windows.Input.Mouse.MouseUp"/> event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event. 
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> object that contains the event data. The event data reports that the mouse button was released.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BaseParameterControl.ReinitializeModel(System.Boolean)">
            <summary>
            Reinitializes the model.
            </summary>
            <remarks>The method is called after specific public dependency properties are changed or after
            the device state is changed (opened or closed).</remarks>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BaseParameterControl.CreateModel(Basler.Pylon.IParameter)">
            <summary>
            Creates a model.
            </summary>
            <param name="parameter">Parameter based on which a new model is built.</param>
            <returns><see cref="T:Basler.Pylon.Controls.WPF.BaseParameterModel"/></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BaseParameterControl.CreateEmptyModel">
            <summary>
            Creates an empty model.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BaseParameterControl.FindParameter(System.String)">
            <summary>
            Finds a parameter by its path.
            </summary>
            <param name="parameterPath">The parameter path.</param>
            <returns><see cref="T:Basler.Pylon.IParameter"/></returns>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterControl.HasFocus">
            <summary>
            Gets and sets the focus state of the control.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterControl.Camera">
            <summary>
            Gets and sets the binding path to the camera.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterControl.Model">
            <summary>
            Gets and sets the binding path to the device.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterControl.ParameterPath">
            <summary>
            Gets and sets the binding path to the camera parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterControl.ParameterDisplayName">
            <summary>
            Gets and sets the display name of the parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterControl.Parameter">
            <summary>
            Gets and sets the camera parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterControl.IsNameVisible">
            <summary>
            Gets and sets the visibility of a parameter name.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterControl.IsValueVisible">
            <summary>
            Gets and sets the visibility of a parameter value.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterControl.IsFocusVisualStyleEnabled">
            <summary>
            Gets and sets the status of the focus visual style.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterControl.ValueRepresentaton">
            <summary>
            Gets and sets the type of a camera parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterControl.VisualPath">
            <summary>
            Gets or sets the visual path.
            </summary>
            <value>The visual path displayed in tooltip.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterControl.NameWidth">
            <summary>
            Gets or sets the width of parameter name field.
            </summary>
            <value><see cref="T:System.Windows.GridLength"/>.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterControl.ValueWidth">
            <summary>
            Gets or sets the width of parameter value field.
            </summary>
            <value><see cref="T:System.Windows.GridLength"/>.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterControl.AllowDrag">
            <summary>
            Gets or sets a value indicating whether drag is allowed.
            </summary>
            <value><see langword="true" /> if drag is allowed; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterControl.IsGenericControl">
            <summary>
            Gets or sets a value indicating whether this instance is generic control.
            </summary>
            <value><c>true</c> if this instance is generic control; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterControl.ParameterNameFromPath">
            <summary>
            Gets a default parameter name.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.BaseParameterModel">
            <summary>
            Represents a model for an an abstract camera parameter.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.BaseParameterModel.parameter">
            <summary>
            The parameter of a camera.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BaseParameterModel.#ctor(Basler.Pylon.IParameter)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.BaseParameterModel"/> class.
            </summary>
            <param name="parameter">
            <see cref="T:Basler.Pylon.Controls.WPF.BaseParameterModel"/>
            </param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BaseParameterModel.OnParameterChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:Basler.Pylon.IParameter.ParameterChanged"/> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BaseParameterModel.OnPropertyChanged(System.String)">
            <summary>
            Occurs when the property has changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BaseParameterModel.Dispose">
            <summary>
            Performs application-specific tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BaseParameterModel.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources. Also releases managed resources, if desired.
            </summary>
            <param name="disposing">
            <c>True</c> to release both managed and unmanaged resources. <c>False</c> to release only
            unmanaged resources.
            </param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterModel.Parameter">
            <summary>
            Gets the camera parameter.
            </summary>
            <value>The camera parameter.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterModel.Name">
            <summary>
            Gets the name of a parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterModel.Description">
            <summary>
            Gets the description of a parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterModel.AccessMode">
            <summary>
            Gets the access mode of a parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterModel.Type">
            <summary>
            Gets the type of a parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterModel.IsReadable">
            <summary>
            Indicates if the parameter is readable.
            </summary>
            <value><c>true</c> if this parameter is readable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterModel.IsEditable">
            <summary>
            Indicates if the parameter is editable.
            </summary>
            <value><c>true</c> if this parameter is editable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterModel.Icon">
            <summary>
            Gets the icon of a parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterModel.VisualPath">
            <summary>
            Gets or sets the visual path.
            </summary>
            <value>The visual path.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseParameterModel.Unit">
            <summary>
            Gets the measurement unit for the feature.
            </summary>
            <value>The unit.</value>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.BaseParameterModel.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.BooleanParameterControl">
            <summary>
            Represents a control that allows the user to view and modify boolean parameters.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.BooleanParameterControl.CheckBoxStyleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.BooleanParameterControl.CheckBoxStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.BooleanParameterControl.CheckCommand">
            <summary>
            The command to check the boolean value.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.BooleanParameterControl.CheckOnCommand">
            <summary>
            The command to set the boolean value to <see langword="true" />.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.BooleanParameterControl.CheckOffCommand">
            <summary>
            The command to set the boolean value to <see langword="false" />.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BooleanParameterControl.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Basler.Pylon.Controls.WPF.BooleanParameterControl"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BooleanParameterControl.OnCheckExecuted(System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when the <see cref="F:Basler.Pylon.Controls.WPF.BooleanParameterControl.CheckCommand"/> is executed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BooleanParameterControl.OnCheckOnExecuted(System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when the <see cref="F:Basler.Pylon.Controls.WPF.BooleanParameterControl.CheckOnCommand"/> is executed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BooleanParameterControl.OnCheckOffExecuted(System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when the <see cref="F:Basler.Pylon.Controls.WPF.BooleanParameterControl.CheckOffCommand"/> is executed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BooleanParameterControl.CreateModel(Basler.Pylon.IParameter)">
            <summary>
            Creates a model.
            </summary>
            <param name="parameter">Parameter based on which a new model is built.</param>
            <returns>
                <see cref="T:Basler.Pylon.Controls.WPF.BaseParameterModel"/>
            </returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BooleanParameterControl.CreateEmptyModel">
            <summary>
            Creates an empty model.
            </summary>
            <returns>BaseParameterModel.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BooleanParameterControl.FindParameter(System.String)">
            <summary>
            Finds a parameter by its path.
            </summary>
            <param name="parameterPath">The parameter path.</param>
            <returns>
                <see cref="T:Basler.Pylon.IParameter"/>
            </returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BooleanParameterControl.CopyToClipboard">
            <summary>
            Copies the current value to the clipboard.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BooleanParameterControl.CheckBoxStyle">
            <summary>
            Gets or sets the CheckBox style.
            </summary>
            <value>The CheckBox style.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.BooleanParameterModel">
            <summary>
            Represents a model for a boolean parameter.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BooleanParameterModel.#ctor(Basler.Pylon.IBooleanParameter)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.BaseParameterModel"/> class.
            </summary>
            <param name="parameter">
            <see cref="T:Basler.Pylon.Controls.WPF.BaseParameterModel"/>
            </param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BooleanParameterModel.Value">
            <summary>
            Gets or sets the parameter value.
            </summary>
            <value>The parameter value.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.CommandParameterControl">
            <summary>
            Represents a control that allows the user to view and modify command parameters.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CommandParameterControl.ExecuteCommand">
            <summary>
            The command that executes the action defined by the parameter.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CommandParameterControl.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Basler.Pylon.Controls.WPF.CommandParameterControl"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CommandParameterControl.#ctor">
            <summary>
            Initializes members of the <see cref="T:Basler.Pylon.Controls.WPF.CommandParameterControl"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CommandParameterControl.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Basler.Pylon.Controls.WPF.CommandParameterControl"/> class.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CommandParameterControl.CommandExecutingEvent">
            <summary>
            The routed <see cref="E:Basler.Pylon.Controls.WPF.CommandParameterControl.CommandExecuting"/> event.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CommandParameterControl.ButtonStyleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.CommandParameterControl.ButtonStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CommandParameterControl.IsCommandExecutingProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.CommandParameterControl.IsCommandExecuting"/> dependency property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CommandParameterControl.Execute">
            <summary>
            Invoked when <see cref="F:Basler.Pylon.Controls.WPF.CommandParameterControl.ExecuteCommand"/> is executed.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CommandParameterControl.OnExecutingNotification">
            <summary>
            Sends a CommandExecutingEvent event.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CommandParameterControl.OnExecuteCommandExecuted(System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when <see cref="F:Basler.Pylon.Controls.WPF.CommandParameterControl.ExecuteCommand"/> is executed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CommandParameterControl.CreateModel(Basler.Pylon.IParameter)">
            <summary>
            Creates a new model.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CommandParameterControl.CreateEmptyModel">
            <summary>
            Creates an empty model.
            </summary>
            <returns>BaseParameterModel.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CommandParameterControl.FindParameter(System.String)">
            <summary>
            Finds a parameter by its path.
            </summary>
            <param name="parameterPath">The parameter path.</param>
            <returns><see cref="T:Basler.Pylon.IParameter"/></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CommandParameterControl.Dispose">
            <summary>
            Performs application-specific tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CommandParameterControl.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources. Also releases managed resources, if desired.
            </summary>
            <param name="disposing">
            <c>True</c> to release both managed and unmanaged resources. <c>False</c> to release only
            unmanaged resources.
            </param>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.CommandParameterControl.CommandExecuting">
            <summary>
            Occurs when the device list property is changed.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CommandParameterControl.ButtonStyle">
            <summary>
            Gets or sets the button style.
            </summary>
            <value>The button style.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CommandParameterControl.IsCommandExecuting">
            <summary>
            Gets or sets the IsCommandExecuting flag.
            </summary>
            <value>The button style.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.CommandParameterModel">
            <summary>
            Represents a model for a command parameter.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CommandParameterModel.#ctor(Basler.Pylon.ICommandParameter)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.CommandParameterModel"/> class.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CommandParameterModel.Execute">
            <summary>
            Executes the command action.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.DocumentationControl">
            <summary>
            Class DocumentationControl. !4D! was kann dieses Control?
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.DocumentationControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.DocumentationControl"/> class.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.DocumentationControl.ModelProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.DocumentationControl.Model"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.DocumentationControl.ParameterProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.DocumentationControl.Parameter"/> dependency property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.DocumentationControl.ReinitializeModel">
            <summary>
            Reinitializes the model.
            </summary>
            <remarks>The method is called after specific public dependency properties are changed or
            after device state is changed (opened or closed).</remarks>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.DocumentationControl.Model">
            <summary>
            Gets and sets the binding path to the device.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.DocumentationControl.Parameter">
            <summary>
            Gets and sets a camera parameter.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.DocumentationModel">
            <summary>
            Class DocumentationModel.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.DocumentationModel.parameter">
            <summary>
            The parameter of a camera.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.DocumentationModel.#ctor(Basler.Pylon.IParameter)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.DocumentationModel"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.DocumentationModel.Dispose">
            <summary>
            Performs application-specific tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.DocumentationModel.OnParameterChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:Basler.Pylon.IParameter.ParameterChanged"/> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.DocumentationModel.OnPropertyChanged(System.String)">
            <summary>
            Handles the <see cref="E:Basler.Pylon.IParameter.ParameterChanged"/> event.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.DocumentationModel.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources. Also releases managed resources, if desired.
            </summary>
            <param name="disposing">
            <c>True</c> to release both managed and unmanaged resources. <c>False</c> to release only
            unmanaged resources.
            </param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.DocumentationModel.Max">
            <summary>
            Gets the maximum value of a parameter.
            </summary>
            <value>The maximum value.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.DocumentationModel.Min">
            <summary>
            Gets the minimum value of a parameter.
            </summary>
            <value>The minimum value.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.DocumentationModel.Increment">
            <summary>
            Gets the increment value of a parameter.
            </summary>
            <value>The increment value.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.DocumentationModel.Description">
            <summary>
            Gets the description of a parameter.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.DocumentationModel.Type">
            <summary>
            Gets the type of a parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.DocumentationModel.Name">
            <summary>
            Gets the name of a parameter.
            </summary>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.DocumentationModel.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.EmptyParameterModel">
            <summary>
            Model that represents an empty parameter.
            </summary>
            <remarks>The model is used if any of parameter control properties necessary for working with node are not defined.</remarks>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.EmptyParameterModel.#ctor(Basler.Pylon.IParameter)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.EmptyParameterModel"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.EmptyParameterModel.GetEnumEntryDisplayName(System.String)">
            <summary>
            Gets the display name of the enum entry.
            </summary>
            <param name="enumEntryName">Name of the enum entry.</param>
            <returns>System.String.</returns>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.EmptyParameterModel.SmallIncrementCommand">
            <summary>
            Increments a value to small step.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.EmptyParameterModel.SmallDecrementCommand">
            <summary>
            Decrements a value to small step.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.EmptyParameterModel.LostFocusValueCommand">
            <summary>
            Move focus from value control to a parent one.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.EmptyParameterModel.IsEditable">
            <summary>
            Gets flag defines if parameter is editable.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.EmptyParameterModel.Representation">
            <summary>
            Defines value type of a parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.EmptyParameterModel.Value">
            <summary>
            Stub for value property.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.EmptyParameterModel.ValueAsString">
            <summary>
            Gets or sets value as a string.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.EmptyParameterModel.MinValue">
            <summary>
            Gets minimal value of a parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.EmptyParameterModel.MaxValue">
            <summary>
            Gets maximal value of a parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.EmptyParameterModel.SmallIncrementStep">
            <summary>
            Gets small increment step of a parameter value.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.EmptyParameterModel.LargeIncrementStep">
            <summary>
            Gets large increment step of a parameter value.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.EmptyParameterModel.HasMoreThanOneEntry">
            <summary>
            Gets a value indicating whether this instance has more than one entry.
            </summary>
            <value><c>true</c> if this instance has more than one entry; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.EmptyParameterModel.Entries">
            <summary>
            Gets the entries.
            </summary>
            <value>The entries.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.EmptyParameterModel.MaxTextLength">
            <summary>
            Gets the maximum length of the parameter value.
            </summary>
            <value>The maximum length of the parameter value.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.EnumParameterControl">
            <summary>
            Represents a control that allows the user to view and modify enum parameters.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.EnumParameterControl.ComboBoxStyleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.EnumParameterControl.ComboBoxStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.EnumParameterControl.IsDropDownOpenProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.EnumParameterControl.IsDropDownOpen"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.EnumParameterControl.OpenDropDownCommand">
            <summary>
            The command that can be used to open the combobox.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.EnumParameterControl.SelectPreviousCommand">
            <summary>
            The command that can be used to select the previous value.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.EnumParameterControl.SelectNextCommand">
            <summary>
            The command that can be used to select the next value.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.EnumParameterControl.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Basler.Pylon.Controls.WPF.EnumParameterControl"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.EnumParameterControl.OnOpenDropDownExecuted(System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Invoked when the <see cref="F:Basler.Pylon.Controls.WPF.EnumParameterControl.OpenDropDownCommand"/> is executed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.EnumParameterControl.OnSelectPreviousExecuted(System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Invoked when the <see cref="F:Basler.Pylon.Controls.WPF.EnumParameterControl.SelectPreviousCommand"/> is executed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.EnumParameterControl.OnSelectNextExecuted(System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Invoked when the <see cref="F:Basler.Pylon.Controls.WPF.EnumParameterControl.SelectNextCommand"/> is executed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.EnumParameterControl.CreateModel(Basler.Pylon.IParameter)">
            <summary>
            Creates a model.
            </summary>
            <param name="parameter">Parameter based on which a new model is built.</param>
            <returns>
                <see cref="T:Basler.Pylon.Controls.WPF.BaseParameterModel"/>
            </returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.EnumParameterControl.CreateEmptyModel">
            <summary>
            Creates an empty model.
            </summary>
            <returns>BaseParameterModel.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.EnumParameterControl.FindParameter(System.String)">
            <summary>
            Finds a parameter by its path.
            </summary>
            <param name="parameterPath">The parameter path.</param>
            <returns>
                <see cref="T:Basler.Pylon.IParameter"/>
            </returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.EnumParameterControl.CopyToClipboard">
            <summary>
            Copies the current value to the clipboard.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.EnumParameterControl.ComboBoxStyle">
            <summary>
            Gets or sets the ComboBox style.
            </summary>
            <value>The ComboBox style.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.EnumParameterControl.IsDropDownOpen">
            <summary>
            Gets or sets a value indicating whether the combobox drop down is open.
            </summary>
            <value><c>true</c> if the combobox drop down is open; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.EnumParameterModel">
            <summary>
            Model that represents an enumeration parameter.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.EnumParameterModel.#ctor(Basler.Pylon.IEnumParameter)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.BaseParameterModel"/> class.
            </summary>
            <param name="parameter">
                <see cref="T:Basler.Pylon.Controls.WPF.BaseParameterModel"/>
            </param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.EnumParameterModel.GetEnumEntryDisplayName(System.String)">
            <summary>
            Gets the display name of the enum entry.
            </summary>
            <param name="enumEntryName">Name of the enum entry.</param>
            <returns>System.String.</returns>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.EnumParameterModel.Entries">
            <summary>
            Gets the entries.
            </summary>
            <value>The entries.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.EnumParameterModel.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.EnumParameterModel.HasMoreThanOneEntry">
            <summary>
            Gets a value indicating whether this instance has more than one entry.
            </summary>
            <value><c>true</c> if this instance has more than one entry; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.EnumParameterModel.Parameter">
            <summary>
            Gets the parameter.
            </summary>
            <value>The parameter.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.FloatParameterControl">
            <summary>
            Represents a control that allows the user to view and modify float parameters.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.INumericParameterControl">
            <summary>
            Interface INumericParameterControl. Describe contols with slider.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.INumericParameterControl.SliderPopupHeightMode">
            <summary>
            Gets or sets the slider popup height mode.
            </summary>
            <value>The slider popup height mode.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.INumericParameterControl.SliderTickNumber">
            <summary>
            Gets or sets the slider tick number.
            </summary>
            <value>The slider tick number.</value>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.FloatParameterControl.TextBoxStyleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.FloatParameterControl.TextBoxStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.FloatParameterControl.DisplayPrecisionProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.FloatParameterControl.DisplayPrecision"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.FloatParameterControl.SliderPopupHeightModeProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.FloatParameterControl.SliderPopupHeightMode"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.FloatParameterControl.SliderTickNumberProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.FloatParameterControl.SliderTickNumber"/> dependency property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.FloatParameterControl.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Basler.Pylon.Controls.WPF.FloatParameterControl"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.FloatParameterControl.CreateModel(Basler.Pylon.IParameter)">
            <summary>
            Creates a new model.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.FloatParameterControl.CreateEmptyModel">
            <summary>
            Creates an empty model.
            </summary>
            <returns>BaseParameterModel.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.FloatParameterControl.FindParameter(System.String)">
            <summary>
            Finds a parameter by its path.
            </summary>
            <param name="parameterPath">The parameter path.</param>
            <returns>
                <see cref="T:Basler.Pylon.IParameter"/>
            </returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.FloatParameterControl.CopyToClipboard">
            <summary>
            Copies the current value to the clipboard.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.FloatParameterControl.TextBoxStyle">
            <summary>
            Gets or sets the TextBox style.
            </summary>
            <value>The TextBox style.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.FloatParameterControl.DisplayPrecision">
            <summary>
            Gets or sets the number of decimal places to be displayed.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.FloatParameterControl.SliderPopupHeightMode">
            <summary>
            Gets or sets the slider popup height mode.
            </summary>
            <value>The slider popup height mode.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.FloatParameterControl.SliderTickNumber">
            <summary>
            Gets or sets the slider tick number.
            </summary>
            <value>The slider tick number.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.FloatParameterModel">
            <summary>
            Model that represents a float parameter.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.INumericParameter.SmallIncrement">
            <summary>
            Increment value by a small step.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.INumericParameter.LargeIncrement">
            <summary>
            Increment value by a large step.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.INumericParameter.SmallDecrement">
            <summary>
            Decrement value by a small step.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.INumericParameter.LargeDecrement">
            <summary>
            Decrement value by a large step.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.FloatParameterModel.#ctor(Basler.Pylon.IFloatParameter)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.FloatParameterModel"/> class.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.FloatParameterModel.SmallIncrement">
            <summary>
            Increment value with small step.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.FloatParameterModel.LargeIncrement">
            <summary>
            Increment value with large step.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.FloatParameterModel.SmallDecrement">
            <summary>
            Decrement value with small step.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.FloatParameterModel.LargeDecrement">
            <summary>
            Decrement value with large step.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.FloatParameterModel.SetMin">
            <summary>
            Set minimal value.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.FloatParameterModel.SetMax">
            <summary>
            Set maximal value.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.FloatParameterModel.SmallIncrementCommand">
            <summary>
            Increments a value to small step.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.FloatParameterModel.SmallDecrementCommand">
            <summary>
            Decrements a value to small step.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.FloatParameterModel.LostFocusValueCommand">
            <summary>
            Move focus from value control to a parent one.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.FloatParameterModel.DisplayPrecision">
            <summary>
            Gets or sets the number of decimal places.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.FloatParameterModel.Value">
            <summary>
            Gets or sets long value of a parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.FloatParameterModel.ValueAsString">
            <summary>
            Gets or sets value as a string.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.FloatParameterModel.MinValue">
            <summary>
            Gets minimal value of a parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.FloatParameterModel.MaxValue">
            <summary>
            Gets maximal value of a parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.FloatParameterModel.SmallIncrementStep">
            <summary>
            Gets small increment step of a parameter value.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.FloatParameterModel.LargeIncrementStep">
            <summary>
            Gets large increment step of a parameter value.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.FloatParameterModel.Representation">
            <summary>
            Defines value type of a parameter.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.GenericParameterControl">
            <summary>
            Generic control that is bound to a parameter type. The control switches its visual template depending on the parameter type.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.GenericParameterControl.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Basler.Pylon.Controls.WPF.GenericParameterControl"/> class.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.GenericParameterControl.ParameterTypeProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.GenericParameterControl.ParameterType"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.GenericParameterControl.FloatDisplayPrecisionProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.GenericParameterControl.FloatDisplayPrecision"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.GenericParameterControl.SliderPopupHeightModeProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.GenericParameterControl.SliderPopupHeightMode"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.GenericParameterControl.SliderTickNumberProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.GenericParameterControl.SliderTickNumber"/> dependency property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.GenericParameterControl.CreateModel(Basler.Pylon.IParameter)">
            <summary>
            Creates a new model.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.GenericParameterControl.CreateEmptyModel">
            <summary>
            Creates an empty model.
            </summary>
            <returns>BaseParameterModel.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.GenericParameterControl.FindParameter(System.String)">
            <summary>
            Finds a parameter by its path.
            </summary>
            <param name="parameterPath">The parameter path.</param>
            <returns><see cref="T:Basler.Pylon.IParameter"/></returns>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.GenericParameterControl.ParameterType">
            <summary>
            Gets and sets the type of the parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.GenericParameterControl.FloatDisplayPrecision">
            <summary>
            Gets or sets the number of decimal places to be displayed for float parameters.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.GenericParameterControl.SliderPopupHeightMode">
            <summary>
            Gets or sets the slider popup height mode.
            </summary>
            <value>The slider popup height mode.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.GenericParameterControl.SliderTickNumber">
            <summary>
            Gets or sets the slider tick number.
            </summary>
            <value>The slider tick number.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.IntegerParameterControl">
            <summary>
            Represents a control that allows the user to view and modify integer parameters.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.IntegerParameterControl.TextBoxStyleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.IntegerParameterControl.TextBoxStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.IntegerParameterControl.CheckBoxStyleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.IntegerParameterControl.CheckBoxStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.IntegerParameterControl.SliderPopupHeightModeProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.IntegerParameterControl.SliderPopupHeightMode"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.IntegerParameterControl.SliderTickNumberProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.IntegerParameterControl.SliderTickNumber"/> dependency property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IntegerParameterControl.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Basler.Pylon.Controls.WPF.IntegerParameterControl"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IntegerParameterControl.CreateModel(Basler.Pylon.IParameter)">
            <summary>
            Creates a new model.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IntegerParameterControl.CreateEmptyModel">
            <summary>
            Creates an empty model.
            </summary>
            <returns>BaseParameterModel.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IntegerParameterControl.FindParameter(System.String)">
            <summary>
            Finds a parameter by its path.
            </summary>
            <param name="parameterPath">The parameter path.</param>
            <returns>
                <see cref="T:Basler.Pylon.IParameter"/>
            </returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IntegerParameterControl.CopyToClipboard">
            <summary>
            Copies the current value to the clipboard.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IntegerParameterControl.SliderTickNumber">
            <summary>
            Gets or sets the slider tick number.
            </summary>
            <value>The slider tick number.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IntegerParameterControl.SliderPopupHeightMode">
            <summary>
            Gets or sets the slider popup height mode.
            </summary>
            <value>The slider popup height mode.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IntegerParameterControl.TextBoxStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Controls.TextBox"/> style.
            </summary>
            <value>The <see cref="T:System.Windows.Controls.TextBox"/> style.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IntegerParameterControl.CheckBoxStyle">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Controls.CheckBox"/> style.
            </summary>
            <value>The <see cref="T:System.Windows.Controls.CheckBox"/> style.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.IntegerParameterModel">
            <summary>
            Model that represents an integer parameter.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IntegerParameterModel.#ctor(Basler.Pylon.IIntegerParameter)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.IntegerParameterModel"/> class.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IntegerParameterModel.SmallIncrement">
            <summary>
            Increment value with small step.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IntegerParameterModel.LargeIncrement">
            <summary>
            Increment value with large step.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IntegerParameterModel.SmallDecrement">
            <summary>
            Decrement value with small step.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IntegerParameterModel.LargeDecrement">
            <summary>
            Decrement value with large step.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IntegerParameterModel.SetMin">
            <summary>
            Set minimal value.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IntegerParameterModel.SetMax">
            <summary>
            Set maximal value.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IntegerParameterModel.Toggle">
            <summary>
            Toggles the boolean value.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IntegerParameterModel.SmallIncrementCommand">
            <summary>
            Increments a value to small step.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IntegerParameterModel.SmallDecrementCommand">
            <summary>
            Decrements a value to small step.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IntegerParameterModel.LostFocusValueCommand">
            <summary>
            Move focus from value control to a parent one.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IntegerParameterModel.Value">
            <summary>
            Gets or sets long value of a parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IntegerParameterModel.ValueAsString">
            <summary>
            Gets or sets value as a string.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IntegerParameterModel.MinValue">
            <summary>
            Gets minimal value of a parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IntegerParameterModel.MaxValue">
            <summary>
            Gets maximal value of a parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IntegerParameterModel.SmallIncrementStep">
            <summary>
            Gets small increment step of a parameter value.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IntegerParameterModel.LargeIncrementStep">
            <summary>
            Gets large increment step of a parameter value.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IntegerParameterModel.Representation">
            <summary>
            Defines value type of a parameter.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.LostFocusValueCommand`1">
            <summary>
            Command that moves the focus from value control to a parent one.
            </summary>Fir
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.LostFocusValueCommand`1.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command.  If the command does not require data to be passed, this object can
            be set to null.
            </param>
            <returns>true if this command can be executed; otherwise, false.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.LostFocusValueCommand`1.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command.  If the command does not require data to be passed, this object can
            be set to null.
            </param>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.LostFocusValueCommand`1.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.ParameterControlDragData">
            <summary>
            Get the data for <see cref="T:Basler.Pylon.Controls.WPF.BaseParameterControl"/> drag-and-drop operations. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterControlDragData.#ctor(Basler.Pylon.Controls.WPF.BaseParameterControl,Basler.Pylon.ICamera,Basler.Pylon.IParameter,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Object" /> class.
            </summary>
            <param name="control">The control.</param>
            <param name="camera">The camera.</param>
            <param name="parameter">The parameter.</param>
            <param name="parameterPath">The parameter path.</param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterControlDragData.Parameter">
            <summary>
            Gets the parameter.
            </summary>
            <value>The parameter.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterControlDragData.ParameterPath">
            <summary>
            Gets the parameter path.
            </summary>
            <value>The parameter path.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterControlDragData.Camera">
            <summary>
            Gets the camera.
            </summary>
            <value>The camera.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterControlDragData.ParameterControl">
            <summary>
            Gets the parameter control.
            </summary>
            <value>The parameter control.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.ParameterToolTipControl">
            <summary>
            Provides tooltip content for the parameter controls and <see cref="T:Basler.Pylon.Controls.WPF.ParameterTreeControl"/>.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterToolTipControl.ParameterNameProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.ParameterToolTipControl.ParameterName"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterToolTipControl.DescriptionProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.ParameterToolTipControl.Description"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterToolTipControl.VisualPathProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.ParameterToolTipControl.VisualPath"/> dependency property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterToolTipControl.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Basler.Pylon.Controls.WPF.ParameterToolTipControl"/> class.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterToolTipControl.ParameterName">
            <summary>
            Gets or sets the name of the parameter.
            </summary>
            <value>The name of the parameter.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterToolTipControl.Description">
            <summary>
            Gets or sets the description of the parameter.
            </summary>
            <value>The description of the parameter.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterToolTipControl.VisualPath">
            <summary>
            Gets or sets the visual path of the parameter.
            </summary>
            <value>The visual path of the parameter.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.SmallDecrementCommand">
            <summary>
            Command that decrements the value in small step.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.SmallDecrementCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command.  If the command does not require data to be passed, this object can
            be set to null.
            </param>
            <returns>true if this command can be executed; otherwise, false.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.SmallDecrementCommand.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command.  If the command does not require data to be passed, this object can
            be set to null.
            </param>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.SmallDecrementCommand.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.SmallIncrementCommand">
            <summary>
            Command that increments the value in small step.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.SmallIncrementCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command.  If the command does not require data to be passed, this object can
            be set to null.
            </param>
            <returns>true if this command can be executed; otherwise, false.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.SmallIncrementCommand.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command.  If the command does not require data to be passed, this object can
            be set to null.
            </param>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.SmallIncrementCommand.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.StringParameterControl">
            <summary>
            Represents a control that allows the user to view and modify string parameters.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.StringParameterControl.SetFocusCommand">
            <summary>
            The set focus command.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.StringParameterControl.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Basler.Pylon.Controls.WPF.StringParameterControl"/> class.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.StringParameterControl.TextBoxStyleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.StringParameterControl.TextBoxStyle"/> dependency property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.StringParameterControl.CreateModel(Basler.Pylon.IParameter)">
            <summary>
            Creates a new model.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.StringParameterControl.CreateEmptyModel">
            <summary>
            Creates an empty model.
            </summary>
            <returns>BaseParameterModel.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.StringParameterControl.FindParameter(System.String)">
            <summary>
            Finds a parameter by its path.
            </summary>
            <param name="parameterPath">The parameter path.</param>
            <returns><see cref="T:Basler.Pylon.IParameter"/></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.StringParameterControl.CopyToClipboard">
            <summary>
            Copies the current value to the clipboard.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.StringParameterControl.TextBoxStyle">
            <summary>
            Gets or sets the text box style.
            </summary>
            <value>The text box style.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.StringParameterModel">
            <summary>
            Model that represents a string parameter.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.StringParameterModel.#ctor(Basler.Pylon.IStringParameter)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.StringParameterModel"/> class.
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.StringParameterModel.LostFocusValueCommand">
            <summary>
            The command for moving the focus from value control to a parent one.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.StringParameterModel.Value">
            <summary>
            Gets or sets value of a parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.StringParameterModel.MaxTextLength">
            <summary>
            Gets the maximum length of the parameter value.
            </summary>
            <value>The maximum length of the parameter value.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Behaviors.CameraListerItemBehavior">
            <summary>
            Provides hot keys for Parameter Tree Control.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.CameraListerItemBehavior.IconRotationYProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.CameraListerItemBehavior.IconRotationY"/> attach
            </summary>
            <AttachedPropertyComments>
            <summary>Gets or sets the icon rotation around y-axis.</summary>
            <value>Icon rotation.</value>
            </AttachedPropertyComments>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.CameraListerItemBehavior.GetIconRotationY(System.Windows.DependencyObject)">
            <summary>
            Gets the icon rotation around y-axis.
            </summary>
            <param name="target">The target.</param>
            <returns>The rotation.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.CameraListerItemBehavior.SetIconRotationY(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the icon rotation around y-axis.
            </summary>
            <param name="target">The target.</param>
            <param name="value">The rotation value.</param>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.CameraListerItemBehavior.OpenCameraOnKeypressProperty">
            <summary>
            Identifies OpenDeviceOnKeypress attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.CameraListerItemBehavior.SetOpenCameraOnKeypress(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for device opening.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which OpenDeviceOnKeypress property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.CameraListerItemBehavior.GetOpenCameraOnKeypress(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for device opening.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which OpenDeviceOnKeypress property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.CameraListerItemBehavior.CloseCameraOnKeypressProperty">
            <summary>
            Identifies CloseDeviceOnKeypress attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.CameraListerItemBehavior.SetCloseCameraOnKeypress(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for device closing.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which CloseDeviceOnKeypress property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.CameraListerItemBehavior.GetCloseCameraOnKeypress(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for device closing.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which CloseDeviceOnKeypress property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.CameraListerItemBehavior.ShowCameraInfoOnKeypressProperty">
            <summary>
            Identifies ShowDeviceInfoOnKeypress attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.CameraListerItemBehavior.SetShowCameraInfoOnKeypress(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for device information panel opening.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which ShowDeviceInfoOnKeypress property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.CameraListerItemBehavior.GetShowCameraInfoOnKeypress(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for for device information panel closing.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which ShowDeviceInfoOnKeypress property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.CameraListerItemBehavior.HideCameraInfoOnKeypressProperty">
            <summary>
            Identifies HideDeviceInfoOnKeypress attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.CameraListerItemBehavior.SetHideCameraInfoOnKeypress(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for device information panel closing.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which HideDeviceInfoOnKeypress property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.CameraListerItemBehavior.GetHideCameraInfoOnKeypress(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for for device information panel closing.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which HideDeviceInfoOnKeypress property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.CameraListerItemBehavior.TriggerMouseEventsProperty">
            <summary>
            Identifies TriggerMouseEventsProperty attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.CameraListerItemBehavior.SetTriggerMouseEvents(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets a property defined if the mouse events are triggered.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which SetMouseDownFlagProperty property is applied.</param>
            <param name="value"><see cref="T:System.Boolean"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.CameraListerItemBehavior.GetTriggerMouseEvents(System.Windows.UIElement)">
            <summary>
            Gets a property defined if the mouse events are triggered.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which SetMouseDownFlagProperty property is applied.</param>
            <returns><see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.CameraListerItemBehavior.IsMouseDownProperty">
            <summary>
            Identifies IsMouseDownProperty attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.CameraListerItemBehavior.SetIsMouseDown(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets a list of key gestures which is used for device information panel closing.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which HideDeviceInfoOnKeypress property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.CameraListerItemBehavior.GetIsMouseDown(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for for device information panel closing.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which HideDeviceInfoOnKeypress property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Behaviors.ComboBoxKeyboardBehavior">
            <summary>
            Provides additional keyboard binding for <see cref="T:System.Windows.Controls.ComboBox"/>.
            </summary>
            <remarks>
                <para>The following keyboard bindings are provided by this behavior:</para>
                <list type="table">
                    <listheader>
                        <term>Shortcut</term>
                        <description>Action</description>
                    </listheader>
                    <item>
                        <term>Ctrl+W</term>
                        <description>Close combo box drop down.</description>
                    </item>
                    <item>
                        <term>Space</term>
                        <description>
                        Open the combobox if closed.  Select the highlighted value and close combo box drop down if opened.
                        </description>
                    </item>
                </list>
            </remarks>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ComboBoxKeyboardBehavior.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.Behaviors.ComboBoxKeyboardBehavior"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ComboBoxKeyboardBehavior.OnAttached">
            <summary>
            Called after the behavior is attached to an AssociatedObject.
            </summary>
            <remarks>
            Override this to hook up functionality to the AssociatedObject.
            </remarks>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ComboBoxKeyboardBehavior.OnDetaching">
            <summary>
            Called when the behavior is being detached from its AssociatedObject, but before it has actually occurred.
            </summary>
            <remarks>
            Override this to unhook functionality from the AssociatedObject.
            </remarks>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Behaviors.ComboBoxMoveFocusOnCloseBehavior">
            <summary>
            This behavior moves the focus from the combo box to the <see cref="P:Basler.Pylon.Controls.WPF.Behaviors.ComboBoxMoveFocusOnCloseBehavior.FocusTarget"/> after its drop down is closed.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.ComboBoxMoveFocusOnCloseBehavior.FocusTargetProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Behaviors.ComboBoxMoveFocusOnCloseBehavior.FocusTarget"/> dependency property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ComboBoxMoveFocusOnCloseBehavior.OnAttached">
            <summary>
            Called after the behavior is attached to an AssociatedObject.
            </summary>
            <remarks>
            Override this to hook up functionality to the AssociatedObject.
            </remarks>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ComboBoxMoveFocusOnCloseBehavior.OnDetaching">
            <summary>
            Called when the behavior is being detached from its AssociatedObject, but before it has actually occurred.
            </summary>
            <remarks>
            Override this to unhook functionality from the AssociatedObject.
            </remarks>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Behaviors.ComboBoxMoveFocusOnCloseBehavior.FocusTarget">
            <summary>
            Gets or sets the element to be focused after the drop down is closed.
            </summary>
            <value>The element to be focused after the drop down is closed.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Behaviors.DecimalKeyInputMode">
            <summary>
            Describes the way the <see cref="T:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior"/> handles the Decimal key.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.DecimalKeyInputMode.Native">
            <summary>
            Decimal key is handled by OS.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.DecimalKeyInputMode.DecimalSeparator">
            <summary>
            The decimal separator is inserted.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour">
            <summary>
            Provides hot keys for Float Parameter Control.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.ChangeSliderPopupStateOnKeypressProperty">
            <summary>
            Change slider popup state on keypress
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.SetChangeSliderPopupStateOnKeypress(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets the change slider popup state on keypress.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.GetChangeSliderPopupStateOnKeypress(System.Windows.UIElement)">
            <summary>
            Gets the change slider popup state on keypress.
            </summary>
            <param name="element">The element.</param>
            <returns>IList{KeyGesture}.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.SmallDecreaseOnKeypressProperty">
            <summary>
            Identifies SmallDecreaseOnKeypress attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.SetSmallDecreaseOnKeypress(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for small decrement of a parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which SmallDecreaseOnKeypress property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.GetSmallDecreaseOnKeypress(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for small decrement of a parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which SmallDecreaseOnKeypress property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.SmallIncreaseOnKeypressProperty">
            <summary>
            Identifies SmallIncreaseOnKeypress attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.SetSmallIncreaseOnKeypress(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for small increment of a parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which SmallIncreaseOnKeypress property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.GetSmallIncreaseOnKeypress(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for small increment of a parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which SmallIncreaseOnKeypress property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.LargeDecreaseOnKeypressProperty">
            <summary>
            Identifies LargeDecreaseOnKeypress attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.SetLargeDecreaseOnKeypress(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for large decrement of a parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which LargeDecreaseOnKeypress property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.GetLargeDecreaseOnKeypress(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for large decrement of a parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which LargeDecreaseOnKeypress property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.LargeIncreaseOnKeypressProperty">
            <summary>
            Identifies LargeIncreaseOnKeypress attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.SetLargeIncreaseOnKeypress(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for large increment of a parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which LargeIncreaseOnKeypress property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.GetLargeIncreaseOnKeypress(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for large increment of a parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which LargeIncreaseOnKeypress property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.SetMinOnKeypressProperty">
            <summary>
            Identifies SetMinOnKeypress attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.SetSetMinOnKeypress(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for setting minimal parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which SetMinOnKeypress property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.GetSetMinOnKeypress(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for for setting minimal parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which SetMinOnKeypress property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.SetMaxOnKeypressProperty">
            <summary>
            Identifies SetMaxOnKeypress attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.SetSetMaxOnKeypress(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for setting maximal parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which SetMaxOnKeypress property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.GetSetMaxOnKeypress(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for for setting maximal parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which SetMaxOnKeypress property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.MoveFocusToValueOnKeypressProperty">
            <summary>
            Identifies MoveFocusToValueOnKeypress attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.SetMoveFocusToValueOnKeypress(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for moving focus to value box.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which MoveFocusToValueOnKeypress property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.FloatParameterControlBehaviour.GetMoveFocusToValueOnKeypress(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for moving focus to value box.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which MoveFocusToValueOnKeypress property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Behaviors.FluidBindPropertyBehavior">
            <summary>
            Allows animating the changes from databound properties
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.FluidBindPropertyBehavior.BindingProperty">
            <summary>Backing DP for the Binding property</summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.FluidBindPropertyBehavior.DurationProperty">
            <summary>Backing DP for the Duration property</summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.FluidBindPropertyBehavior.PropertyNameProperty">
            <summary>Backing DP for the PropertyName property</summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.FluidBindPropertyBehavior.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.FluidBindPropertyBehavior.OnAttached">
            <summary>
            Perform initialization.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.FluidBindPropertyBehavior.OnDetaching">
            <summary>
            Perform cleanup.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.FluidBindPropertyBehavior.OnBindingChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Notification that the binding property has changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Behaviors.FluidBindPropertyBehavior.Binding">
            <summary>
            Binding to the value which is to be animated to.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Behaviors.FluidBindPropertyBehavior.Duration">
            <summary>
            Duration of the animation
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Behaviors.FluidBindPropertyBehavior.PropertyName">
            <summary>
            Name of the property to be set.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Behaviors.IgnoreMouseWheelBehavior">
            <summary>
            This behavior captures and eats MouseWheel events so that a nested UI Element does not
            prevent an outer scrollable control from scrolling.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.IgnoreMouseWheelBehavior.OnAttached">
            <summary>
            Called after the behavior is attached to an AssociatedObject.
            </summary>
            <remarks>Override this to hook up functionality to the AssociatedObject.</remarks>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.IgnoreMouseWheelBehavior.OnDetaching">
            <summary>
            Called when the behavior is being detached from its AssociatedObject, but before it has actually occurred.
            </summary>
            <remarks>Override this to unhook functionality from the AssociatedObject.</remarks>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour">
            <summary>
            Provides hot keys for Integer Parameter Control.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.ChangeSliderPopupStateOnKeypressProperty">
            <summary>
            Change slider popup state on keypress
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.SetChangeSliderPopupStateOnKeypress(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets the change slider popup state on keypress.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.GetChangeSliderPopupStateOnKeypress(System.Windows.UIElement)">
            <summary>
            Gets the change slider popup state on keypress.
            </summary>
            <param name="element">The element.</param>
            <returns>IList{KeyGesture}.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.SmallDecreaseOnKeypressProperty">
            <summary>
            Identifies SmallDecreaseOnKeypress attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.SetSmallDecreaseOnKeypress(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for small decrement of a parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which SmallDecreaseOnKeypress property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.GetSmallDecreaseOnKeypress(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for small decrement of a parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which SmallDecreaseOnKeypress property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.SmallIncreaseOnKeypressProperty">
            <summary>
            Identifies SmallIncreaseOnKeypress attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.SetSmallIncreaseOnKeypress(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for small increment of a parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which SmallIncreaseOnKeypress property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.GetSmallIncreaseOnKeypress(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for small increment of a parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which SmallIncreaseOnKeypress property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.LargeDecreaseOnKeypressProperty">
            <summary>
            Identifies LargeDecreaseOnKeypress attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.SetLargeDecreaseOnKeypress(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for large decrement of a parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which LargeDecreaseOnKeypress property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.GetLargeDecreaseOnKeypress(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for large decrement of a parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which LargeDecreaseOnKeypress property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.LargeIncreaseOnKeypressProperty">
            <summary>
            Identifies LargeIncreaseOnKeypress attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.SetLargeIncreaseOnKeypress(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for large increment of a parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which LargeIncreaseOnKeypress property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.GetLargeIncreaseOnKeypress(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for large increment of a parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which LargeIncreaseOnKeypress property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.SetMinOnKeypressProperty">
            <summary>
            Identifies SetMinOnKeypress attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.SetSetMinOnKeypress(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for setting minimal parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which SetMinOnKeypress property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.GetSetMinOnKeypress(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for for setting minimal parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which SetMinOnKeypress property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.SetMaxOnKeypressProperty">
            <summary>
            Identifies SetMaxOnKeypress attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.SetSetMaxOnKeypress(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for setting maximal parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which SetMaxOnKeypress property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.GetSetMaxOnKeypress(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for for setting maximal parameter value.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which SetMaxOnKeypress property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.MoveFocusToValueOnKeypressProperty">
            <summary>
            Identifies MoveFocusToValueOnKeypress attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.SetMoveFocusToValueOnKeypress(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for moving focus to value box.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which MoveFocusToValueOnKeypress property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.IntegerParameterControlBehaviour.GetMoveFocusToValueOnKeypress(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for moving focus to value box.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which MoveFocusToValueOnKeypress property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Behaviors.PanelReverseZIndexBehavior">
            <summary>
            Reverses Z-order of <see cref="T:System.Windows.Controls.Panel"/> elements.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.PanelReverseZIndexBehavior.OnAttached">
            <summary>
            Called after the behavior is attached to an AssociatedObject.
            </summary>
            <remarks>Override this to hook up functionality to the AssociatedObject.</remarks>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.PanelReverseZIndexBehavior.OnDetaching">
            <summary>
            Called when the behavior is being detached from its AssociatedObject, but before it has actually occurred.
            </summary>
            <remarks>Override this to unhook functionality from the AssociatedObject.</remarks>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Behaviors.PanelTabIndexBehavior">
            <summary>
            Assigns <see cref="M:System.Windows.Input.KeyboardNavigation.SetTabIndex(System.Windows.DependencyObject,System.Int32)"/> to <see cref="P:System.Windows.Controls.Panel.Children"/>
            corresponding to their order.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.PanelTabIndexBehavior.OnAttached">
            <summary>
            Called after the behavior is attached to an AssociatedObject.
            </summary>
            <remarks>Override this to hook up functionality to the AssociatedObject.</remarks>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.PanelTabIndexBehavior.OnDetaching">
            <summary>
            Called when the behavior is being detached from its AssociatedObject, but before it has actually occurred.
            </summary>
            <remarks>Override this to unhook functionality from the AssociatedObject.</remarks>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeBehavior">
            <summary>
            Provides hot keys for Parameter Tree Control.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeBehavior.ShowHideDescriptionKeysProperty">
            <summary>
            Identifies ShowHideDescriptionKeys attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeBehavior.SetShowHideDescriptionKeys(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for show or hide a parameter description.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which ShowHideDescriptionKeys property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeBehavior.GetShowHideDescriptionKeys(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for show or hide a parameter description.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which ShowHideDescriptionKeys property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeBehavior.RefreshKeysProperty">
            <summary>
            Identifies RefreshKeys attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeBehavior.SetRefreshKeys(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for refreshing a Parameter Tree.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which RefreshKeys property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeBehavior.GetRefreshKeys(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for refreshing a Parameter Tree.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which RefreshKeys property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeBehavior.PollingOnOffKeysProperty">
            <summary>
            Identifies PollingOnOffKeys attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeBehavior.SetPollingOnOffKeys(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for turn on/off a parameter polling.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which PollingOnOffKeys property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeBehavior.GetPollingOnOffKeys(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for turn on/off a parameter polling.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which PollingOnOffKeys property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeBehavior.ExpandAllSecondLevelCategoriesKeysProperty">
            <summary>
            Identifies ExpandAllSecondLevelCategoriesKeys attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeBehavior.SetExpandAllSecondLevelCategoriesKeys(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for expanding all second level items in the Parameter Tree.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which ExpandAllSecondLevelCategoriesKeys property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeBehavior.GetExpandAllSecondLevelCategoriesKeys(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for expanding all second level items in the Parameter Tree.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which ExpandAllSecondLevelCategoriesKeys property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeBehavior.CollapseAllSecondLevelCategoriesKeysProperty">
            <summary>
            Identifies CollapseAllSecondLevelCategoriesKeys attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeBehavior.SetCollapseAllSecondLevelCategoriesKeys(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for collapsing all second level items in the Parameter Tree.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which CollapseAllSecondLevelCategoriesKeys property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeBehavior.GetCollapseAllSecondLevelCategoriesKeys(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for collapsing all second level items in the Parameter Tree.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which CollapseAllSecondLevelCategoriesKeys property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeBehavior.MoveSelectionDownKeysProperty">
            <summary>
            Identifies MoveSelectionDownKeys attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeBehavior.SetMoveSelectionDownKeys(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for navigation down through the parameter tree.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which MoveSelectionDownKeys property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeBehavior.GetMoveSelectionDownKeys(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for navigation down through the parameter tree.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which MoveSelectionDownKeys property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeBehavior.MoveSelectionUpKeysProperty">
            <summary>
            Identifies MoveSelectionUpKeys attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeBehavior.SetMoveSelectionUpKeys(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for navigation up through the parameter tree.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which MoveSelectionUpKeys property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeBehavior.GetMoveSelectionUpKeys(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for navigation up through the parameter tree.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which MoveSelectionUpKeys property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewItemBehavior">
            <summary>
            Provides hot keys for Parameter Tree Items.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewItemBehavior.ExpandBySingleClickProperty">
            <summary>
            Identifies ExpandBySingleClick attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewItemBehavior.SetExpandBySingleClick(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets flag which define if expand Parameter Tree View Item by single mouse click.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which ExpandBySingleClick property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewItemBehavior.GetExpandBySingleClick(System.Windows.UIElement)">
            <summary>
            Gets flag which define if expand Parameter Tree View Item by single mouse click.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which ExpandBySingleClick property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewItemBehavior.ContentPresenterProperty">
            <summary>
            Identifies ContentPresenter attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewItemBehavior.SetContentPresenter(System.Windows.UIElement,System.Windows.Controls.ContentPresenter)">
            <summary>
            Sets <see cref="T:System.Windows.Controls.ContentPresenter"/> associated with Parameter Tree View Item.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which ContentPresenter property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewItemBehavior.GetContentPresenter(System.Windows.UIElement)">
            <summary>
            Gets <see cref="T:System.Windows.Controls.ContentPresenter"/> associated with Parameter Tree View Item.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which ContentPresenter property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewItemBehavior.ExpandCollapseSingleCategoryKeysProperty">
            <summary>
            Identifies ExpandCollapseSingleCategoryKeys attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewItemBehavior.SetExpandCollapseSingleCategoryKeys(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for expand or collapse a single Parameter Tree View Item.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which ExpandCollapseSingleCategoryKeys property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewItemBehavior.GetExpandCollapseSingleCategoryKeys(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for expand or collapse a single Parameter Tree View Item.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which ExpandCollapseSingleCategoryKeys property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewItemBehavior.ExpandSingleCategoryKeysProperty">
            <summary>
            Identifies ExpandSingleCategoryKeys attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewItemBehavior.SetExpandSingleCategoryKeys(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for expand a single Parameter Tree View Item.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which ExpandSingleCategoryKeys property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewItemBehavior.GetExpandSingleCategoryKeys(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for expand a single Parameter Tree View Item.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which ExpandSingleCategoryKeys property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewItemBehavior.CollapseSingleCategoryKeysProperty">
            <summary>
            Identifies CollapseSingleCategoryKeys attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewItemBehavior.SetCollapseSingleCategoryKeys(System.Windows.UIElement,System.Collections.Generic.IList{System.Windows.Input.KeyGesture})">
            <summary>
            Sets a list of key gestures which is used for collapse a single Parameter Tree View Item.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which ExpandSingleCategoryKeys property is applied.</param>
            <param name="value">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewItemBehavior.GetCollapseSingleCategoryKeys(System.Windows.UIElement)">
            <summary>
            Gets a list of key gestures which is used for collapse a single Parameter Tree View Item.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which ExpandSingleCategoryKeys property is applied.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewItemBehavior.IsMouseDownProperty">
            <summary>
            Identifies IsMouseDownProperty attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewItemBehavior.SetIsMouseDown(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets a flag if a mouse button is clicked down.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which HideDeviceInfoOnKeypress property is applied.</param>
            <param name="value"><see cref="T:System.Boolean"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewItemBehavior.GetIsMouseDown(System.Windows.UIElement)">
            <summary>
            Gets a flag if a mouse button is clicked down.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which HideDeviceInfoOnKeypress property is applied.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewItemBehavior.OnPreviewKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides expand/collapse hot keys actions.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e"><see cref="T:System.Windows.Input.KeyEventArgs"/></param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewLeafItemBehavior">
            <summary>
            Provides custom behavior for Parameter Tree Leaf Items.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewLeafItemBehavior.IsSetFocusToParameterControlProperty">
            <summary>
            Identifies IsSetFocusToParameterControlProperty attached property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewLeafItemBehavior.SetIsSetFocusToParameterControl(System.Windows.UIElement,System.Boolean)">
            <summary>
            Sets a flag if a focus will be set to a parameter control.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which IsSetFocusToParameterControl property is applied.</param>
            <param name="value"><see cref="T:System.Boolean"/>.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ParameterTreeViewLeafItemBehavior.GetIsSetFocusToParameterControl(System.Windows.UIElement)">
            <summary>
            Gets a flag if a focus will be set to a parameter control.
            </summary>
            <param name="element"><see cref="T:System.Windows.UIElement"/> to which IsSetFocusToParameterControl property is applied.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Behaviors.ScrollViewerCenterBehavior">
            <summary>
            This behavior can be attached to scroll viewers in order to center the current scroll offset around a given center
            point. In the context of this prototype it is used to "fix" the position of the slider thumb while zooming the slider
            scale.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Behaviors.SetValueFromMouseInTrackBehavior">
            <summary>
            This behavior can be attached to sliders in order to bypass the sliders repeat buttons and directly
            set the slider's value (i.e. "thumb position") from the current mouse location.
            <remarks>
            The behavior is still buggy in that it does not allow to snap the value to the slider's tick grid.
            </remarks>
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.SetValueFromMouseInTrackBehavior.IsAnimatedProperty">
            <summary>
            The is animated property
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.SetValueFromMouseInTrackBehavior.OnAttached">
            <summary>
            Called after the behavior is attached to an AssociatedObject.
            </summary>
            <remarks>Override this to hook up functionality to the AssociatedObject.</remarks>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.SetValueFromMouseInTrackBehavior.OnDetaching">
            <summary>
            Called when the behavior is being detached from its AssociatedObject, but before it has actually occurred.
            </summary>
            <remarks>Override this to unhook functionality from the AssociatedObject.</remarks>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.SetValueFromMouseInTrackBehavior.SnapToTick(System.Double)">
            <summary>
            Snap the input 'value' to the closest tick.
            If input value is exactly in the middle of 2 surrounding ticks, it will be snapped to the tick that has greater value.
            </summary>
            <param name="value">Value that want to snap to closest Tick.</param>
            <returns>Snapped value if IsSnapToTickEnabled is 'true'. Otherwise, returns un-snaped value.</returns>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Behaviors.SetValueFromMouseInTrackBehavior.IsAnimated">
            <summary>
            Gets or sets a value indicating whether this instance is animated.
            </summary>
            <value><c>true</c> if this instance is animated; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Behaviors.TextBoxBehavior">
            <summary>
            Provides additional behaviors for <see cref="T:System.Windows.Controls.TextBox"/>.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.TextBoxBehavior.SelectTextOnFocusProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Behaviors.TextBoxBehavior.SelectTextOnFocus"/> attached property.
            </summary>
            <AttachedPropertyComments>
            <summary> Gets the value indicating whether the text in the <see cref="T:System.Windows.Controls.TextBox"/> must be
            selected when the TextBox receives focus.
            </summary>
            <value><see langword="true"/> if the text must be selected when the TextBox receives focus; <see langword="false"/> otherwise.</value>
            </AttachedPropertyComments>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.TextBoxBehavior.GetSelectTextOnFocus(System.Windows.Controls.TextBox)">
            <summary>
            Gets the value indicating whether the text in the <paramref name="target"/> <see cref="T:System.Windows.Controls.TextBox"/> must be
            selected when the TextBox receives focus.
            </summary>
            <param name="target">The target <see cref="T:System.Windows.Controls.TextBox"/>.</param>
            <returns><see langword="true"/> if the text must be selected when the TextBox receives focus; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.TextBoxBehavior.SetSelectTextOnFocus(System.Windows.Controls.TextBox,System.Boolean)">
            <summary>
            Sets the value indicating whether the text in the <paramref name="target"/> <see cref="T:System.Windows.Controls.TextBox"/> must be
            selected when the TextBox receives focus.
            </summary>
            <param name="target">The target <see cref="T:System.Windows.Controls.TextBox"/>.</param>
            <param name="value"> if the text must be selected when the TextBox receives focus; <see langword="false"/> otherwise.</param>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.TextBoxBehavior.SelectAllTextByDoubleClickProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Behaviors.TextBoxBehavior.SelectAllTextByDoubleClick"/> attached property.
            </summary>
            <AttachedPropertyComments>
            <summary> Gets the value indicating whether the text in the <see cref="T:System.Windows.Controls.TextBox"/> must be
            selected when the TextBox text is double clicked.
            </summary>
            <value><see langword="true"/> if the text must be selected when the TextBox text is double clicked; <see langword="false"/> otherwise.</value>
            </AttachedPropertyComments>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.TextBoxBehavior.GetSelectAllTextByDoubleClick(System.Windows.Controls.TextBox)">
            <summary>
            Gets the value indicating whether the text in the <paramref name="target"/> <see cref="T:System.Windows.Controls.TextBox"/> must be
            selected when the TextBox text is double clicked.
            </summary>
            <param name="target">The target <see cref="T:System.Windows.Controls.TextBox"/>.</param>
            <returns><see langword="true"/> if the text must be selected when the TextBox text is double clicked; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.TextBoxBehavior.SetSelectAllTextByDoubleClick(System.Windows.Controls.TextBox,System.Boolean)">
            <summary>
            Sets the value indicating whether the text in the <paramref name="target"/> <see cref="T:System.Windows.Controls.TextBox"/> must be
            selected when the TextBox text is double clicked.
            </summary>
            <param name="target">The target <see cref="T:System.Windows.Controls.TextBox"/>.</param>
            <param name="value"> if the text must be selected when the TextBox text is double clicked; <see langword="false"/> otherwise.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior">
            <summary>
            Filters the keyboard input to <see cref="T:System.Windows.Controls.TextBox"/> in order to allow users to enter only correct
            <see cref="T:System.Double"/> values.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.DecimalPlacesProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.DecimalPlaces"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.AllowNegativeProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.AllowNegative"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.CultureProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.Culture"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.DecimalKeyInputModeProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.DecimalKeyInputMode"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.AlwaysAcceptCommaAsDecimalSeparatorProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.AlwaysAcceptCommaAsDecimalSeparator"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.AlwaysAcceptPeriodAsDecimalSeparatorProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.AlwaysAcceptPeriodAsDecimalSeparator"/> dependency property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.OnAttached">
            <summary>
            Called after the behavior is attached to an AssociatedObject.
            </summary>
            <remarks>Override this to hook up functionality to the AssociatedObject.</remarks>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.OnDetaching">
            <summary>
            Called when the behavior is being detached from its AssociatedObject, but before it has actually occurred.
            </summary>
            <remarks>Override this to unhook functionality from the AssociatedObject.</remarks>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.SendDecimalSeparator(System.String)">
            <summary>
            Sends the decimal separator to the focused element.
            </summary>
            <param name="separator">The separator.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.GetTextFromKey(System.Windows.Input.Key)">
            <summary>
            Gets the text from key.
            </summary>
            <param name="key">The key.</param>
            <returns>The string corresponding to the key.</returns>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.DecimalPlaces">
            <summary>
            Gets or sets the number of decimal places.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.AllowNegative">
            <summary>
            Gets or sets a value indicating whether negative values are accepted.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.Culture">
            <summary>
            Gets or sets the number culture. If not set, <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/> will be used.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.DecimalKeyInputMode">
            <summary>
                <para>
                Gets or sets the input mode for the decimal key (located on keypad).
                </para>
                <para>
                If the mode is set to <see cref="F:Basler.Pylon.Controls.WPF.Behaviors.DecimalKeyInputMode.Native"/> the decimal
                key will
                be handled by the OS.
                </para>
                <para>
                If the mode is set to <see cref="F:Basler.Pylon.Controls.WPF.Behaviors.DecimalKeyInputMode.DecimalSeparator"/>
                the decimal separator of the specified <see cref="P:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.Culture"/> will be inserted.
                </para>
                <para>
                The default value is <see cref="F:Basler.Pylon.Controls.WPF.Behaviors.DecimalKeyInputMode.DecimalSeparator"/>.
                </para>
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.AlwaysAcceptCommaAsDecimalSeparator">
            <summary>
            Gets or sets a value indicating whether the control will always accept Comma key as decimal separator
            regardless of the culture settings.
            </summary>
            <value>
            <see langword="true" /> if the control will always accept Comma key as a decimal separator;
            <see langword="false" /> if the control will accept Comma key as a decimal separator only if it is set
            as the decimal separator in the culture settings.
            </value>
            <remarks>
            If the Comma is not the current decimal separator, the valid decimal separator will be inserted
            when the user presses the Comma key.
            </remarks>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.AlwaysAcceptPeriodAsDecimalSeparator">
            <summary>
            Gets or sets a value indicating whether the control will always accept Period key as decimal separator
            regardless of the culture settings.
            </summary>
            <value>
            <see langword="true" /> if the control will always accept Period key as a decimal separator;
            <see langword="false" /> if the control will accept Period key as a decimal separator only if it is set
            as the decimal separator in the culture settings.
            </value>
            <remarks>
            If the Period is not the current decimal separator, the valid decimal separator will be inserted
            when the user presses the Period key.
            </remarks>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.ActualCulture">
            <summary>
            Gets the actual culture.
            </summary>
            <value>The actual culture.</value>
            <remarks>
            If <see cref="P:Basler.Pylon.Controls.WPF.Behaviors.TextBoxDoubleInputBehavior.Culture"/> is not <see langword="null"/>, its value is returned.
            Otherwise <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/> is returned.
            </remarks>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Behaviors.TextBoxIntegerInputBehavior">
            <summary>
            Filters the keyboard input to <see cref="T:System.Windows.Controls.TextBox"/> in order to allow users to enter only correct 
            <see cref="T:System.Int64"/> values.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.TextBoxIntegerInputBehavior.AllowNegativeProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Behaviors.TextBoxIntegerInputBehavior.AllowNegative"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.TextBoxIntegerInputBehavior.CultureProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Behaviors.TextBoxIntegerInputBehavior.Culture"/> dependency property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.TextBoxIntegerInputBehavior.OnAttached">
            <summary>
            Called after the behavior is attached to an AssociatedObject.
            </summary>
            <remarks>Override this to hook up functionality to the AssociatedObject.</remarks>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.TextBoxIntegerInputBehavior.OnDetaching">
            <summary>
            Called when the behavior is being detached from its AssociatedObject, but before it has actually occurred.
            </summary>
            <remarks>Override this to unhook functionality from the AssociatedObject.</remarks>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Behaviors.TextBoxIntegerInputBehavior.AllowNegative">
            <summary>
            Gets or sets a value indicating whether negative values are accepted.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Behaviors.TextBoxIntegerInputBehavior.Culture">
            <summary>
            Gets or sets the number culture. If not set, <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/> will be used.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Behaviors.ValueFieldBehavior">
            <summary>
            Provides additional behaviors for parameter value field.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.ValueFieldBehavior.CommandOnFocusProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Behaviors.TextBoxBehavior.CommandOnFocus"/> attached property.
            </summary>
            <AttachedPropertyComments>
            <summary> Gets the command which is called when <see cref="T:System.Windows.Controls.TextBox"/> or <see cref="T:System.Windows.Controls.ComboBox"/> receives focus.
            </summary>
            </AttachedPropertyComments>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ValueFieldBehavior.GetCommandOnFocus(System.Windows.UIElement)">
            <summary>
            Gets the command which is called when <paramref name="target"/> <see cref="T:System.Windows.Controls.TextBox"/> or <see cref="T:System.Windows.Controls.ComboBox"/> receives focus.
            </summary>
            <param name="target">The target <see cref="T:System.Windows.Controls.TextBox"/>.</param>
            <returns><see cref="T:System.Windows.Input.ICommand"/></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ValueFieldBehavior.SetCommandOnFocus(System.Windows.UIElement,System.Windows.Input.ICommand)">
            <summary>
            Sets the command which is called when <paramref name="target"/> <see cref="T:System.Windows.Controls.TextBox"/> or <see cref="T:System.Windows.Controls.ComboBox"/> receives focus.
            </summary>
            <param name="target">The target <see cref="T:System.Windows.Controls.TextBox"/>.</param>
            <param name="value"><see cref="T:System.Windows.Input.ICommand"/></param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Behaviors.ZoomToFitOnStartedStreamingBehavior">
            <summary>
            This behavior automatically calls <see cref="M:Basler.Pylon.Controls.WPF.ImageViewer.ZoomToFit"/>
            of the <see cref="P:Basler.Pylon.Controls.WPF.StreamController.ActiveViewer"/> when the streaming is started.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.ZoomToFitOnStartedStreamingBehavior.ConditionProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Behaviors.ZoomToFitOnStartedStreamingBehavior.Condition"/> dependency property,
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ZoomToFitOnStartedStreamingBehavior.OnAttached">
            <summary>
            Called after the behavior is attached to an AssociatedObject.
            </summary>
            <remarks>
            Override this to hook up functionality to the AssociatedObject.
            </remarks>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Behaviors.ZoomToFitOnStartedStreamingBehavior.OnDetaching">
            <summary>
            Called when the behavior is being detached from its AssociatedObject, but before it has actually occurred.
            </summary>
            <remarks>
            Override this to unhook functionality from the AssociatedObject.
            </remarks>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Behaviors.ZoomToFitOnStartedStreamingBehavior.Condition">
            <summary>
            Gets or sets the condition under which the image is zoomed to fit.
            </summary>
            <value>The condition.</value>
            <remarks>
                <para>
                The default value is <see cref="F:Basler.Pylon.Controls.WPF.Behaviors.ZoomToFitOnStartedStreamingBehaviorCondition.BlankOnly"/>.
                </para>
                <para>
                If the value is <see cref="F:Basler.Pylon.Controls.WPF.Behaviors.ZoomToFitOnStartedStreamingBehaviorCondition.BlankOnly"/>,
                then the image will be zoomed to fit when streaming starts only if the associated image viewer was blank.
                </para>
                <para>
                If the value is <see cref="F:Basler.Pylon.Controls.WPF.Behaviors.ZoomToFitOnStartedStreamingBehaviorCondition.Always"/>,
                then the image will always be zoomed to fit when streaming starts.
                </para>
            </remarks>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Behaviors.ZoomToFitOnStartedStreamingBehaviorCondition">
            <summary>
            Specifies when <see cref="T:Basler.Pylon.Controls.WPF.Behaviors.ZoomToFitOnStartedStreamingBehavior"/> performs zooming.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.ZoomToFitOnStartedStreamingBehaviorCondition.BlankOnly">
            <summary>
            The image is zoomed to fit after the streaming is started if the image viewer was blank.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Behaviors.ZoomToFitOnStartedStreamingBehaviorCondition.Always">
            <summary>
            The image is always zoomed to fit after the streaming is started.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.CameraContextMenuModel">
            <summary>
            Model that represents a camera context menu.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.ICameraContextMenuModel">
            <summary>
            Interface of camera context menu model.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICameraContextMenuModel.OpenCameraCommand">
            <summary>
            Gets or sets the open camera command.
            </summary>
            <value>The open camera command.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICameraContextMenuModel.CloseCameraCommand">
            <summary>
            Gets or sets the close camera command.
            </summary>
            <value>The close camera command.</value>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraContextMenuModel.#ctor(Basler.Pylon.ICamera)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.CameraContextMenuModel"/> class.
            </summary>
            <param name="camera">The camera.</param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraContextMenuModel.OpenCameraCommand">
            <summary>
            Gets or sets the open camera command.
            </summary>
            <value>The open camera command.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraContextMenuModel.CloseCameraCommand">
            <summary>
            Gets or sets the close camera command.
            </summary>
            <value>The close camera command.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.CameraDisplayName">
            <summary>
            Provides access to the camera display names and camera informations.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraDisplayName.FriendlyName">
            <summary>
            The friendly name.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraDisplayName.Model">
            <summary>
            The model.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraDisplayName.SerialNumber">
            <summary>
            The serial number.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraDisplayName.UserDefinedName">
            <summary>
            The user defined name.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.CameraLister">
            <summary>
            Represents a control that allows the user to view and manage Basler cameras connected to the host PC.
            <para>
            <img src="../media/CameraLister.png" />
            </para>
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraLister.RefreshCameraListCommand">
            <summary>
            The command to refresh the camera list.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraLister.AutoRefreshEnableCommand">
            <summary>
            The command to enable or disables auto refresh.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraLister.SelectFirstCameraCommand">
            <summary>
            The command to select the first camera item in the list.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraLister.SelectLastCameraCommand">
            <summary>
            The command to select the last camera item in the list.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraLister.SelectCameraByIndexCommand">
            <summary>
            The command to select a camera item in the list by index.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraLister.SelectCameraUpCommand">
            <summary>
            The command to select the previous camera item in the list.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraLister.SelectCameraDownCommand">
            <summary>
            The command to select the next camera in the list.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraLister.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Basler.Pylon.Controls.WPF.CameraLister"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraLister.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.CameraLister"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraLister.#ctor(Basler.Pylon.Controls.Common.Cameras.ICameraProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.CameraLister"/> class.
            </summary>
            <param name="cameraProvider">The camera provider.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraLister.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Basler.Pylon.Controls.WPF.CameraLister"/> class.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraLister.IsAutoRefreshCheckBoxVisibleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.CameraLister.IsAutoRefreshCheckBoxVisible"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraLister.AutoRefreshPeriodProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.CameraLister.AutoRefreshPeriod"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraLister.IsRefreshButtonVisibleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.CameraLister.IsRefreshButtonVisible"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraLister.CameraDisplayNameProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.CameraLister.CameraDisplayName"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraLister.IsAutoRefreshProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.CameraLister.IsAutoRefresh"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraLister.IsHiddenPanelPinnedProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.CameraLister.IsHiddenPanelPinned"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraLister.IsTitleVisibleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.CameraLister.IsTitleVisible"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraLister.TitleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.CameraLister.Title"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraLister.CameraListProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.CameraLister.CameraList"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraLister.CameraProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.CameraLister.Camera"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraLister.SelectedCameraModelProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.CameraLister.SelectedCameraModel"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraLister.ReorderCamerasOnStateChangeProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.CameraLister.ReorderCamerasOnStateChange"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraLister.CameraListChangedEvent">
            <summary>
            The routed <see cref="E:Basler.Pylon.Controls.WPF.CameraLister.CameraListChanged"/> event.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraLister.OnCameraChanged(Basler.Pylon.Controls.Common.Cameras.CameraEventArgs)">
            <summary>
            Handles the <see cref="E:CameraChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:Basler.Pylon.Controls.Common.Cameras.CameraEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraLister.CameraOpenedEvent">
            <summary>
            The routed <see cref="E:Basler.Pylon.Controls.WPF.CameraLister.CameraOpened"/> event.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.CameraLister.CameraClosedEvent">
            <summary>
            The routed <see cref="E:Basler.Pylon.Controls.WPF.CameraLister.CameraClosed"/> event.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraLister.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraLister.CloseAllCameras">
            <summary>
            Closes all available and opened cameras.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraLister.MoveSelectionToFirst">
            <summary>
            Selects the first camera.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraLister.MoveSelectionToLast">
            <summary>
            Selects the last camera.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraLister.MoveSelectionToIndex(System.Int32)">
            <summary>
            Selects camera by index.
            </summary>
            <param name="index">Index of the camera in the list.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraLister.MoveSelectionUp">
            <summary>
            Moves camera item selection up.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraLister.MoveSelectionDown">
            <summary>
            Moves camera item selection down.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraLister.Refresh">
            <summary>
            Refreshes the list of cameras.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraLister.MergeCameraList">
            <summary>
            Merges the cameras received from the camera provider with the camera list.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraLister.GetRemovedCameras">
            <summary>
            Gets the list of cameras not available.
            </summary>
            <returns>The list of cameras not available.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraLister.GetNewCameras">
            <summary>
            Gets the list of cameras that appeared since the last refresh.
            </summary>
            <returns>The list of new appeared cameras.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraLister.Dispose">
            <summary>
            Performs application-specific tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraLister.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources. Also releases managed resources, if desired.
            </summary>
            <param name="disposing"><c>True</c> to release both managed and unmanaged resources. <c>False</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraLister.IsAutoRefreshCheckBoxVisible">
            <summary>
            Gets and sets the visibility of the auto refresh checkbox.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraLister.AutoRefreshPeriod">
            <summary>
            Gets and sets the auto refresh period for the camera list.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraLister.IsRefreshButtonVisible">
            <summary>
            Gets and sets the visibility of the refresh button.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraLister.CameraDisplayName">
            <summary>
            Gets and sets the camera display name.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraLister.IsAutoRefresh">
            <summary>
            Gets and sets the auto refresh status of the camera list.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraLister.IsHiddenPanelPinned">
            <summary>
            Gets and sets the state of the hideable panel (pinned or not pinned).
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraLister.IsTitleVisible">
            <summary>
            Gets and sets the visibility of the control title.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraLister.Title">
            <summary>
            Gets and sets the title text of the control.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraLister.CameraList">
            <summary>
            Gets or sets the list of cameras.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraLister.Camera">
            <summary>
            Gets or sets the selected camera item in the list.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraLister.SelectedCameraModel">
            <summary>
            Gets or sets the selected camera model in the list.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraLister.ReorderCamerasOnStateChange">
            <summary>
            Gets or sets a value indicating whether the order of the cameras in the list will change when the state of a camera changes.
            </summary>
            <value>
            <see langword="true" /> if the control will change camera order when the state of a camera changes.
            Otherwise, <see langword="false" />.
            </value>
            <remarks>
            <para>
            If this property is set to <see langword="true" />, cameras will be reordered in the following
            way:
            </para>
            <list type="number">
            <item>
            <description>List of camera devices with an open connection. The camera opened last is displayed first.</description>
            </item>
            <item>
            <description>List of camera devices with a closed connection. The camera closed last is displayed last.</description>
            </item>
            <item>
            <description>Unavailable cameras.</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.CameraLister.CameraListChanged">
            <summary>
            Occurs when the camera list has changed.
            </summary>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.CameraLister.CameraChanged">
            <summary>
            Occurs when a camera in the list has changed.
            </summary>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.CameraLister.CameraOpened">
            <summary>
            Occurs when a camera in the list has been opened.
            </summary>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.CameraLister.CameraClosed">
            <summary>
            Occurs when a camera in the list has been closed.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.CameraModel">
            <summary>
            Model that represents a device.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.ICameraModel">
            <summary>
            Interface of camera model class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ICameraModel.RefreshState">
            <summary>
            Force model to refresh its state
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ICameraModel.SetBusy">
            <summary>
            Increments camera busy counter effectively setting <see cref="P:Basler.Pylon.Controls.WPF.ICameraModel.IsBusy"/> to <see langword="true"/>.
            </summary>
            <returns>The <see cref="T:System.IDisposable"/> instance which decrements the busy counter on disposal.</returns>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICameraModel.DisplayName">
            <summary>
            Gets a name of camera.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICameraModel.DisplayIcon">
            <summary>
            Gets icon of camera.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICameraModel.Camera">
            <summary>
            Gets camera object
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICameraModel.IsOpenCameraSwitcherOn">
            <summary>
            Gets a flag determines if open camera switcher on/off
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICameraModel.CameraState">
            <summary>
            Gets camera state
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICameraModel.IsSelected">
            <summary>
            Gets or sets flag defines is camera if selected in the list.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICameraModel.IsCameraInfoShown">
            <summary>
            Gets or sets flag defines if camera additional info is shown.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICameraModel.PropertiesModel">
            <summary>
            Gets or sets properties of camera
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICameraModel.ContextMenuModel">
            <summary>
            Gets or sets the command for opening/closing the camera.
            </summary>
            <value>The command for opening/closing the camera.</value>
            <summary>
            Get or sets context menu model
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICameraModel.OpenCloseCameraCommand">
            <summary>
            Command for open/close camera
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICameraModel.ShowCameraInfoCommand">
            <summary>
            Command for showing camera information
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICameraModel.HideCameraInfoCommand">
            <summary>
            Command for hiding camera information.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICameraModel.IsBusy">
            <summary>
            Gets a value indicating whether the camera is currently busy.
            </summary>
            <value><see langword="true" /> if the camera is currently busy; otherwise, <see langword="false" />.</value>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraModel.#ctor(Basler.Pylon.ICamera)">
            <summary>
            Initializes static members of the <see cref="T:Basler.Pylon.Controls.WPF.CameraModel"/> class.
            </summary>
            <param name="camera">Camera object.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraModel.#ctor(Basler.Pylon.ICamera,Basler.Pylon.Controls.WPF.CameraDisplayName)">
            <summary>
            Initializes static members of the <see cref="T:Basler.Pylon.Controls.WPF.CameraModel"/> class.
            </summary>
            <param name="camera">Camera object.</param>
            <param name="displayName">Define what property of camera will be used as device name.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraModel.#ctor">
            <summary>
            Initializes static members of the <see cref="T:Basler.Pylon.Controls.WPF.CameraModel"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraModel.RefreshState">
            <summary>
            Force model to refresh its state
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraModel.SetBusy">
            <summary>
            Increments camera busy counter effectively setting <see cref="P:Basler.Pylon.Controls.WPF.CameraModel.IsBusy"/> to <see langword="true"/>.
            </summary>
            <returns>The <see cref="T:System.IDisposable"/> instance which decrements the busy counter on disposal.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraModel.OnPropertyChanged(System.String)">
            <summary>
            Called when the property has changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraModel.OpenCloseCameraCommand">
            <summary>
            Command for open/close camera
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraModel.ShowCameraInfoCommand">
            <summary>
            Command for showing camera information
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraModel.HideCameraInfoCommand">
            <summary>
            Command for hiding camera information.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraModel.DisplayName">
            <summary>
            Gets display name of the camera.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraModel.DisplayIcon">
            <summary>
            Gets icon of camera.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraModel.Camera">
            <summary>
            Gets camera object
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraModel.IsOpenCameraSwitcherOn">
            <summary>
            Gets or sets a flag defined if open camera switsher on/off
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraModel.CameraState">
            <summary>
            Gets camera state
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraModel.IsSelected">
            <summary>
            Gets or sets flag defines if camera is selected in the list.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraModel.IsCameraInfoShown">
            <summary>
            Gets or sets flag defines is camera if selected in the list.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraModel.PropertiesModel">
            <summary>
            Gets or sets properties of camera
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraModel.ContextMenuModel">
            <summary>
            Get or sets context menu model
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraModel.IsBusy">
            <summary>
            Gets a value indicating whether the camera is currently busy.
            </summary>
            <value><see langword="true" /> if the camera is currently busy; otherwise, <see langword="false" />.</value>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.CameraModel.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraModel.ActionDisposable.Dispose">
            <summary>
            Performs application-specific tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.CameraPropertyModel">
            <summary>
            Model that represents device properties model.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.ICameraPropertyModel">
            <summary>
            Interface of camera property model.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICameraPropertyModel.InterfaceIcon">
            <summary>
            Icon representing camera interface.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICameraPropertyModel.InterfaceName">
            <summary>
            Name of camera interface.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICameraPropertyModel.Properties">
            <summary>
            List of camera properties.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICameraPropertyModel.VendorName">
            <summary>
            Name of the vendor.
            </summary>
            <value>The name of the vendor.</value>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraPropertyModel.#ctor(Basler.Pylon.ICamera)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.CameraPropertyModel"/>
            </summary>
            <param name="camera">Camera object.</param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraPropertyModel.InterfaceIcon">
            <summary>
            Icon representing camera interface.
            </summary>
            <value>The interface icon.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraPropertyModel.InterfaceName">
            <summary>
            Name of the camera interface.
            </summary>
            <value>The name of the interface.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraPropertyModel.VendorName">
            <summary>
            Name of the vendor.
            </summary>
            <value>The name of the vendor.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraPropertyModel.Properties">
            <summary>
            List of camera properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.CameraRoutedEventArgs">
            <summary>
            Routed event args for <see cref="T:Basler.Pylon.ICamera"/>-related events.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CameraRoutedEventArgs.#ctor(System.Windows.RoutedEvent,Basler.Pylon.ICamera)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.CameraRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="camera">The device.</param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CameraRoutedEventArgs.Camera">
            <summary>
            Gets the camera.
            </summary>
            <value>The camera.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.CloseCameraCommand">
            <summary>
            Command that initiates camera closing.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CloseCameraCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command.  If the command does not require data to be passed, this object can
            be set to null.
            </param>
            <returns>true if this command can be executed; otherwise, false.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CloseCameraCommand.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command.  If the command does not require data to be passed, this object can
            be set to null.
            </param>
            <exception cref="T:System.InvalidOperationException">Can't execute open/close device because of null command parameter.</exception>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.CloseCameraCommand.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.ExpanderToolTips">
            <summary>
            Provides tooltips for the expander.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ExpanderToolTips.GetExpandButtonTooltip(System.Windows.DependencyObject)">
            <summary>
            Gets the expand button tooltip.
            </summary>
            <param name="obj">The object to get the attached property from.</param>
            <returns>The Expand button tooltip.</returns>
            <seealso cref="M:Basler.Pylon.Controls.WPF.ExpanderToolTips.SetExpandButtonTooltip(System.Windows.DependencyObject,System.String)"/>
            <seealso cref="F:Basler.Pylon.Controls.WPF.ExpanderToolTips.ExpandButtonTooltipProperty"/>
            <seealso cref="P:Basler.Pylon.Controls.WPF.ExpanderToolTips.ExpandButtonTooltip"/>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ExpanderToolTips.SetExpandButtonTooltip(System.Windows.DependencyObject,System.String)">
            <summary>
            Sets the Expand button tooltip.
            </summary>
            <param name="obj">The object to set the attached property to.</param>
            <param name="value">The Expand button tooltip.</param>
            <seealso cref="M:Basler.Pylon.Controls.WPF.ExpanderToolTips.GetExpandButtonTooltip(System.Windows.DependencyObject)"/>
            <seealso cref="F:Basler.Pylon.Controls.WPF.ExpanderToolTips.ExpandButtonTooltipProperty"/>
            <seealso cref="P:Basler.Pylon.Controls.WPF.ExpanderToolTips.ExpandButtonTooltip"/>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ExpanderToolTips.ExpandButtonTooltipProperty">
            <summary>
            Identifies the <see cref="P:Basler.Pylon.Controls.WPF.ExpanderToolTips.ExpandButtonTooltip"/> attached property.
            </summary>
            <seealso cref="M:Basler.Pylon.Controls.WPF.ExpanderToolTips.GetExpandButtonTooltip(System.Windows.DependencyObject)"/>
            <seealso cref="M:Basler.Pylon.Controls.WPF.ExpanderToolTips.SetExpandButtonTooltip(System.Windows.DependencyObject,System.String)"/>
            <seealso cref="P:Basler.Pylon.Controls.WPF.ExpanderToolTips.ExpandButtonTooltip"/>
            
            <AttachedPropertyComments>
            <summary>The tooltip of the Expand button.</summary>
            <value>The tooltip of the Expand button.</value>
            <seealso cref="M:Basler.Pylon.Controls.WPF.ExpanderToolTips.GetExpandButtonTooltip(System.Windows.DependencyObject)"/>
            <seealso cref="M:Basler.Pylon.Controls.WPF.ExpanderToolTips.SetExpandButtonTooltip(System.Windows.DependencyObject,System.String)"/>
            <seealso cref="F:Basler.Pylon.Controls.WPF.ExpanderToolTips.ExpandButtonTooltipProperty"/>
            </AttachedPropertyComments>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ExpanderToolTips.GetContentTooltip(System.Windows.DependencyObject)">
            <summary>
            Gets the content tooltip.
            </summary>
            <param name="obj">The object to get the attached property from.</param>
            <returns>The content tooltip.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ExpanderToolTips.SetContentTooltip(System.Windows.DependencyObject,System.String)">
            <summary>
            Sets the content tooltip.
            </summary>
            <param name="obj">The object to set the attached property to.</param>
            <param name="value">The tooltip.</param>
            <returns>The content tooltip.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ExpanderToolTips.ContentTooltipProperty">
            <summary>
            Identifies the <see cref="P:Basler.Pylon.Controls.WPF.ExpanderToolTips.ContentTooltip"/> attached property.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.HideCameraInfoCommand">
            <summary>
            Command that initiates camera info hiding.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.HideCameraInfoCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command.  If the command does not require data to be passed, this object can
            be set to null.
            </param>
            <returns>true if this command can be executed; otherwise, false.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.HideCameraInfoCommand.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command.  If the command does not require data to be passed, this object can
            be set to null.
            </param>
            <exception cref="T:System.InvalidOperationException">Model is not implements ICameraModel interface or null.</exception>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.HideCameraInfoCommand.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.OpenCameraCommand">
            <summary>
            Command that initiates camera opening.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.OpenCameraCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command.  If the command does not require data to be passed, this object can
            be set to null.
            </param>
            <returns>true if this command can be executed; otherwise, false.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.OpenCameraCommand.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command.  If the command does not require data to be passed, this object can
            be set to null.
            </param>
            <exception cref="T:System.InvalidOperationException">Can't execute open/close camera because of null command parameter.</exception>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.OpenCameraCommand.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.OpenCloseCameraCommand">
            <summary>
            Command that initiates camera opening or closing.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.OpenCloseCameraCommand.BuildCommandParameter(System.Boolean,Basler.Pylon.Controls.WPF.ICameraModel)">
            <summary>
            Builds parameter object for open or close commands.
            </summary>
            <param name="isOpenCommand">Defines what kind of a command will be executed. True - open device, False - close device.</param>
            <param name="model"><see cref="T:Basler.Pylon.Controls.WPF.ICameraModel"/></param>
            <returns>Parameter object.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.OpenCloseCameraCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command.  If the command does not require data to be passed, this object can
            be set to null.
            </param>
            <returns>true if this command can be executed; otherwise, false.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.OpenCloseCameraCommand.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command.  If the command does not require data to be passed, this object can
            be set to null.
            </param>
            <exception cref="T:System.InvalidOperationException">Can't execute open/close camera because of null command parameter.</exception>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.OpenCloseCameraCommand.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.ShowCameraInfoCommand">
            <summary>
            Command that initiates camera info showing.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ShowCameraInfoCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command.  If the command does not require data to be passed, this object can
            be set to null.
            </param>
            <returns>true if this command can be executed; otherwise, false.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ShowCameraInfoCommand.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command.  If the command does not require data to be passed, this object can
            be set to null.
            </param>
            <exception cref="T:System.InvalidOperationException">Model is not implements IDeviceModel interface or null.</exception>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.ShowCameraInfoCommand.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Common.BaseColorProperties">
            <summary>
            Contains brushes for Basler Pylon Controls.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.SelectionBrushProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.SelectionBrush" /> attached property.
            </summary>
            <AttachedPropertyComments>
                <summary>Gets or sets selection brush.</summary>
                <value>The brush.</value>
            </AttachedPropertyComments>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.FocusBrushProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.FocusBrush" /> attached property.
            </summary>
            <AttachedPropertyComments>
                <summary>Gets or sets the focus brush.</summary>
                <value>The brush.</value>
            </AttachedPropertyComments>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.ParameterTreeMouseOverBrushProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.ParameterTreeMouseOverBrush" />
            attached property.
            </summary>
            <AttachedPropertyComments>
                <summary>Gets or sets the parameter tree mouse over brush.</summary>
                <value>The brush.</value>
            </AttachedPropertyComments>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.ParameterTreeSelectionBrushProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.ParameterTreeSelectionBrush" />
            attached property.
            </summary>
            <AttachedPropertyComments>
                <summary>Gets or sets the parameter tree selection brush.</summary>
                <value>The brush.</value>
            </AttachedPropertyComments>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.ContentBrushProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.ContentBrush" /> attached property.
            </summary>
            <AttachedPropertyComments>
                <summary>Gets or sets the content brush.</summary>
                <value>The brush.</value>
            </AttachedPropertyComments>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.EmphasizedContentBrushProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.EmphasizedContentBrush" /> attached
            property.
            </summary>
            <AttachedPropertyComments>
                <summary>Gets or sets the emphasized content brush.</summary>
                <value>The brush.</value>
            </AttachedPropertyComments>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.MiddleFillBrushProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.MiddleFillBrush" /> attached property.
            </summary>
            <AttachedPropertyComments>
                <summary>Gets or sets the middle fill brush.</summary>
                <value>The brush.</value>
            </AttachedPropertyComments>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.ContainerBackgroundBrushProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.ContainerBackgroundBrush" /> attached
            property.
            </summary>
            <AttachedPropertyComments>
                <summary>Gets or sets the container background brush.</summary>
                <value>The brush.</value>
            </AttachedPropertyComments>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.EmphasizedContainerBackgroundBrushProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.EmphasizedContainerBackgroundBrush" />
            attached property.
            </summary>
            <AttachedPropertyComments>
                <summary>Gets or sets the emphasized container background brush.</summary>
                <value>The brush.</value>
            </AttachedPropertyComments>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.FocusOpacity005BrushProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.FocusOpacity005Brush" /> read-only
            attached property.
            </summary>
            <AttachedPropertyComments>
                <summary>Gets the focus brush with 5% opacity.</summary>
                <value>The brush.</value>
            </AttachedPropertyComments>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.FocusOpacity025BrushProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.FocusOpacity025Brush" /> read-only
            attached property.
            </summary>
            <AttachedPropertyComments>
                <summary>Gets the focus brush with 25% opacity.</summary>
                <value>The brush.</value>
            </AttachedPropertyComments>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.FocusOpacity050BrushProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.FocusOpacity050Brush" /> read-only
            attached property.
            </summary>
            <AttachedPropertyComments>
                <summary>Gets the focus brush with 50% opacity.</summary>
                <value>The brush.</value>
            </AttachedPropertyComments>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.FocusOpacity075BrushProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.FocusOpacity075Brush" /> read-only
            attached property.
            </summary>
            <AttachedPropertyComments>
                <summary>Gets the focus brush with 75% opacity.</summary>
                <value>The brush.</value>
            </AttachedPropertyComments>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.SelectionOpacity025BrushProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.SelectionOpacity025Brush" /> read-only
            attached property.
            </summary>
            <AttachedPropertyComments>
                <summary>Gets the selection brush with 25% opacity.</summary>
                <value>The brush.</value>
            </AttachedPropertyComments>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.MiddleFillOpacity05BrushProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.MiddleFillOpacity05Brush" /> read-only
            attached property.
            </summary>
            <AttachedPropertyComments>
                <summary>Gets the middle fill brush with 5% opacity.</summary>
                <value>The brush.</value>
            </AttachedPropertyComments>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.ContentBrushOpacity025Property">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.ContentBrushOpacity025" /> read-only
            attached property.
            </summary>
            <AttachedPropertyComments>
                <summary>Gets the content brush with 25% opacity.</summary>
                <value>The brush.</value>
            </AttachedPropertyComments>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.EmphasizedContentBrushOpacity050Property">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.EmphasizedContentBrushOpacity050" />
            read-only attached property.
            </summary>
            <AttachedPropertyComments>
                <summary>Gets the emphasized content brush with 50% opacity.</summary>
                <value>The brush.</value>
            </AttachedPropertyComments>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.ContentBrushOpacity050Property">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.ContentBrushOpacity050" /> read-only
            attached property.
            </summary>
            <AttachedPropertyComments>
                <summary>Gets the content brush with 50% opacity.</summary>
                <value>The brush.</value>
            </AttachedPropertyComments>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.SetSelectionBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the selection brush.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The brush.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.GetSelectionBrush(System.Windows.DependencyObject)">
            <summary>
            Gets the selection brush.
            </summary>
            <param name="element">The element.</param>
            <returns>Brush.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.SetFocusBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the focus brush.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The brush.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.GetFocusBrush(System.Windows.DependencyObject)">
            <summary>
            Gets the focus brush.
            </summary>
            <param name="element">The element.</param>
            <returns>Brush.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.SetParameterTreeMouseOverBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the parameter tree mouse over brush.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The brush.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.GetParameterTreeMouseOverBrush(System.Windows.DependencyObject)">
            <summary>
            Gets the parameter tree mouse over brush.
            </summary>
            <param name="element">The element.</param>
            <returns>Brush.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.SetParameterTreeSelectionBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the parameter tree selection brush.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The brush.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.GetParameterTreeSelectionBrush(System.Windows.DependencyObject)">
            <summary>
            Gets the parameter tree selection brush.
            </summary>
            <param name="element">The element.</param>
            <returns>Brush.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.SetContentBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the content brush.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The brush.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.GetContentBrush(System.Windows.DependencyObject)">
            <summary>
            Gets the content brush.
            </summary>
            <param name="element">The element.</param>
            <returns>Brush.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.GetEmphasizedContentBrush(System.Windows.DependencyObject)">
            <summary>
            Gets the emphasized content brush.
            </summary>
            <param name="element">The element.</param>
            <returns>Brush.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.GetMiddleFillBrush(System.Windows.DependencyObject)">
            <summary>
            Gets the middle fill brush.
            </summary>
            <param name="element">The element.</param>
            <returns>Brush.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.GetContainerBackgroundBrush(System.Windows.DependencyObject)">
            <summary>
            Gets the container background brush.
            </summary>
            <param name="element">The element.</param>
            <returns>Brush.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.GetEmphasizedContainerBackgroundBrush(System.Windows.DependencyObject)">
            <summary>
            Gets the emphasized container background brush.
            </summary>
            <param name="element">The element.</param>
            <returns>Brush.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.GetFocusOpacity005Brush(System.Windows.DependencyObject)">
            <summary>
            Gets the focus brush with 5% opacity.
            </summary>
            <param name="element">The element.</param>
            <returns>Brush.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.GetFocusOpacity025Brush(System.Windows.DependencyObject)">
            <summary>
            Gets the focus brush with 25% opacity.
            </summary>
            <param name="element">The element.</param>
            <returns>Brush.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.GetFocusOpacity050Brush(System.Windows.DependencyObject)">
            <summary>
            Gets the focus brush with 50% opacity.
            </summary>
            <param name="element">The element.</param>
            <returns>Brush.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.GetFocusOpacity075Brush(System.Windows.DependencyObject)">
            <summary>
            Gets the focus brush with 75% opacity.
            </summary>
            <param name="element">The element.</param>
            <returns>Brush.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.GetSelectionOpacity025Brush(System.Windows.DependencyObject)">
            <summary>
            Gets the selection brush with 25% opacity.
            </summary>
            <param name="element">The element.</param>
            <returns>Brush.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.GetMiddleFillOpacity05Brush(System.Windows.DependencyObject)">
            <summary>
            Gets the middle fill brush with 5% opacity.
            </summary>
            <param name="element">The element.</param>
            <returns>Brush.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.GetContentBrushOpacity025(System.Windows.DependencyObject)">
            <summary>
            Gets the content brush with 25% opacity.
            </summary>
            <param name="element">The element.</param>
            <returns>Brush.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.GetContentBrushOpacity050(System.Windows.DependencyObject)">
            <summary>
            Gets the content brush with 50% opacity.
            </summary>
            <param name="element">The element.</param>
            <returns>Brush.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.GetEmphasizedContentBrushOpacity050(System.Windows.DependencyObject)">
            <summary>
            Gets the emphasized content brush with 50% opacity.
            </summary>
            <param name="element">The element.</param>
            <returns>Brush.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.SetEmphasizedContentBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the emphasized content brush.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The brush.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.SetMiddleFillBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the middle fill brush.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.SetContainerBackgroundBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the container background brush.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.SetEmphasizedContainerBackgroundBrush(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the emphasized container background brush.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BaseColorProperties.AddOwner(System.Type)">
            <summary>
            Adds owner of attached properties.
            </summary>
            <param name="ownerType">
                <see cref="T:System.Type"/>
            </param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Common.BindingListener">
            <summary>
            Helper class for adding Bindings to non-FrameworkElements
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BindingListener.#ctor(Basler.Pylon.Controls.WPF.Common.BindingListener.ChangedHandler)">
            <summary>
            Constructor.
            </summary>
            <param name="changedHandler">Callback whenever the value of this binding has changed.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BindingListener.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Common.BindingListener.Binding">
            <summary>
            The Binding which is to be evaluated
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Common.BindingListener.Element">
            <summary>
            The element to be used as the context on which to evaluate the binding.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Common.BindingListener.Value">
            <summary>
            The current value of this binding.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Common.BindingListener.ChangedHandler">
            <summary>
            Delegate for when the binding listener has changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Common.BindingChangedEventArgs">
            <summary>
            Event args for when binding values change.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.BindingChangedEventArgs.#ctor(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Constructor
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Common.BindingChangedEventArgs.EventArgs">
            <summary>
            Original event args.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Common.CommandExtensions">
            <summary>
            Provides extension methods for <see cref="T:System.Windows.Input.ICommand"/>.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.CommandExtensions.Execute(System.Windows.Input.ICommand,System.Object,System.Windows.IInputElement)">
            <summary>
            Executes the specified command.
            </summary>
            <param name="command">The command.</param>
            <param name="parameter">The parameter.</param>
            <param name="target">The command target.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.CommandExtensions.CanExecute(System.Windows.Input.ICommand,System.Object,System.Windows.IInputElement)">
            <summary>
            Determines whether the specified command can be executed.
            </summary>
            <param name="command">The command.</param>
            <param name="parameter">The parameter.</param>
            <param name="target">The command target.</param>
            <returns><c>true</c> if the specified command can be executed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Common.ConverterHelper">
            <summary>
            Helper for converting objects to different types.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.ConverterHelper.ConvertToType(System.Object,System.Type)">
            <summary>
            Attempts to convert the provided value to the specified type
            </summary>
            <param name="value">object to be converted</param>
            <param name="type">Type to be converted to</param>
            <returns></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.ConverterHelper.GetTypeConverter(System.Type)">
            <summary>
            Finds the type converter for the specified type.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Common.ConvertFromStringConverter">
            <summary>
            General string to object converter which uses the internal
            platforms type converters.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.ConvertFromStringConverter.#ctor(System.Type)">
            <summary>
            General purpose converter that converts from a string to the specified type.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.ConvertFromStringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Allow conversion from strings.
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.ConvertFromStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert the value
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Common.CustomResources">
            <summary>
            Class resurces for custom styles
            Access to resources is like this Style="{DynamicResource {x:Static {namespace}:CustomResources.{resource key}}}"
            For example Style="{DynamicResource {x:Static common:CustomResources.ButtonStyleKey}}"
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Common.CustomResources.TextBoxStyleKey">
            <summary>
            Custom TextBox style
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Common.CustomResources.CheckBoxStyleKey">
            <summary>
            custom CheckBox style
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Common.CustomResources.ComboBoxStyleKey">
            <summary>
            custom ComboBox style
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Common.CustomResources.ScrollViewerStyleKey">
            <summary>
            custom ScrollViewer style
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Common.CustomResources.ButtonStyleKey">
            <summary>
            custom Button style
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Common.CustomResources.NormalTextStyleKey">
            <summary>
            custom Normal Text TextBlock Style
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Common.CustomResources.TitleTextStyleKey">
            <summary>
            custom Title Text TextBlock Style
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Common.CustomResources.HeadlineTextStyleKey">
            <summary>
            custom Headline Text TextBlock Style
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Common.DependencyObjectHelper">
            <summary>
            Contains methods for working with visual tree.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.DependencyObjectHelper.FindParent``1(System.Windows.DependencyObject)">
            <summary>
            Finds the parent of type <typeparamref name="T" />.
            </summary>
            <typeparam name="T">The type of parent to find.</typeparam>
            <param name="element">The child element.</param>
            <returns>The parent of type <typeparamref name="T" /> if found; <see langword="null" /> otherwise.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.DependencyObjectHelper.FindChild``1(System.Windows.DependencyObject,System.String)">
            <summary>
            Finds a Child of a given name in the visual tree.
            </summary>
            <param name="parent">A direct parent of the queried item.</param>
            <typeparam name="T">The type of the queried item.</typeparam>
            <param name="childName">x:Name or Name of child. </param>
            <returns>
            The first parent item that matches the submitted type parameter.
            If not matching item can be found,
            a null parent is being returned.
            </returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.DependencyObjectHelper.FindChild``2(System.Windows.DependencyObject)">
            <summary>
            Finds a Child of a given item in the visual tree.
            </summary>
            <typeparam name="T">The type of the queried item.</typeparam>
            <typeparam name="I">The interface of the queried item.</typeparam>
            <param name="parent"></param>
            <returns>
            The first parent item that matches the submitted type parameter.
            If not matching item can be found,
            a null parent is being returned.
            </returns>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Common.DependencyPropertyWatcher`1">
            <summary>
            Watches the dependency property and raises event when it is changes. This class cannot be inherited.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.DependencyPropertyWatcher`1.ValueProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Common.DependencyPropertyWatcher`1.Value"/> dependency property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.DependencyPropertyWatcher`1.#ctor(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.Common.DependencyPropertyWatcher`1"/> class.
            </summary>
            <param name="source">The source dependency object.</param>
            <param name="property">The dependency property to watch.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.DependencyPropertyWatcher`1.#ctor(System.Windows.DependencyObject,System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.Common.DependencyPropertyWatcher`1"/> class.
            </summary>
            <param name="source">The source dependency object.</param>
            <param name="propertyPath">The property path of the dependency property to watch.</param>
            <param name="pathParameters">The property path parameters.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.DependencyPropertyWatcher`1.#ctor(System.Windows.DependencyObject,System.Windows.PropertyPath)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.Common.DependencyPropertyWatcher`1"/> class.
            </summary>
            <param name="source">The source dependency object.</param>
            <param name="propertyPath">The property path of the dependency property to watch.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.DependencyPropertyWatcher`1.StopWatching">
            <summary>
            Stops watching the property.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Common.DependencyPropertyWatcher`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.Common.DependencyPropertyWatcher`1.ValueChanged">
            <summary>
            Occurs when the property being watched is changed.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.DoubleUtil.AreClose(System.Double,System.Double)">
            <summary>
            AreClose - Returns whether or not two doubles are "close".  That is, whether or
            not they are within epsilon of each other.  Note that this epsilon is proportional
            to the numbers themselves to that AreClose survives scalar multiplication.
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this
            returns false.  This is important enough to repeat:
            NB: NO CODE CALLING THIS FUNCTION SHOULD DEPEND ON ACCURATE RESULTS - this should be
            used for optimizations *only*.
            </summary>
            <returns>
            bool - the result of the AreClose comparision.
            </returns>
            <param name="value1"> The first double to compare.</param>
            <param name="value2"> The second double to compare.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.DoubleUtil.LessThan(System.Double,System.Double)">
            <summary>
            LessThan - Returns whether or not the first double is less than the second double.
            That is, whether or not the first is strictly less than *and* not within epsilon of
            the other number.  Note that this epsilon is proportional to the numbers themselves
            to that AreClose survives scalar multiplication.  Note,
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this
            returns false.  This is important enough to repeat:
            NB: NO CODE CALLING THIS FUNCTION SHOULD DEPEND ON ACCURATE RESULTS - this should be
            used for optimizations *only*.
            </summary>
            <returns>
            bool - the result of the LessThan comparision.
            </returns>
            <param name="value1"> The first double to compare.</param>
            <param name="value2"> The second double to compare.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.DoubleUtil.GreaterThan(System.Double,System.Double)">
            <summary>
            GreaterThan - Returns whether or not the first double is greater than the second double.
            That is, whether or not the first is strictly greater than *and* not within epsilon of
            the other number.  Note that this epsilon is proportional to the numbers themselves
            to that AreClose survives scalar multiplication.  Note,
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this
            returns false.  This is important enough to repeat:
            NB: NO CODE CALLING THIS FUNCTION SHOULD DEPEND ON ACCURATE RESULTS - this should be
            used for optimizations *only*.
            </summary>
            <returns>
            bool - the result of the GreaterThan comparision.
            </returns>
            <param name="value1"> The first double to compare.</param>
            <param name="value2"> The second double to compare.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.DoubleUtil.LessThanOrClose(System.Double,System.Double)">
            <summary>
            LessThanOrClose - Returns whether or not the first double is less than or close to
            the second double.  That is, whether or not the first is strictly less than or within
            epsilon of the other number.  Note that this epsilon is proportional to the numbers
            themselves to that AreClose survives scalar multiplication.  Note,
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this
            returns false.  This is important enough to repeat:
            NB: NO CODE CALLING THIS FUNCTION SHOULD DEPEND ON ACCURATE RESULTS - this should be
            used for optimizations *only*.
            </summary>
            <returns>
            bool - the result of the LessThanOrClose comparision.
            </returns>
            <param name="value1"> The first double to compare.</param> 
            <param name="value2"> The second double to compare.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.DoubleUtil.GreaterThanOrClose(System.Double,System.Double)">
            <summary>
            GreaterThanOrClose - Returns whether or not the first double is greater than or close to
            the second double.  That is, whether or not the first is strictly greater than or within
            epsilon of the other number.  Note that this epsilon is proportional to the numbers
            themselves to that AreClose survives scalar multiplication.  Note,
            There are plenty of ways for this to return false even for numbers which
            are theoretically identical, so no code calling this should fail to work if this
            returns false.  This is important enough to repeat:
            NB: NO CODE CALLING THIS FUNCTION SHOULD DEPEND ON ACCURATE RESULTS - this should be
            used for optimizations *only*.
            </summary>
            <returns>
            bool - the result of the GreaterThanOrClose comparision.
            </returns>
            <param name="value1"> The first double to compare.</param>
            <param name="value2"> The second double to compare.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.DoubleUtil.IsOne(System.Double)">
            <summary>
            IsOne - Returns whether or not the double is "close" to 1.  Same as AreClose(double, 1),
            but this is faster.
            </summary>
            <returns>
            bool - the result of the AreClose comparision.
            </returns>
            <param name="value"> The double to compare to 1. </param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.DoubleUtil.IsZero(System.Double)">
            <summary>
            IsZero - Returns whether or not the double is "close" to 0.  Same as AreClose(double, 0),
            but this is faster.
            </summary>
            <returns>
            bool - the result of the AreClose comparision.
            </returns>
            <param name="value"> The double to compare to 0.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.DoubleUtil.AreClose(System.Windows.Point,System.Windows.Point)">
            <summary>
            Compares two points for fuzzy equality.  This function
            helps compensate for the fact that double values can
            acquire error when operated upon
            </summary>
            <param name="point1">The first point to compare</param>
            <param name="point2">The second point to compare</param>
            <returns>Whether or not the two points are equal</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.DoubleUtil.AreClose(System.Windows.Size,System.Windows.Size)">
            <summary>
            Compares two Size instances for fuzzy equality.  This function
            helps compensate for the fact that double values can
            acquire error when operated upon
            </summary>
            <param name="size1">The first size to compare</param>
            <param name="size2">The second size to compare</param>
            <returns>Whether or not the two Size instances are equal</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.DoubleUtil.AreClose(System.Windows.Vector,System.Windows.Vector)">
            <summary>
            Compares two Vector instances for fuzzy equality.  This function
            helps compensate for the fact that double values can
            acquire error when operated upon
            </summary>
            <param name="vector1">The first Vector to compare</param>
            <param name="vector2">The second Vector to compare</param>
            <returns>Whether or not the two Vector instances are equal</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.DoubleUtil.AreClose(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Compares two rectangles for fuzzy equality.  This function
            helps compensate for the fact that double values can
            acquire error when operated upon
            </summary>
            <param name="rect1">The first rectangle to compare</param>
            <param name="rect2">The second rectangle to compare</param>
            <returns>Whether or not the two rectangles are equal</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.DoubleUtil.IsBetweenZeroAndOne(System.Double)">
             <summary>
            
             </summary>
             <param name="val"></param>
             <returns></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.DoubleUtil.DoubleToInt(System.Double)">
             <summary>
            
             </summary>
             <param name="val"></param>
             <returns></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.DoubleUtil.RectHasNaN(System.Windows.Rect)">
            <summary>
            rectHasNaN - this returns true if this rect has X, Y , Height or Width as NaN.
            </summary>
            <param name="r">The rectangle to test</param>
            <returns>returns whether the Rect has NaN</returns>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Common.NativeMethods">
            <summary>
            Contains native methods.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.NoRecursionScope.Disposable.Dispose">
            <summary>
            Performs application-specific tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Common.ParameterChangedEventManager">
            <summary>
            Weak event manager for <see cref="E:Basler.Pylon.IParameter.ParameterChanged"/> event.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.ParameterChangedEventManager.AddListener(Basler.Pylon.IParameter,System.Windows.IWeakEventListener)">
            <summary>
            Add a listener to the given source's event.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.ParameterChangedEventManager.RemoveListener(Basler.Pylon.IParameter,System.Windows.IWeakEventListener)">
            <summary>
            Remove a listener to the given source's event.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.ParameterChangedEventManager.StartListening(System.Object)">
            <summary>
            When overridden in a derived class, starts listening for the event being managed. After the
            <see cref="M:System.Windows.WeakEventManager.StartListening(System.Object)" /> method is first called, the manager
            should be in the state of calling
            <see cref="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" /> or
            <see cref="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" />
            whenever the relevant event from the provided source is handled.
            </summary>
            <param name="source">The source to begin listening on.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.ParameterChangedEventManager.StopListening(System.Object)">
            <summary>
            When overridden in a derived class, stops listening on the provided source for the event being managed.
            </summary>
            <param name="source">The source to stop listening on.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Common.SliderPopupHeightMode">
            <summary>
            Enum SliderPopupHeightMode. Define height of the slider popup
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.SliderPopupHeightMode.Default">
            <summary>
            The default popup height
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.SliderPopupHeightMode.Min">
            <summary>
            The minimum popup height
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.SliderPopupHeightMode.Max">
            <summary>
            The maximum popup height
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Common.SliderType">
            <summary>
            Enum SliderType
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.SliderType.Integer">
            <summary>
            The integer
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.SliderType.Float">
            <summary>
            The float
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Common.StreemControllerGroupType">
            <summary>
            Stream controller group type
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.StreemControllerGroupType.Stream">
            <summary>
            Stream group
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.StreemControllerGroupType.Zoom">
            <summary>
            Zoom group
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Common.StreemControllerGroupType.Record">
            <summary>
            Record group
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Common.WeakEventListener`2.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
            <summary>
            Receives events from the centralized event manager.
            </summary>
            <returns>
            true if the listener handled the event. It is considered an error by the
            <see cref="T:System.Windows.WeakEventManager" /> handling in WPFÂ to register a listener for an event that the listener
            does not handle. Regardless, the method should return false if it receives an event that it does not recognize or
            handle.
            </returns>
            <param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method.</param>
            <param name="sender">Object that originated the event.</param>
            <param name="e">Event data.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.AddColonToTextConvertor">
            <summary>
            Adds colon to the end of the text.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.AddColonToTextConvertor.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Adds colon to the end of the text.
            </summary>
            <param name="value">The text.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.AddColonToTextConvertor.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back. 
            </summary>
            <returns>
            <see cref="F:System.Windows.DependencyProperty.UnsetValue"/>.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.BoolConjunctionConverter">
            <summary>
            Converts boolean parameters to bool.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.BoolConjunctionConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts boolean values to bool.
            </summary>
            <returns>
            If both of values is true then the method returns true otherwise false.
            </returns>
            <param name="values">The values array produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.BoolConjunctionConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetTypes">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.BoolConjunctionToVisibilityConverter">
            <summary>
            Converts boolean parameters to <see cref="T:System.Windows.Visibility"/>.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.BoolConjunctionToVisibilityConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts boolean values to <see cref="T:System.Windows.Visibility"/>.
            </summary>
            <returns>
            If all of values is true then the method returns <see cref="F:System.Windows.Visibility.Visible"/> otherwise <see cref="F:System.Windows.Visibility.Collapsed"/>.
            </returns>
            <param name="values">The values array produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.BoolConjunctionToVisibilityConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetTypes">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.BoolDisjunctionToVisibilityConverter">
            <summary>
            Converts boolean parameters to <see cref="T:System.Windows.Visibility"/>.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.BoolDisjunctionToVisibilityConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts boolean values to <see cref="T:System.Windows.Visibility"/>.
            </summary>
            <returns>
            If any of values is true then the method returns <see cref="F:System.Windows.Visibility.Visible"/> otherwise <see cref="F:System.Windows.Visibility.Collapsed"/>.
            </returns>
            <param name="values">The values array produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.BoolDisjunctionToVisibilityConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetTypes">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.BusyStateToCursorConverter">
            <summary>
            Converts busy state to cursor.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.BusyStateToCursorConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.BusyStateToCursorConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.CalculateDynamicTickBarValueTickLength">
            <summary>
            Class CalculateDynamicTickBarValueTickLength.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CalculateDynamicTickBarValueTickLength.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value produced by the binding source.</param><param name="targetType">The type of the binding target property.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CalculateDynamicTickBarValueTickLength.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param><param name="targetType">The type to convert to.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.CalculateMaxHeightForListBox">
            <summary>
            Adds colon to the end of the text.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CalculateMaxHeightForListBox.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Calculates a height depends on line numbers.
            </summary>
            <param name="value">Number of lines.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CalculateMaxHeightForListBox.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back. 
            </summary>
            <returns>
            <see cref="F:System.Windows.DependencyProperty.UnsetValue"/>.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.CalculateMinWidthRelativeParent">
            <summary>
            Class CalculateMinWidthRelativeParent.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CalculateMinWidthRelativeParent.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value produced by the binding source.</param><param name="targetType">The type of the binding target property.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CalculateMinWidthRelativeParent.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param><param name="targetType">The type to convert to.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.CalculateTwoRowsMaxHeightForTextBlock">
            <summary>
            Adds colon to the end of the text.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CalculateTwoRowsMaxHeightForTextBlock.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Adds colon to the end of the text.
            </summary>
            <param name="value">The text.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CalculateTwoRowsMaxHeightForTextBlock.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back. 
            </summary>
            <returns>
            <see cref="F:System.Windows.DependencyProperty.UnsetValue"/>.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.CameraInfoAndMouseOverToVisibilityConverter">
            <summary>
            Converts IsMouseOver property value and camera model IsCameraInfoShown property value to visibility value.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraInfoAndMouseOverToVisibilityConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts IsMouseOver property value and camera model IsCameraInfoShown property value to visibility value.
            </summary>
            <param name="values">An array of values. The first array item is <see cref="P:System.Windows.UIElement.IsMouseOver"/>, the second - <see cref="P:Basler.Pylon.Controls.WPF.ICameraModel.IsCameraInfoShown"/>.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of <see cref="T:System.Windows.Visibility"/>.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraInfoAndMouseOverToVisibilityConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a values back. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetTypes">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.CameraStateToAnimationPossibilityConverter">
            <summary>
            Converts device state to flag which shows if device opening is possible.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToAnimationPossibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts Device state to flag which shows if device opening is possible.
            </summary>
            <param name="value"><see cref="T:Basler.Pylon.Controls.Common.Cameras.CameraState"/> value.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of <see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToAnimationPossibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back. 
            </summary>
            <returns>
            <see cref="F:System.Windows.DependencyProperty.UnsetValue"/>.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.CameraStateToCameraTooltipConverter">
            <summary>
            Converts camera state to tooltip text.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToCameraTooltipConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts camera state to tooltip text.
            </summary>
            <param name="values">The array of values that the source bindings in the <see cref="T:System.Windows.Data.MultiBinding"/> produces. The value <see cref="F:System.Windows.DependencyProperty.UnsetValue"/> indicates that the source binding has no value to provide for conversion.
            There are awaiting <see cref="T:Basler.Pylon.Controls.WPF.CameraModel"/> as the first item of values and <see cref="T:Basler.Pylon.Controls.Common.Cameras.CameraState"/> as the second one.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value or empty string</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToCameraTooltipConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetTypes">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.CameraStateToFocusBarBrushConverter">
            <summary>
            Converts <see cref="T:Basler.Pylon.Controls.Common.Cameras.CameraState"/> to focus bar <see cref="T:System.Windows.Media.Brush"/>.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToFocusBarBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToFocusBarBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.CameraStateToFontWeightConverter">
            <summary>
            Converts camera state to font weight.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToFontWeightConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts camera state to tooltip text.
            </summary>
            <param name="value">The array of values that the source bindings in the <see cref="T:System.Windows.Data.MultiBinding"/> produces. The value <see cref="F:System.Windows.DependencyProperty.UnsetValue"/> indicates that the source binding has no value to provide for conversion.
            There is awaiting <see cref="T:Basler.Pylon.Controls.Common.Cameras.CameraState"/>.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of <see cref="P:System.Windows.FontWeights.Normal"/></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToFontWeightConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back. 
            </summary>
            <returns>
            <see cref="F:System.Windows.DependencyProperty.UnsetValue"/>.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.CameraStateToForegroundColorConverter">
            <summary>
            Converts camera state to foreground color.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToForegroundColorConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts camera state to foreground color.
            </summary>
            <param name="value"><see cref="T:Basler.Pylon.Controls.Common.Cameras.CameraState"/> value.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of <see cref="T:System.Windows.Media.Brushes"/></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToForegroundColorConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back. 
            </summary>
            <returns>
            <see cref="F:System.Windows.DependencyProperty.UnsetValue"/>.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.CameraStateToIconEllipseGeometryConverter">
            <summary>
            Converts <see cref="T:Basler.Pylon.Controls.Common.Cameras.CameraState"/> to icon ellipse geometry.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToIconEllipseGeometryConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToIconEllipseGeometryConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.CameraStateToImageSourceConverter">
            <summary>
            Converts device state to image source.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToImageSourceConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts Device state to image source.
            </summary>
            <param name="value"><see cref="T:Basler.Pylon.Controls.Common.Cameras.CameraState"/> value.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of <see cref="T:System.Windows.Media.ImageSource"/></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToImageSourceConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back. 
            </summary>
            <returns>
            <see cref="F:System.Windows.DependencyProperty.UnsetValue"/>.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Converters.CameraStateToImageSourceConverter.BlockedState">
            <summary>
            Gets or sets <see cref="T:System.Windows.Media.ImageSource"/> for <see cref="F:Basler.Pylon.Controls.Common.Cameras.CameraState.Blocked"/> device state.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Converters.CameraStateToImageSourceConverter.OpenedState">
            <summary>
            Gets or sets <see cref="T:System.Windows.Media.ImageSource"/> for <see cref="F:Basler.Pylon.Controls.Common.Cameras.CameraState.Opened"/> device state.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Converters.CameraStateToImageSourceConverter.AvailableState">
            <summary>
            Gets or sets <see cref="T:System.Windows.Media.ImageSource"/> for <see cref="F:Basler.Pylon.Controls.Common.Cameras.CameraState.Available"/> device state.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Converters.CameraStateToImageSourceConverter.UnknownState">
            <summary>
            Gets or sets <see cref="T:System.Windows.Media.ImageSource"/> for unknown device state.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.CameraStateToIsClosePossibleConverter">
            <summary>
            Converts device state to flag which shows if camera closing is possible.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToIsClosePossibleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts Device state to flag which shows if camera closing is possible.
            </summary>
            <param name="value"><see cref="T:Basler.Pylon.Controls.Common.Cameras.CameraState"/> value.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of <see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToIsClosePossibleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back. 
            </summary>
            <returns>
            <see cref="F:System.Windows.DependencyProperty.UnsetValue"/>.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.CameraStateToIsOpenAllowedConverter">
            <summary>
            Converts device state to flag which shows if camera opening is allowed.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToIsOpenAllowedConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts Device state to flag which shows if device opening is allowed.
            </summary>
            <param name="value"><see cref="T:Basler.Pylon.Controls.Common.Cameras.CameraState"/> value.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of <see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToIsOpenAllowedConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back. 
            </summary>
            <returns>
            <see cref="F:System.Windows.DependencyProperty.UnsetValue"/>.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.CameraStateToIsOpenPossibleConverter">
            <summary>
            Converts device state to flag which shows if device opening is possible.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToIsOpenPossibleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts Device state to flag which shows if device opening is possible.
            </summary>
            <param name="value"><see cref="T:Basler.Pylon.Controls.Common.Cameras.CameraState"/> value.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of <see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToIsOpenPossibleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back. 
            </summary>
            <returns>
            <see cref="F:System.Windows.DependencyProperty.UnsetValue"/>.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.CameraStateToOpacityConverter">
            <summary>
            Converts <see cref="T:Basler.Pylon.Controls.Common.Cameras.CameraState"/> to opacity.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToOpacityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToOpacityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.CameraStateToOpenCloseTooltipConverter">
            <summary>
            Converts camera state to open or close tooltip text.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToOpenCloseTooltipConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts camera state to open or close tooltip text.
            </summary>
            <param name="value"><see cref="T:Basler.Pylon.Controls.Common.Cameras.CameraState"/> value.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of <see cref="T:System.String"/> type.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToOpenCloseTooltipConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back. 
            </summary>
            <returns>
            <see cref="F:System.Windows.DependencyProperty.UnsetValue"/>.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.CameraStateToShowHideDetailsTooltipConverter">
            <summary>
            Converts camera list item expanded flag to tooltip text for show/hide switch control.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToShowHideDetailsTooltipConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts camera list item expanded flag to tooltip text for show/hide switch control.
            </summary>
            <param name="value"><see cref="T:System.Boolean"/> value defined if camera list item is expanded.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of <see cref="T:System.String"/></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CameraStateToShowHideDetailsTooltipConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back. 
            </summary>
            <returns>
            <see cref="F:System.Windows.DependencyProperty.UnsetValue"/>.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.CategoryStateToExpandTooltipConverter">
            <summary>
            Converts parameter category item expanded flag to tooltip text for expander button.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CategoryStateToExpandTooltipConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts parameter category item expanded flag to tooltip text for expander button.
            </summary>
            <param name="value"><see cref="T:System.Boolean"/> value defined if parameter category is expanded.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of <see cref="T:System.String"/></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.CategoryStateToExpandTooltipConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back. 
            </summary>
            <returns>
            <see cref="F:System.Windows.DependencyProperty.UnsetValue"/>.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.DebugConverter">
            <summary>
            This converter does nothing and is provided for debugging purposes.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.DebugConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.DebugConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.DebugConverter.ProvideValue(System.IServiceProvider)">
            <summary>
            When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension. 
            </summary>
            <returns>
            The object value to set on the property where the extension is applied. 
            </returns>
            <param name="serviceProvider">A service provider helper that can provide services for the markup extension.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.DocumentationParameterDataTemplateSelector">
            <summary>
            Class DocumentationParameterDataTemplateSelector.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.DocumentationParameterDataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            When overridden in a derived class, returns a <see cref="T:System.Windows.DataTemplate"/> based on custom logic.
            </summary>
            <returns>
            Returns a <see cref="T:System.Windows.DataTemplate"/> or null. The default value is null.
            </returns>
            <param name="item">The data object for which to select the template.</param><param name="container">The data-bound object.</param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Converters.DocumentationParameterDataTemplateSelector.DefaultTemplate">
            <summary>
            Gets or sets the default template.
            </summary>
            <value>The default template.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Converters.DocumentationParameterDataTemplateSelector.NumericParameterTemplate">
            <summary>
            Gets or sets the numeric parameter template.
            </summary>
            <value>The numeric parameter template.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.DynamicSliderTickConverter">
            <summary>
            Converts the double value to string using the specified string format.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.DynamicSliderTickConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts source values to a value for the binding target. The data binding engine calls this method when it propagates the values from source bindings to the binding target.
            </summary>
            <returns>
            A converted value.If the method returns null, the valid null value is used.A return value of <see cref="T:System.Windows.DependencyProperty"/>.<see cref="F:System.Windows.DependencyProperty.UnsetValue"/> indicates that the converter did not produce a value, and that the binding will use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"/> if it is available, or else will use the default value.A return value of <see cref="T:System.Windows.Data.Binding"/>.<see cref="F:System.Windows.Data.Binding.DoNothing"/> indicates that the binding does not transfer the value or use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"/> or the default value.
            </returns>
            <param name="values">The array of values that the source bindings in the <see cref="T:System.Windows.Data.MultiBinding"/> produces. The value <see cref="F:System.Windows.DependencyProperty.UnsetValue"/> indicates that the source binding has no value to provide for conversion.</param><param name="targetType">The type of the binding target property.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.DynamicSliderTickConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a binding target value to the source binding values.
            </summary>
            <returns>
            An array of values that have been converted from the target value back to the source values.
            </returns>
            <param name="value">The value that the binding target produces.</param><param name="targetTypes">The array of types to convert to. The array length indicates the number and types of values that are suggested for the method to return.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.EnumEntryDisplayNameConverter">
            <summary>
            Class EnumEntryDisplayNameConverter.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.EnumEntryDisplayNameConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts source values to a value for the binding target. The data binding engine calls this method when it propagates the values from source bindings to the binding target.
            </summary>
            <returns>
            A converted value.If the method returns null, the valid null value is used.A return value of <see cref="T:System.Windows.DependencyProperty"/>.<see cref="F:System.Windows.DependencyProperty.UnsetValue"/> indicates that the converter did not produce a value, and that the binding will use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"/> if it is available, or else will use the default value.A return value of <see cref="T:System.Windows.Data.Binding"/>.<see cref="F:System.Windows.Data.Binding.DoNothing"/> indicates that the binding does not transfer the value or use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"/> or the default value.
            </returns>
            <param name="values">The array of values that the source bindings in the <see cref="T:System.Windows.Data.MultiBinding"/> produces. The value <see cref="F:System.Windows.DependencyProperty.UnsetValue"/> indicates that the source binding has no value to provide for conversion.</param><param name="targetType">The type of the binding target property.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.EnumEntryDisplayNameConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a binding target value to the source binding values.
            </summary>
            <returns>
            An array of values that have been converted from the target value back to the source values.
            </returns>
            <param name="value">The value that the binding target produces.</param><param name="targetTypes">The array of types to convert to. The array length indicates the number and types of values that are suggested for the method to return.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.FieldVisibilityToMarginColumnWidthConverter">
            <summary>
            Converts a parameter fields visibility to margin grid column width.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.FieldVisibilityToMarginColumnWidthConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a parameter fields visibility to margin grid column width.
            </summary>
            <param name="values"/>The first values item is <see cref="T:Basler.Pylon.Controls.WPF.BaseParameterControl"/>, 
            the second is <see cref="T:System.Boolean"/> value defined if parameter name is visible, 
            the third is <see cref="T:System.Boolean"/> value defined if parameter value is visible,
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of <see cref="T:System.Windows.GridLength"/>.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.FieldVisibilityToMarginColumnWidthConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetTypes">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.FieldVisibilityToNameColumnWidthConverter">
            <summary>
            Converts a parameter fields visibility to name grid column width.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.FieldVisibilityToNameColumnWidthConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a parameter fields visibility to name grid column width.
            </summary>
            <param name="values">The first values item is <see cref="T:Basler.Pylon.Controls.WPF.BaseParameterControl"/>, 
            the second is <see cref="T:System.Boolean"/> value defined if parameter name is visible.</param> 
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of <see cref="T:System.Windows.GridLength"/>.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.FieldVisibilityToNameColumnWidthConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetTypes">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.FieldVisibilityToValueColumnWidthConverter">
            <summary>
            Converts a parameter fields visibility to value grid column width.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.FieldVisibilityToValueColumnWidthConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a parameter fields visibility to value grid column width.
            </summary>
            <param name="values">The first values item is <see cref="T:Basler.Pylon.Controls.WPF.BaseParameterControl"/>, 
            the second is <see cref="T:System.Boolean"/> value defined if parameter value is visible.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of <see cref="T:System.Windows.GridLength"/>.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.FieldVisibilityToValueColumnWidthConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetTypes">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.GenericParameterDataTemplateSelector">
            <summary>
            Select data template depends on parameter type representation
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.GenericParameterDataTemplateSelector.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.GenericParameterDataTemplateSelector.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Converters.GenericParameterDataTemplateSelector.GenericParameterDataTemplate">
            <summary>
            Gets or sets the generic parameter style data template.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.GenericParameterValueDataTemplateSelector">
            <summary>
            Select data template depends on parameter type representation
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.GenericParameterValueDataTemplateSelector.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.GenericParameterValueDataTemplateSelector.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Converters.GenericParameterValueDataTemplateSelector.ParameterBooleanDataTemplate">
            <summary>
            Gets or sets the boolean value style data template.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Converters.GenericParameterValueDataTemplateSelector.ParameterCommandDataTemplate">
            <summary>
            Gets or sets the command value style data template.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Converters.GenericParameterValueDataTemplateSelector.ParameterGenericDataTemplate">
            <summary>
            Gets or sets the value style data template.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.GridLengthToDoubleConverter">
            <summary>
            Class GridLengthToDoubleConverter.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.GridLengthToDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value produced by the binding source.</param><param name="targetType">The type of the binding target property.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.GridLengthToDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param><param name="targetType">The type to convert to.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.IconRotationYConverter">
            <summary>
            Convert icon rotation around Y-axis (vertical axis) to corresponding projection.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.IconRotationYConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value produced by the binding source.</param><param name="targetType">The type of the binding target property.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.IconRotationYConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param><param name="targetType">The type to convert to.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.Int64ToBooleanConverter">
            <summary>
            Converts non-zero integer to <see langword="true"/> and zero to <see langword="false"/>.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.Int64ToBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value produced by the binding source.</param><param name="targetType">The type of the binding target property.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.Int64ToBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param><param name="targetType">The type to convert to.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.InverseBooleanConverter">
            <summary>
            Converts <see cref="T:System.Boolean"/> value to inverted one.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.InverseBooleanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts <see cref="T:System.Boolean"/> value to inverted one.
            </summary>
            <param name="value"><see cref="T:System.Boolean"/>value.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.InverseBooleanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts <see cref="T:System.Boolean"/> value to inverted one.
            </summary>
            <param name="value"><see cref="T:System.Boolean"/>value.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.InvertDoubleConverter">
            <summary>
            Converts values. 
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.InvertDoubleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value produced by the binding source.</param><param name="targetType">The type of the binding target property.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.InvertDoubleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param><param name="targetType">The type to convert to.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.InvertedBoolToVisibilityConverter">
            <summary>
            Converts <see cref="T:System.Boolean"/> value to <see cref="T:System.Windows.Visibility"/> value.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.InvertedBoolToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts <see cref="T:System.Boolean"/> value to <see cref="T:System.Windows.Visibility"/> value.
            </summary>
            <param name="value"><see cref="T:System.Boolean"/>value.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of <see cref="T:System.Windows.Visibility"/>.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.InvertedBoolToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts <see cref="T:System.Windows.Visibility"/> value to <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="value"><see cref="T:System.Windows.Visibility"/>value.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.MathConverter">
            <summary>
            Does a math equation on the bound value.
            Use @VALUE in your mathEquation as a substitute for bound value
            Operator order is parenthesis first, then Left-To-Right (no operator precedence)
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.MathConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
            <exception cref="T:System.InvalidCastException"></exception>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.MathConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.MultiplyConverter">
            <summary>
            Converts an array of <see cref="T:System.Double"/> values to their product.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.MultiplyConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts source values to a value for the binding target. The data binding engine calls this method when it propagates
            the values from source bindings to the binding target.
            </summary>
            <param name="values">
            The array of values that the source bindings in the
            <see cref="T:System.Windows.Data.MultiBinding" /> produces. The value
            <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> indicates that the source binding has no value to provide
            for conversion.
            </param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value.If the method returns null, the valid null value is used.A return value of
            <see cref="T:System.Windows.DependencyProperty" />.<see cref="F:System.Windows.DependencyProperty.UnsetValue" />
            indicates that the converter did not produce a value, and that the binding will use the
            <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> if it is available, or else will use the default value.A
            return value of <see cref="T:System.Windows.Data.Binding" />.<see cref="F:System.Windows.Data.Binding.DoNothing" />
            indicates that the binding does not transfer the value or use the
            <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> or the default value.
            </returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.MultiplyConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a binding target value to the source binding values.
            </summary>
            <param name="value">The value that the binding target produces.</param>
            <param name="targetTypes">
            The array of types to convert to. The array length indicates the number and types of values
            that are suggested for the method to return.
            </param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>An array of values that have been converted from the target value back to the source values.</returns>
            <exception cref="T:System.Exception">Not implemented</exception>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.NegateHalfConverter">
            <summary>
            This converter calculates the value in the following way: result = -value / 2.0;
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.NegateHalfConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value produced by the binding source.</param><param name="targetType">The type of the binding target property.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.NegateHalfConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param><param name="targetType">The type to convert to.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.NumberRoundingWithSuffixConverter">
            <summary>
            Converts the double value to string using the specified string format.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.NumberRoundingWithSuffixConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts source values to a value for the binding target. The data binding engine calls this method when it propagates the values from source bindings to the binding target.
            </summary>
            <param name="value">Double value.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of <see cref="T:System.Double"/>. If <paramref name="value"/> is null an empty string is returned.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.NumberRoundingWithSuffixConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a binding target value to the source binding values.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.OpenCloseCameraCommandParametersConverter">
            <summary>
            Converts objects array to <see cref="T:System.Tuple"/> object.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.OpenCloseCameraCommandParametersConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts objects array to <see cref="T:System.Tuple"/> object with <see cref="T:System.Boolean"/> and <see cref="T:Basler.Pylon.Controls.WPF.ICameraModel"/> values.
            </summary>
            <param name="values">The first values item is <see cref="T:System.Boolean"/>, the second is <see cref="T:Basler.Pylon.Controls.WPF.ICameraModel"/></param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of <see cref="T:System.Tuple"/>.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.OpenCloseCameraCommandParametersConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetTypes">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.ParameterCategoryStyleSelector">
            <summary>
            Selects <see cref="T:System.Windows.Style"/> depends on <see cref="T:Basler.Pylon.Controls.WPF.IBaseItem"/>.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.ParameterCategoryStyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)">
            <summary>
            Selects a <see cref="T:System.Windows.Style"/> depend on category type.
            </summary>
            <param name="item"><see cref="T:Basler.Pylon.Controls.WPF.IBaseItem"/></param>
            <param name="container"><see cref="T:System.Windows.DependencyObject"/></param>
            <returns><see cref="T:System.Windows.Style"/></returns>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Converters.ParameterCategoryStyleSelector.FirstLevelCategoryStyle">
            <summary>
            Gets or sets <see cref="T:System.Windows.Style"/> for first level category.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Converters.ParameterCategoryStyleSelector.SecondLevelCategoryStyle">
            <summary>
            Gets or sets <see cref="T:System.Windows.Style"/> for second level category.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Converters.ParameterCategoryStyleSelector.SelectorCategoryStyle">
            <summary>
            Gets or sets <see cref="T:System.Windows.Style"/> for selector category.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Converters.ParameterCategoryStyleSelector.LeafItemStyle">
            <summary>
            Gets or sets <see cref="T:System.Windows.Style"/> for item.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.ParameterDisplayNameConverter">
            <summary>
            Converts a parameter to display name text.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.ParameterDisplayNameConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a parameter to display name text.
            </summary>
            <param name="values">An array of values. The first array item is display name of a parameter, the second is object of <see cref="T:Basler.Pylon.Controls.WPF.BaseParameterModel"/>.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="param">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.ParameterDisplayNameConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetTypes">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.ParameterModifierTemplateSelector">
            <summary>
            Select data template depends on parameter type representation
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.ParameterModifierTemplateSelector.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="values">The array of values that the source bindings in the <see cref="T:System.Windows.Data.MultiBinding"/> produces. The value <see cref="F:System.Windows.DependencyProperty.UnsetValue"/> indicates that the source binding has no value to provide for conversion.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.ParameterModifierTemplateSelector.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetTypes">The array of types to convert to. The array length indicates the number and types of values that are suggested for the method to return.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>An array of values that have been converted from the target value back to the source values.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Converters.ParameterModifierTemplateSelector.SliderModifierDataTemplate">
            <summary>
            Gets or sets the slider modifier data template.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Converters.ParameterModifierTemplateSelector.BooleanModifierDataTemplate">
            <summary>
            Gets or sets the boolean modifier data template.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Converters.ParameterModifierTemplateSelector.DefaultDataTemplate">
            <summary>
            Gets or sets the default data template.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Converters.ParameterModifierTemplateSelector.BooleanDisabledDataTemplate">
            <summary>
            Gets or sets the boolean disabled data template.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Converters.ParameterModifierTemplateSelector.DefaultDisabledDataTemplate">
            <summary>
            Gets or sets the default disabled data template.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.ParameterTreeIsAnyVisibleToBoolConverter">
            <summary>
            Converts boolean parameters to bool.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.ParameterTreeIsAnyVisibleToBoolConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts boolean values to bool.
            </summary>
            <returns>
            If both of values is true then the method returns true otherwise false.
            </returns>
            <param name="values">The values array produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.ParameterTreeIsAnyVisibleToBoolConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetTypes">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.PinPositionToSpanConverter">
            <summary>
            Convert Pin Position and type of Span to RowSpan or ColumnSpan
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.PinPositionToSpanConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value produced by the binding source.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.PinPositionToSpanConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value. If the method returns null, the valid null value is used.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.SemicolonStringToKeyGesturesTypeConverter">
            <summary>
            Converts a semicolon separated string to <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.SemicolonStringToKeyGesturesTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts a semicolon separated string to <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:System.Windows.Input.KeyGesture"/>.
            </summary>
            <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext"/></param>
            <param name="culture">The culture to use in the converter.</param>
            <param name="value"><see cref="T:System.String"/> which contains semicolon separated key combinations.</param>
            <returns></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.SemicolonStringToKeyGesturesTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Gets a flag defined if converting is possible.
            </summary>
            <param name="context"><see cref="T:System.ComponentModel.ITypeDescriptorContext"/></param>
            <param name="sourceType">Type of source value.</param>
            <returns></returns>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.BrushToRectangularVisualBrushConverter">
            <summary>
            Converts any <see cref="T:System.Windows.Media.Brush"/> to a rectangular <see cref="T:System.Windows.Media.VisualBrush"/>.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.BrushToRectangularVisualBrushConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts source values to a value for the binding target. The data binding engine calls this method when it propagates
            the values from source bindings to the binding target.
            </summary>
            <returns>
            A converted value.If the method returns null, the valid null value is used.A return value of
            <see cref="T:System.Windows.DependencyProperty" />.<see cref="F:System.Windows.DependencyProperty.UnsetValue" />
            indicates that the converter did not produce a value, and that the binding will use the
            <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> if it is available, or else will use the default value.A
            return value of <see cref="T:System.Windows.Data.Binding" />.<see cref="F:System.Windows.Data.Binding.DoNothing" />
            indicates that the binding does not transfer the value or use the
            <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> or the default value.
            </returns>
            <param name="values">
            The array of values that the source bindings in the
            <see cref="T:System.Windows.Data.MultiBinding" /> produces. The value
            <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> indicates that the source binding has no value to provide
            for conversion.
            </param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.BrushToRectangularVisualBrushConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a binding target value to the source binding values.
            </summary>
            <returns>
            An array of values that have been converted from the target value back to the source values.
            </returns>
            <param name="value">The value that the binding target produces.</param>
            <param name="targetTypes">
            The array of types to convert to. The array length indicates the number and types of values
            that are suggested for the method to return.
            </param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.StreamControllerRegionVisibilityToPositionConverter">
            <summary>
            Stream controller region visibility to region position converter.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.StreamControllerRegionVisibilityToPositionConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts source values to a value for the binding target. The data binding engine calls this method when it propagates the values from source bindings to the binding target.
            </summary>
            <param name="values">An array of values. The first array item is Stream group Visible,
            the second item is Zoom group Visible,
            the third item is Record group Visible.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use. Type of <see cref="T:Basler.Pylon.Controls.WPF.Common.StreemControllerGroupType"/></param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of grid column.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.StreamControllerRegionVisibilityToPositionConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a binding target value to the source binding values.
            </summary>
            <returns>
            An array of values that have been converted from the target value back to the source values.
            </returns>
            <param name="value">The value that the binding target produces.</param><param name="targetTypes">The array of types to convert to. The array length indicates the number and types of values that are suggested for the method to return.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.StringToUpperCaseConverter">
            <summary>
            Converts a text to upper case.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.StringToUpperCaseConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts text to upper case.
            </summary>
            <param name="value">A text what should be converted.</param>
            <param name="targetType">The type of the binding target property.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>A converted value of <see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.StringToUpperCaseConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value back. 
            </summary>
            <returns>
            <see cref="F:System.Windows.DependencyProperty.UnsetValue"/>.
            </returns>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The types to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Converters.ValueChangeToStringFormatConverter">
            <summary>
            Converts the order of value change to the number string format.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.ValueChangeToStringFormatConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.Converters.ValueChangeToStringFormatConverter"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.ValueChangeToStringFormatConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value produced by the binding source.</param><param name="targetType">The type of the binding target property.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Converters.ValueChangeToStringFormatConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value. 
            </summary>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
            <param name="value">The value that is produced by the binding target.</param><param name="targetType">The type to convert to.</param><param name="parameter">The converter parameter to use.</param><param name="culture">The culture to use in the converter.</param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Converters.ValueChangeToStringFormatConverter.BaseFormat">
            <summary>
            Gets or sets the base format.
            </summary>
            <value>The base format.</value>
            <remarks>Default value is "F".</remarks>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Effects.ShaderSupport">
            <summary>
            Provides properties to check whether pixel shaders of the particular shader models are supported.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Effects.ShaderSupport.IsShaderModel2Supported">
            <summary>
            Gets a value indicating whether Shader Model 2.0 is supported by hardware.
            </summary>
            <value><see langword="true" /> if Shader Model 2.0 is supported by hardware; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Effects.ShaderSupport.IsShaderModel3Supported">
            <summary>
            Gets a value indicating whether Shader Model 3.0 is supported by hardware.
            </summary>
            <value><see langword="true" /> if Shader Model 3.0 is supported by hardware; otherwise, <see langword="false" />.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Effects.TextBoxSelectionEffect">
            <summary>
            Affects the appearance of <see cref="T:System.Windows.Controls.TextBox"/> selection.
            </summary>
            <remarks>
            The shader requires that the different parts of the input image use different color channels:
            <list type="table">
                <listheader>
                    <term>Image Part</term>
                    <description>Color Channel</description>
                </listheader>
                <item>
                    <term>Foreground</term>
                    <description>Blue</description>
                </item>
                <item>
                    <term>Background</term>
                    <description>Green</description>
                </item>
                <item>
                    <term>Selection</term>
                    <description>Red</description>
                </item>
            </list>
            </remarks>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Effects.TextBoxSelectionEffect.InputProperty">
            <summary>
            The pixel shader input.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Effects.TextBoxSelectionEffect.ForegroundProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Effects.TextBoxSelectionEffect.Foreground"/> property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Effects.TextBoxSelectionEffect.SelectionBrushProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Effects.TextBoxSelectionEffect.SelectionBrush"/> property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Effects.TextBoxSelectionEffect.BackgroundProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Effects.TextBoxSelectionEffect.Background"/> property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Effects.TextBoxSelectionEffect.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.Effects.TextBoxSelectionEffect"/> class.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Effects.TextBoxSelectionEffect.Foreground">
            <summary>
            Gets or sets the foreground brush.
            </summary>
            <value>The foreground brush.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Effects.TextBoxSelectionEffect.SelectionBrush">
            <summary>
            Gets or sets the selection brush.
            </summary>
            <value>The selection brush.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Effects.TextBoxSelectionEffect.Background">
            <summary>
            Gets or sets the background brush.
            </summary>
            <value>The background brush.</value>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.FpsCounter.NewFrame">
            <summary>
            Notifies the counter that the frame is processed.
            </summary>
            <remarks>
            The counter calculates the frame rate after each frameCount of frames by dividing the number of frames by
            the elapsed time.
            </remarks>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.ImageViewer">
            <summary>
            Represents a control that allows the user to display acquired images.
            <para>
            <img src="../media/ImageViewer.png" />
            </para>
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ImageViewer.StaticOverlayStyleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ImageViewer.StaticOverlayStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ImageViewer.StaticOverlayTemplateProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ImageViewer.StaticOverlayTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ImageViewer.IsStaticOverlayVisibleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ImageViewer.IsStaticOverlayVisible"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ImageViewer.CameraProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ImageViewer.Camera"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ImageViewer.ClearOnCameraChangedProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ImageViewer.ClearOnCameraChanged"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ImageViewer.ScaleStepProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ImageViewer.ScaleStep"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ImageViewer.ScaleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ImageViewer.Scale"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ImageViewer.RendererProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ImageViewer.Renderer"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ImageViewer.EffectiveScaleXProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ImageViewer.EffectiveScaleX"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ImageViewer.EffectiveScaleYProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ImageViewer.EffectiveScaleY"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ImageViewer.BitmapScalingModeProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.ImageViewer.BitmapScalingMode"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ImageViewer.SaveSnapshotCommand">
            <summary>
            The command to save a snapshot from the camera.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ImageViewer.ZoomInCommand">
            <summary>
            The command to zoom an image in.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ImageViewer.ZoomOutCommand">
            <summary>
            The command to zoom an image out.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ImageViewer.ZoomFitCommand">
            <summary>
            The command to zoom an image to fit the window size.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ImageViewer.ZoomActualCommand">
            <summary>
            The command to zoom an image to actual size.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ImageViewer.ImageChangedEvent">
            <summary>
            The routed <see cref="E:Basler.Pylon.Controls.WPF.ImageViewer.ImageChanged"/> event.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ImageViewer.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Basler.Pylon.Controls.WPF.ImageViewer"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ImageViewer.#ctor">
            <summary>
            Initializes members of the <see cref="T:Basler.Pylon.Controls.WPF.ImageViewer"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ImageViewer.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call
            <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ImageViewer.Clear">
            <summary>
            Clear an the image display.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ImageViewer.ZoomToFit">
            <summary>
            Zooms the image to fit the window.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ImageViewer.CaptureImage">
            <summary>
            Captures the image.
            </summary>
            <returns>Image.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ImageViewer.OnSaveSnapshotCommandCanExecute(System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Occurs when the <see cref="F:Basler.Pylon.Controls.WPF.ImageViewer.SaveSnapshotCommand"/> can be executed.
            </summary>
            <param name="canExecuteRoutedEventArgs">
            The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event
            data.
            </param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ImageViewer.OnSaveSnapshotCommandExecuted(System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when the <see cref="F:Basler.Pylon.Controls.WPF.ImageViewer.SaveSnapshotCommand"/> is executed.
            </summary>
            <param name="executedRoutedEventArgs">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ImageViewer.OnZoomInCommandExecuted(System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when the <see cref="F:Basler.Pylon.Controls.WPF.ImageViewer.ZoomInCommand"/> is executed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ImageViewer.OnZoomInCommandCanExecute(System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Occurs when the <see cref="F:Basler.Pylon.Controls.WPF.ImageViewer.ZoomInCommand"/> can be executed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ImageViewer.OnZoomOutCommandExecuted(System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when the <see cref="F:Basler.Pylon.Controls.WPF.ImageViewer.ZoomOutCommand"/> is executed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ImageViewer.OnZoomOutCommandCanExecute(System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Occurs when the <see cref="F:Basler.Pylon.Controls.WPF.ImageViewer.ZoomOutCommand"/> can be executed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ImageViewer.OnZoomFitCommandExecuted(System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when the <see cref="F:Basler.Pylon.Controls.WPF.ImageViewer.ZoomFitCommand"/> is executed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ImageViewer.OnZoomFitCommandCanExecute(System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Occurs when the <see cref="F:Basler.Pylon.Controls.WPF.ImageViewer.ZoomFitCommand"/> can be executed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ImageViewer.OnZoomActualCommandExecuted(System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Occurs when the <see cref="F:Basler.Pylon.Controls.WPF.ImageViewer.ZoomActualCommand"/> is executed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ImageViewer.OnZoomActualCommandCanExecute(System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Occurs when the <see cref="F:Basler.Pylon.Controls.WPF.ImageViewer.ZoomActualCommand"/> can be executed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.CanExecuteRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ImageViewer.OnCameraChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Occurs after a device property is changed.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ImageViewer.OnScaleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="E:ScaleChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ImageViewer.StaticOverlayStyle">
            <summary>
            Gets or sets the static overlay style.
            </summary>
            <value>The static overlay style.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ImageViewer.StaticOverlayTemplate">
            <summary>
            Gets or sets the static overlay template.
            </summary>
            <value>The static overlay template.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ImageViewer.IsStaticOverlayVisible">
            <summary>
            Gets or sets the visibility of the static overlay.
            </summary>
            <value><c>true</c> if the static overlay is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ImageViewer.Camera">
            <summary>
            Gets and sets the binding path to device.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ImageViewer.ScaleStep">
            <summary>
            Gets or sets the scale step.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ImageViewer.ClearOnCameraChanged">
            <summary>
            Gets or sets the option to clear the image after the camera device is changed.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ImageViewer.Scale">
            <summary>
            Gets or sets the scale value.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ImageViewer.Renderer">
            <summary>
            Gets or sets the visual renderer.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ImageViewer.BitmapScalingMode">
            <summary>
            Gets or sets the <see cref="P:System.Windows.Media.RenderOptions.RenderOptions.BitmapScalingMode"/>
            for the viewer.
            </summary>
            <value>The bitmap scaling mode.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ImageViewer.MinScale">
            <summary>
            Gets or sets the minimal scale value.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ImageViewer.MaxScale">
            <summary>
            Gets or sets the maximum scale value.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ImageViewer.EffectiveScaleX">
            <summary>
            Gets the effective scale for the x-axis.
            </summary>
            <value>The effective scale for x-axis.</value>
            <remarks>The effective scale is calculated as Scale * 96.0 / DpiX.</remarks>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ImageViewer.EffectiveScaleY">
            <summary>
            Gets the effective scale for the y-axis.
            </summary>
            <value>The effective scale for y-axis.</value>
            <remarks>The effective scale is calculated as Scale * 96.0 / DpiY.</remarks>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ImageViewer.IsViewerEmpty">
            <summary>
            Indicates if the viewer is empty. The viewer is empty if it does not display any image.
            </summary>
            <value><c>true</c> if viewer have not any image; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ImageViewer.CanZoomIn">
            <summary>
            Indicates if the image can be zoomed in.
            </summary>
            <value><c>true</c> if the image can be zoomed in; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ImageViewer.CanZoomOut">
            <summary>
            Indicates if the image can be zoomed out.
            </summary>
            <value><c>true</c> if the image can be zoomed out; otherwise, <c>false</c>.</value>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.ImageViewer.ImageChanged">
            <summary>
            Occurs when the <see cref="P:Basler.Pylon.Controls.WPF.IRenderer.Image"/> property of the <see cref="P:Basler.Pylon.Controls.WPF.ImageViewer.Renderer"/> changes.
            </summary>
            <remarks>
            The image is usually reused for multiple frames, so this event won't be raised for every frame.
            Instead, it will be raised in the following cases:
            <list type="bullet">
                <item>
                    <description>The visual tree is rebuilt.</description>
                </item>
                <item>
                    <description>The image is cleared.</description>
                </item>
                <item>
                    <description>The image is shown for the first time after it has been cleared.</description>
                </item>
            </list>
            </remarks>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.RendererBase">
            <summary>
            Provides base implementation of <see cref="T:Basler.Pylon.Controls.WPF.IRenderer"/>.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.IRenderer">
            <summary>
            The interface for rendering images.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IRenderer.StartRendering">
            <summary>
            Starts the rendering.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IRenderer.Render(Basler.Pylon.IGrabResult)">
            <summary>
            Renders the specified frame.
            </summary>
            <param name="grabResult">The grab result.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IRenderer.StopRendering">
            <summary>
            Stops the rendering.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IRenderer.Clear">
            <summary>
            Clears the latest displayed image.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IRenderer.Image">
            <summary>
            Gets the rendered image.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IRenderer.NativeImage">
            <summary>
            Gets an image as Pylon object.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IRenderer.DisplayFramesPerSecond">
            <summary>
            Gets the number of frames displayed per second.
            </summary>
            <value>The number of frames displayed per second.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IRenderer.AcquisitionFramesPerSecond">
            <summary>
            Gets the number of frames acquired per second.
            </summary>
            <value>The number of frames acquired per second.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IRenderer.IsVisible">
            <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
            <value><c>true</c> if this instance is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.RendererBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.RendererBase"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.RendererBase.Dispose">
            <summary>
            Performs application-specific tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.RendererBase.StartRendering">
            <summary>
            Starts the rendering.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.RendererBase.Render(Basler.Pylon.IGrabResult)">
            <summary>
            Renders the specified frame.
            </summary>
            <param name="grabResult">The grab result.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.RendererBase.StopRendering">
            <summary>
            Stops the rendering.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.RendererBase.Clear">
            <summary>
            Clears the latest displayed image.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.RendererBase.OnRendering(Basler.Pylon.IImage,System.TimeSpan,System.Boolean)">
            <summary>
            Called when rendering of frame is requested.
            </summary>
            <param name="image">The image to render.</param>
            <param name="renderingTime">The rendering time.</param>
            <param name="sizeChanged">The value indicating whether the image size changed.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.RendererBase.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources. Also releases managed resources, if desired.
            </summary>
            <param name="disposing">
            <c>True</c> to release both managed and unmanaged resources. <c>False</c> to release only
            unmanaged resources.
            </param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.RendererBase.OnPropertyChanged(System.String)">
            <summary>
            Called when property value is changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.RendererBase.Invalidate">
            <summary>
            Requests to render the next received frame.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.RendererBase.Image">
            <summary>
            Gets the rendered image.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.RendererBase.NativeImage">
            <summary>
            Gets an image as Pylon object.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.RendererBase.DisplayFramesPerSecond">
            <summary>
            Gets the number of frames displayed per second.
            </summary>
            <value>The number of frames displayed per second.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.RendererBase.AcquisitionFramesPerSecond">
            <summary>
            Gets the number of frames acquired per second.
            </summary>
            <value>The number of frames acquired per second.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.RendererBase.IsVisible">
            <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
            <value><c>true</c> if this instance is visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.RendererBase.PreviousImage">
            <summary>
            Gets or sets the previous image.
            </summary>
            <value>The previous image.</value>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.RendererBase.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.InteropBitmapRenderer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources. Also releases managed resources, if desired.
            </summary>
            <param name="disposing">
            <c>True</c> to release both managed and unmanaged resources. <c>False</c> to release only
            unmanaged resources.
            </param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.InteropBitmapRenderer.Clear">
            <summary>
            Clears the latest displayed image.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.InteropBitmapRenderer.OnRendering(Basler.Pylon.IImage,System.TimeSpan,System.Boolean)">
            <summary>
            Called when rendering of frame is requested.
            </summary>
            <param name="image">The image to render.</param>
            <param name="renderingTime">The rendering time.</param>
            <param name="sizeChanged">The value indicating whether the image size changed.</param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.InteropBitmapRenderer.Image">
            <summary>
            Gets the rendered image.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.WriteableBitmapRenderer">
            <summary>
            Represents a visual renderer based on <see cref="T:System.Windows.Media.Imaging.WriteableBitmap"/> .
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.WriteableBitmapRenderer.Clear">
            <summary>
            Clears the latest displayed image.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.WriteableBitmapRenderer.OnRendering(Basler.Pylon.IImage,System.TimeSpan,System.Boolean)">
            <summary>
            Called when rendering of frame is requested.
            </summary>
            <param name="image">The image to render.</param>
            <param name="renderingTime">The rendering time.</param>
            <param name="sizeChanged">The value indicating whether the image size changed.</param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.WriteableBitmapRenderer.Image">
            <summary>
            Gets the rendered image.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.BaseItem">
            <summary>
            Abstract base item which is used in logical parameter tree.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.IBaseItem">
            <summary>
            Interface of base parameter tree item.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IBaseItem.Clone(System.Boolean,System.Boolean,Basler.Pylon.Controls.WPF.IBaseItem)">
            <summary>
            Clones the item.
            </summary>
            <param name="cloneChildItems">
            If set to <see langword="true" /> the child items will be cloned.
            If set to <see langword="false" /> no child items will be added.
            </param>
            <param name="initVisualPath">
            If set to <see langword="true" /> the visual path will be initialized in the cloned item.
            If set to <see langword="false" /> the visual path will not be initialized in the cloned item.
            </param>
            <param name="newParent">
            The new parent to set in the cloned item. 
            If <see langword="null"/>, the original parent will be used.
            </param>
            <returns>IBaseItem.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IBaseItem.GetVisualPath">
            <summary>
            Gets or sets the parameter visual path.
            </summary>
            <remarks>This method returns the visual path even if <see cref="P:Basler.Pylon.Controls.WPF.IBaseItem.VisualPath"/> property is not initialized.</remarks>
            <seealso cref="P:Basler.Pylon.Controls.WPF.IBaseItem.VisualPath"/>
            <seealso cref="M:Basler.Pylon.Controls.WPF.IBaseItem.InitVisualPath"/>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IBaseItem.InitVisualPath">
            <summary>
            Initializes <see cref="P:Basler.Pylon.Controls.WPF.IBaseItem.VisualPath"/> property.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IBaseItem.Name">
            <summary>
            Name of item.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IBaseItem.DisplayName">
            <summary>
            The display name of the item.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IBaseItem.Description">
            <summary>
            Description of item.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IBaseItem.IsVisible">
            <summary>
            Determine if item is visible.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IBaseItem.Parent">
            <summary>
            Gets a parent item.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IBaseItem.VisualPath">
            <summary>
            Gets or sets the parameter visual path.
            </summary>
            <value>The parameter visual path in the tree view.</value>
            <remarks>
            This property returns <see langword="null"/> until <see cref="M:Basler.Pylon.Controls.WPF.IBaseItem.InitVisualPath"/> method is called
            or the value is set explicitly. In order to get the visual path without initializing the property use
            <see cref="M:Basler.Pylon.Controls.WPF.IBaseItem.GetVisualPath"/> method.
            </remarks>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BaseItem.#ctor(Basler.Pylon.Controls.WPF.IBaseItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.BaseItem"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BaseItem.Clone(System.Boolean,System.Boolean,Basler.Pylon.Controls.WPF.IBaseItem)">
            <summary>
            Clones the item.
            </summary>
            <param name="cloneChildItems">
            If set to <see langword="true" /> the child items will be cloned.
            If set to <see langword="false" /> no child items will be added.
            </param>
            <param name="initVisualPath">
            If set to <see langword="true" /> the visual path will be initialized in the cloned item.
            If set to <see langword="false" /> the visual path will not be initialized in the cloned item.
            </param>
            <param name="newParent">
            The new parent to set in the cloned item. 
            If <see langword="null"/>, the original parent will be used.
            </param>
            <returns>IBaseItem.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BaseItem.InitVisualPath">
            <summary>
            Initializes <see cref="P:Basler.Pylon.Controls.WPF.IBaseItem.VisualPath"/>.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BaseItem.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BaseItem.GetVisualPath">
            <summary>
            Gets or sets the parameter visual path.
            </summary>
            <returns>System.String.</returns>
            <seealso cref="P:Basler.Pylon.Controls.WPF.BaseItem.VisualPath"/>
              <seealso cref="M:Basler.Pylon.Controls.WPF.BaseItem.InitVisualPath"/>
            <remarks>This method returns the visual path even if <see cref="P:Basler.Pylon.Controls.WPF.BaseItem.VisualPath"/> property is not initialized.</remarks>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.BaseItem.OnPropertyChanged(System.String)">
            <summary>
            Called when the property has changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseItem.Name">
            <summary>
            Name of item.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseItem.DisplayName">
            <summary>
            The display name of the item.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseItem.Description">
            <summary>
            Description of item.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseItem.IsVisible">
            <summary>
            Determine if item is visible.
            </summary>
            <value><see langword="true" /> if this instance is visible; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseItem.Parent">
            <summary>
            Gets a parent item.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.BaseItem.VisualPath">
            <summary>
            Gets the parameter visual path.
            </summary>
            <value>The parameter visual path in the tree view.</value>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.BaseItem.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.ICategory">
            <summary>
            Interface of parameter category.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ICategory.SetAllChildVisible">
            <summary>
            Sets all child items <see cref="P:Basler.Pylon.Controls.WPF.IBaseItem.IsVisible"/> to true value.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICategory.NestingLevel">
            <summary>
            Gets nesting level of a category.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICategory.IconName">
            <summary>
            Gets an icon name of category.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICategory.IconGeometry">
            <summary>
            Gets an icon geometry.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICategory.ToolTip">
            <summary>
            Gets a tooltip text of category.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICategory.Items">
            <summary>
            Gets a list of child items.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICategory.IsExpanded">
            <summary>
            Gets or sets a flag defined if category is expanded.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ICategory.HasAnyVisibleChild">
            <summary>
            Gets a value indicating whether this category has any visible child.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Category.#ctor(Basler.Pylon.Controls.WPF.IBaseItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.Category"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Category.#ctor(System.Int32,Basler.Pylon.Controls.WPF.IBaseItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.Category"/> class.
            </summary>
            <param name="nestingLevel">Nesting level of a category.</param>
            <param name="parent">Parent of a category. <see cref="T:Basler.Pylon.Controls.WPF.IBaseItem"/></param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Category.SetAllChildVisible">
            <summary>
            Sets all child items <see cref="P:Basler.Pylon.Controls.WPF.IBaseItem.IsVisible"/> to true value.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Category.SharedDictionary">
            <summary>
            Gets resource dictionary with icons geometry.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Category.NestingLevel">
            <summary>
            Gets or sets nesting level of a category.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Category.IconName">
            <summary>
            Gets an icon name of category.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Category.IconGeometry">
            <summary>
            Gets an icon geometry.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Category.ToolTip">
            <summary>
            Gets or sets a tooltip text of category.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Category.IsExpanded">
            <summary>
            Gets a flag defined if category is expanded.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Category.Items">
            <summary>
            Gets or sets a list of child items.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Category.HasAnyVisibleChild">
            <summary>
            Gets a value indicating whether this category has any visible child.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.CategoryIconNameList">
            <summary>
            Defines icon names of the categories.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CategoryIconNameList.GetIconKeyForNode(Basler.Pylon.Controls.Common.Parameters.ParameterNode)">
            <summary>
            Gets icon key associated with node.
            </summary>
            <param name="node"><see cref="T:Basler.Pylon.Controls.Common.Parameters.ParameterNode"/></param>
            <returns>Icon Geometry key.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CategoryIconNameList.GetIconKeyForParameterName(System.String)">
            <summary>
            Gets icon key associated with parameter name.
            </summary>
            <param name="name">Name of the parameter.</param>
            <returns>Icon Geometry key.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CategoryIconNameList.GetDefaultIconKey">
            <summary>
            Gets default icon key.
            </summary>
            <returns>Icon Geometry name.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CustomCategory.#ctor(System.String,Basler.Pylon.Controls.WPF.IBaseItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.CustomCategory"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CustomCategory.#ctor(System.String,System.Int32,Basler.Pylon.Controls.WPF.IBaseItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.CustomCategory"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="nestingLevel">The nesting level.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CustomCategory.#ctor(System.String,System.String,Basler.Pylon.Controls.WPF.IBaseItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.CustomCategory"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CustomCategory.#ctor(System.String,System.String,System.String,Basler.Pylon.Controls.WPF.IBaseItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.CustomCategory"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <param name="displayName">The display name.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.CustomCategory.Clone(System.Boolean,System.Boolean,Basler.Pylon.Controls.WPF.IBaseItem)">
            <summary>
            Clones the item.
            </summary>
            <param name="cloneChildItems">
            If set to <see langword="true" /> the child items will be cloned.
            If set to <see langword="false" /> no child items will be added.
            </param>
            <param name="initVisualPath">
            If set to <see langword="true" /> the visual path will be initialized in the cloned item.
            If set to <see langword="false" /> the visual path will not be initialized in the cloned item.
            </param>
            <param name="newParent">
            The new parent to set in the cloned item. 
            If <see langword="null"/>, the original parent will be used.
            </param>
            <returns>IBaseItem.</returns>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CustomCategory.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CustomCategory.DisplayName">
            <summary>
            The display name of the item.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CustomCategory.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.CustomCategory.IconName">
            <summary>
            Gets an icon name of category.
            </summary>
            <value>The name of the icon.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.INodeBasedItem">
            <summary>
            Interface of items what based on <see cref="T:Basler.Pylon.Controls.Common.Parameters.ParameterNode"/>/&gt;
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.INodeBasedItem.Node">
            <summary>
            Gets <see cref="T:Basler.Pylon.Controls.Common.Parameters.ParameterNode"/> object.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.INodeBasedItemSelectorCategory.Entries">
            <summary>
            Gets a list of selector entries.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.INodeBasedItemSelectorCategory.SelectedEntry">
            <summary>   
            Gets or sets selected selector entry.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.INodeBasedItemSelectorCategory.IsEntriesOpened">
            <summary>
            Gets a flag defined if entries list is opened.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.NodeBasedItemCategory.#ctor(Basler.Pylon.Controls.Common.Parameters.ParameterNode,Basler.Pylon.Controls.WPF.IBaseItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.NodeBasedItemCategory"/> class.
            </summary>
            <param name="node">The node.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.NodeBasedItemCategory.#ctor(Basler.Pylon.Controls.Common.Parameters.ParameterNode,System.Int32,Basler.Pylon.Controls.WPF.IBaseItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.NodeBasedItemCategory"/> class.
            </summary>
            <param name="node">The node.</param>
            <param name="nestingLevel">The nesting level.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.NodeBasedItemCategory.Clone(System.Boolean,System.Boolean,Basler.Pylon.Controls.WPF.IBaseItem)">
            <summary>
            Clones the item.
            </summary>
            <param name="cloneChildItems">
            If set to <see langword="true" /> the child items will be cloned.
            If set to <see langword="false" /> no child items will be added.
            </param>
            <param name="initVisualPath">
            If set to <see langword="true" /> the visual path will be initialized in the cloned item.
            If set to <see langword="false" /> the visual path will not be initialized in the cloned item.
            </param>
            <param name="newParent">
            The new parent to set in the cloned item. 
            If <see langword="null"/>, the original parent will be used.
            </param>
            <returns>IBaseItem.</returns>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.NodeBasedItemCategory.Node">
            <summary>
            Gets <see cref="T:Basler.Pylon.Controls.Common.Parameters.ParameterNode"/> object.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.NodeBasedItemCategory.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.NodeBasedItemCategory.DisplayName">
            <summary>
            The display name of the item.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.NodeBasedItemCategory.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.NodeBasedItemCategory.IconName">
            <summary>
            Gets an icon name of category.
            </summary>
            <value>The name of the icon.</value>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.NodeBasedItemSelectorCategory.#ctor(Basler.Pylon.Controls.Common.Parameters.ParameterNode,Basler.Pylon.Controls.WPF.IBaseItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.NodeBasedItemSelectorCategory"/> class.
            </summary>
            <param name="node">The node.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.NodeBasedItemSelectorCategory.#ctor(Basler.Pylon.Controls.Common.Parameters.ParameterNode,System.Int32,Basler.Pylon.Controls.WPF.IBaseItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.NodeBasedItemSelectorCategory"/> class.
            </summary>
            <param name="node">The node.</param>
            <param name="nestingLevel">The nesting level.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.NodeBasedItemSelectorCategory.Clone(System.Boolean,System.Boolean,Basler.Pylon.Controls.WPF.IBaseItem)">
            <summary>
            Clones the item.
            </summary>
            <param name="cloneChildItems">
            If set to <see langword="true" /> the child items will be cloned.
            If set to <see langword="false" /> no child items will be added.
            </param>
            <param name="initVisualPath">
            If set to <see langword="true" /> the visual path will be initialized in the cloned item.
            If set to <see langword="false" /> the visual path will not be initialized in the cloned item.
            </param>
            <param name="newParent">
            The new parent to set in the cloned item. 
            If <see langword="null"/>, the original parent will be used.
            </param>
            <returns>IBaseItem.</returns>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.NodeBasedItemSelectorCategory.IconName">
            <summary>
            Gets an icon name for the category.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.NodeBasedItemSelectorCategory.Entries">
            <summary>
            Gets a list of selector entries.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.NodeBasedItemSelectorCategory.SelectedEntry">
            <summary>
            Gets or sets selected selector entry.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.NodeBasedItemSelectorCategory.IsEntriesOpened">
            <summary>
            Gets or sets a flag defined if entries list is opened.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.ILeaf">
            <summary>
            Interface of parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ILeaf.ParameterModel">
            <summary>
            Gets model of parameter item.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.IParameterGroup">
            <summary>
            Interface for parameter group.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IParameterGroup.ExpandFirstLevelCategories">
            <summary>
            Expands all items.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IParameterGroup.ExpandAllCategories">
            <summary>
            Expand all categories include subcategories.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IParameterGroup.CollapseFirstLevelCategories">
            <summary>
            Collapses all items.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IParameterGroup.CollapseAllCategories">
            <summary>
            Collapse all categories include subcategories.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IParameterGroup.MoveParameterSelectionUp">
            <summary>
            Move selection up.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IParameterGroup.MoveParameterSelectionDown">
            <summary>
            Move selection down.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IParameterGroup.MoveParameterSelectionToFirst">
            <summary>
            Move selection to the first parameter.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IParameterGroup.MoveParameterSelectionToLast">
            <summary>
            Move selection to the last parameter.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IParameterGroup.IsMoveParameterSelectionUpPossible">
            <summary>
            Gets value indicating if move selection up is possible.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IParameterGroup.IsMoveParameterSelectionDownPossible">
            <summary>
            Gets value indicating if move selection down is possible.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IParameterGroup.IsMoveParameterSelectionToFirstPossible">
            <summary>
            Gets value indicating if move selection to the first item is possible.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.IParameterGroup.IsMoveParameterSelectionToLastPossible">
            <summary>
            Gets value indicating if move selection to the last item is possible.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IParameterGroup.Name">
            <summary>
            Gets a name of a parameter group.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IParameterGroup.Items">
            <summary>
            Gets a list of parameter categories.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IParameterGroup.IsVisible">
            <summary>
            Gets flag determines visibility of the group.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IParameterGroup.SelectedItem">
            <summary>
            Gets or sets selected item.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IParameterGroup.IsFilled">
            <summary>
            Gets a value indicating whether the Items collection is filled.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IParameterGroup.IsAnySecondLevelCategoriesExpanded">
            <summary>
            Gets flag defined if any second level categories are expanded.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IParameterGroup.IsAnySecondLevelCategoriesCollapsed">
            <summary>
            Gets flag defined if any second level categories are collapsed.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IParameterGroup.IsAnyItemVisible">
            <summary>
            Gets flag indicated if any item is visible.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.IParameterGroup.Filter">
            <summary>
            Filter string.
            </summary>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.IParameterGroup.SelectedItemChanged">
            <summary>
            Occurs when selected item changed.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Leaf">
            <summary>
            Parameter item.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Leaf.#ctor(Basler.Pylon.Controls.Common.Parameters.ParameterNode,Basler.Pylon.Controls.WPF.IBaseItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.Leaf"/> class.
            </summary>
            <param name="node"></param>
            <param name="parent">Parent item of a parameter.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Leaf.Clone(System.Boolean,System.Boolean,Basler.Pylon.Controls.WPF.IBaseItem)">
            <summary>
            Clones the item.
            </summary>
            <param name="cloneChildItems">
            If set to <see langword="true" /> the child items will be cloned.
            If set to <see langword="false" /> no child items will be added.
            </param>
            <param name="initVisualPath">
            If set to <see langword="true" /> the visual path will be initialized in the cloned item.
            If set to <see langword="false" /> the visual path will not be initialized in the cloned item.
            </param>
            <param name="newParent">
            The new parent to set in the cloned item. 
            If <see langword="null"/>, the original parent will be used.
            </param>
            <returns>IBaseItem.</returns>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Leaf.Node">
            <summary>
            Gets <see cref="T:Basler.Pylon.Controls.Common.Parameters.ParameterNode"/> object.
            </summary>
            <value>The node.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Leaf.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Leaf.DisplayName">
            <summary>
            The display name of the item.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Leaf.Description">
            <summary>
            Gets or sets the description.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Leaf.ParameterModel">
            <summary>
            Gets or sets model of parameter item.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Leaf.FloatDisplayPrecision">
            <summary>
            Gets or sets the float display precision.
            </summary>
            <value>The float display precision.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.ParameterGroup">
            <summary>
            Represents a group of parameters.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterGroup.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.ParameterGroup"/> class.
            </summary>
            <param name="name">Name of a group.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterGroup.MarkAsFilled">
            <summary>
            Marks the <see cref="T:Basler.Pylon.Controls.WPF.ParameterGroup"/> as filled.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterGroup.ExpandFirstLevelCategories">
            <summary>
            Expands all items.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterGroup.ExpandAllCategories">
            <summary>
            Expand all categories include subcategories.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterGroup.CollapseFirstLevelCategories">
            <summary>
            Collapses all items.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterGroup.CollapseAllCategories">
            <summary>
            Collapse all categories include subcategories.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterGroup.IsMoveParameterSelectionUpPossible">
            <summary>
            Gets value indicating if move selection up is possible.
            </summary>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterGroup.MoveParameterSelectionUp">
            <summary>
            Move selection up.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterGroup.IsMoveParameterSelectionDownPossible">
            <summary>
            Gets value indicating if move selection down is possible.
            </summary>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterGroup.MoveParameterSelectionDown">
            <summary>
            Move selection down.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterGroup.IsMoveParameterSelectionToFirstPossible">
            <summary>
            Gets value indicating if move selection to the first item is possible.
            </summary>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterGroup.MoveParameterSelectionToFirst">
            <summary>
            Move selection to the first parameter.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterGroup.IsMoveParameterSelectionToLastPossible">
            <summary>
            Gets value indicating if move selection to the last item is possible.
            </summary>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterGroup.MoveParameterSelectionToLast">
            <summary>
            Move selection to the last parameter.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterGroup.OnPropertyChanged(System.String)">
            <summary>
            Called when the property has changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterGroup.Name">
            <summary>
            Gets a name of a parameter group.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterGroup.IsVisible">
            <summary>
            Gets flag determines visibility of the group.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterGroup.Items">
            <summary>
            Gets a list of parameter categories.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterGroup.SelectedItem">
            <summary>
            Gets or sets selected item.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterGroup.IsFilled">
            <summary>
            Gets a value indicating whether the Items collection is filled.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterGroup.IsAnyItemVisible">
            <summary>
            Gets flag indicated if any item is visible.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterGroup.IsAnySecondLevelCategoriesExpanded">
            <summary>
            Gets flag defined if any second level categories are expanded.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterGroup.IsAnySecondLevelCategoriesCollapsed">
            <summary>
            Gets flag defined if any second level categories are collapsed.
            </summary>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.ParameterGroup.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.ParameterGroup.SelectedItemChanged">
            <summary>
            Occurs when [selected item changed].
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.ParameterSelection">
            <summary>
            Class which used for keep or restore user selection of a parameter during parameter tree rebuilding.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterSelection.Keep(Basler.Pylon.Controls.WPF.ParameterTreeModel)">
            <summary>
            Stores selected parameter path.
            </summary>
            <param name="model">Parameter tree model.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterSelection.Set(Basler.Pylon.Controls.WPF.ParameterTreeModel)">
            <summary>
            Restore user selection using stored parameter path.
            </summary>
            <param name="model">Parameter tree model.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.ParametersGroupFactory">
            <summary>
            Class for building logical tree of parameter.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParametersGroupFactory.BuildGrouped(System.String,System.Collections.Generic.IEnumerable{Basler.Pylon.Controls.Common.Parameters.ParameterNode})">
            <summary>
            Builds parameter tree with parameter inside categories.
            Adds parameter which are outside any category to custom category.
            </summary>
            <param name="groupName">Name of the group.</param>
            <param name="rootParameters">The source of parameter.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParametersGroupFactory.BuildFromRoot(System.String,Basler.Pylon.Controls.Common.Parameters.ParameterNode)">
            <summary>
            Builds parameter tree with parameter inside categories.
            Adds parameter which are outside any category to custom category.
            </summary>
            <param name="groupName">Name of the parameter group.</param>
            <param name="rootParameter">The source of parameter.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.ParameterTreeControl">
            <summary>
            Represents a control that allows the user to view and modify the parameters of the camera, such as Exposure Time or Gain.
            <para>
            <img src="../media/ParameterTree.png" />
            </para>
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.RefreshDeviceListCommand">
            <summary>
            The command to refresh the parameter tree.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.ExpandSelectedCategoryCommand">
            <summary>
            The command to expand the selected category.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.ExpandAllSecondLayerCategoriesCommand">
            <summary>
            The command to expand all second layer categories.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.CollapseSelectedCategoryCommand">
            <summary>
            The command to collapse the selected category.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.CollapseAllSecondLayerCategoriesCommand">
            <summary>
            The command to collapse all second layer categories.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.OnFocusCommand">
            <summary>
            The command to set the boolean value to <see langword="false"/>.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.SelectFirstParameterCommand">
            <summary>
            The command to select the first parameter item in the list.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.SelectLastParameterCommand">
            <summary>
            The command to select the last parameter item in the list.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.SelectParameterUpCommand">
            <summary>
            The command to select the previous parameter item.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.SelectParameterDownCommand">
            <summary>
            The command to select the next parameter item.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeControl.#cctor">
            <summary>
            Initializes a static instance of the <see cref="T:Basler.Pylon.Controls.WPF.ParameterTreeControl"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.ParameterTreeControl"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeControl.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Basler.Pylon.Controls.WPF.ParameterTreeControl"/> class.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.ModelProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.Model"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.CameraProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.Camera"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsParameterNameVisibleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsParameterNameVisible"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsParameterValueVisibleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsParameterValueVisible"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsRefreshButtonVisibleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsRefreshButtonVisible"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsUserLevelSelectorVisibleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsUserLevelSelectorVisible"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsAutoRefreshVisibleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsAutoRefreshVisible"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.AutoRefreshPeriodProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.AutoRefreshPeriod"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsShowDescriptionControlVisibleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsShowDescriptionControlVisible"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsShowDescriptionEnabledProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsShowDescriptionEnabled"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.ParametersAutoPollingPeriodProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.ParametersAutoPollingPeriod"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsParametersAutoPollingEnabledProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsParametersAutoPollingEnabled"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.FloatDisplayPrecisionProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.FloatDisplayPrecision"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsSearchPanelVisibleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsSearchPanelVisible"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsTitleVisibleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsTitleVisible"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.MinimumSearchPrefixLengthProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.MinimumSearchPrefixLength"/> dependency property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeControl.OnParametersLoaded(System.EventArgs)">
            <summary>
            Handles the <see cref="E:ParametersLoaded"/> event.
            </summary>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.UserLevelProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.UserLevel"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.ParameterPropertyKey">
            <summary>
            The parameter key dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.ParameterProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.Parameter"/> dependency property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeControl.GetParameter(System.Windows.DependencyObject)">
            <summary>
            Gets the parameter.
            </summary>
            <param name="element">The element.</param>
            <returns>IParameter.</returns>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.MaximalNumberOfSearchRecommendationLinesProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.MaximalNumberOfSearchRecommendationLines"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.TitleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.Title"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.AllowDragProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.AllowDrag"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsHiddenPanelPinnedProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsHiddenPanelPinned"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.SliderPopupHeightModeProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.SliderPopupHeightMode"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeControl.SliderTickNumberProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.SliderTickNumber"/> dependency property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeControl.ExpandAllSecondLayerCategories">
            <summary>
            Expands all second layer categories.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeControl.CollapseAllSecondLayerCategories">
            <summary>
            Collapses all second layer categories.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeControl.Refresh">
            <summary>
            Refreshes the parameter tree.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsMoveSelectionDownPossible">
            <summary>
            Indicates if the next parameter can be selected.
            </summary>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeControl.MoveSelectionDown">
            <summary>
            Selects the next parameter.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsMoveSelectionUpPossible">
            <summary>
            Indicates if the previous parameter can be selected.
            </summary>
            <returns><see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeControl.MoveSelectionUp">
            <summary>
            Selects the previous parameter.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeControl.MoveSelectionToFirst">
            <summary>
            Selects the first parameter.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeControl.MoveSelectionToLast">
            <summary>
            Selects the last parameter.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeControl.Dispose">
            <summary>
            Performs application-specific tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeControl.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources. Also releases managed resources, if desired.
            </summary>
            <param name="disposing"><c>True</c> to release both managed and unmanaged resources. <c>False</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.Model">
            <summary>
            Gets and sets the model.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.Camera">
            <summary>
            Gets and sets the binding path to device.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsParameterNameVisible">
            <summary>
            Gets and sets the visibility of a parameter name.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsParameterValueVisible">
            <summary>
            Gets and sets the visibility of a parameter value.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsRefreshButtonVisible">
            <summary>
            Gets and sets the visibility of the refresh button.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsUserLevelSelectorVisible">
            <summary>
            Gets and sets the visibility of the user level selector.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsAutoRefreshVisible">
            <summary>
            Gets and sets the visibility of the auto refresh button.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.AutoRefreshPeriod">
            <summary>
            Gets and sets the auto refresh period.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsShowDescriptionControlVisible">
            <summary>
            Gets and sets the visibility of the description control.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsShowDescriptionEnabled">
            <summary>
            Gets and sets the visibility of the description.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.ParametersAutoPollingPeriod">
            <summary>
            Gets and sets the period of the auto polling of parameters.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsParametersAutoPollingEnabled">
            <summary>
            Gets and sets the auto polling status.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.FloatDisplayPrecision">
            <summary>
            Gets or sets the number of decimal places to be displayed for float parameters.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsSearchPanelVisible">
            <summary>
            Gets or sets the visibility of the search panel.
            </summary>
            <value><see langword="True" /> if the search panel is visible. Otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsTitleVisible">
            <summary>
            Gets or sets the visibility of the title of the control.
            </summary>
            <value><see langword="True" /> if the title is visible. Otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.MinimumSearchPrefixLength">
            <summary>
            Gets or sets the minimum length of the search prefix.
            </summary>
            <value>The minimum length of the search prefix.</value>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.ParameterTreeControl.ParametersLoaded">
            <summary>
            Occurs when the parameters are loaded.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.UserLevel">
            <summary>
            Gets or sets the user level.
            </summary>
            <value>The user level.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.Parameter">
            <summary>
            Gets and sets the parameter.
            </summary>
            <value>The parameter.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.MaximalNumberOfSearchRecommendationLines">
            <summary>
            Gets or sets the maximum number of search suggestion lines in the suggestion dropdown window.
            </summary>
            <value>The maximum number of search suggestion lines.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.Title">
            <summary>
            Gets or sets the title text.
            </summary>
            <value>The title text.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.AllowDrag">
            <summary>
            Indicates if dragging is allowed.
            </summary>
            <value><see langword="True" /> if dragging is allowed. Otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.IsHiddenPanelPinned">
            <summary>
            Gets and sets the state of the hideable panel (pinned or not pinned).
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.SliderPopupHeightMode">
            <summary>
            Gets or sets the slider popup height mode.
            </summary>
            <value>The slider popup height mode.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeControl.SliderTickNumber">
            <summary>
            Gets or sets the slider tick number.
            </summary>
            <value>The slider tick number.</value>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.ParameterTreeControl.ParameterChanged">
            <summary>
            Occurs when the selected parameter changes.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.ParameterTreeModel">
            <summary>
            Parameter tree control model.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.ParameterTreeModel"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeModel.OnPropertyChanged(System.String)">
            <summary>
            Called when the property has changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeModel.Reset">
            <summary>
            Reset parameter tree.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeModel.Reinitialize(System.Boolean)">
            <summary>
            Reinitialize parameter tree.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeModel.UserLevels">
            <summary>
            Defines possible user levels.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeModel.Camera">
            <summary>
            Gets or sets selected <see cref="T:Basler.Pylon.ICamera"></see>/&gt;
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeModel.SelectedUserLevel">
            <summary>
            Gets or sets selected user level.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeModel.ParameterGroups">
            <summary>
            Get or sets groups of parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeModel.SelectedParameterGroup">
            <summary>
            Get or sets selected group of parameter.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeModel.FloatDisplayPrecision">
            <summary>
            Gets or sets the number of decimal places to be displayed for float parameters.
            </summary>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.ParameterTreeModel.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel">
            <summary>
            Search panel for <see cref="T:Basler.Pylon.Controls.WPF.ParameterTreeControl"/>.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.TitleProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.Title"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.IsTitleVisibleProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.IsTitleVisible"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.IsSearchingProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.IsSearching"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.ParameterGroupProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.ParameterGroup"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.MinimumPrefixLengthProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.MinimumPrefixLength"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.MaximalNumberOfSearchRecommendationLinesProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.MaximalNumberOfSearchRecommendationLines"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.ResetSearchCommand">
            <summary>
            Resets search.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.#cctor">
            <summary>
            Initializes a static instance of the <see cref="T:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call
            <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.Title">
            <summary>
            Gets or sets the Title text.
            </summary>
            <value>The Title text.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.IsTitleVisible">
            <summary>
            Gets and sets flag which defined visibility of the control header.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.IsSearching">
            <summary>
            Gets or sets a value indicating whether search is in progress.
            </summary>
            <value><see langword="true" /> if search is in progress; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.ParameterGroup">
            <summary>
            Gets or sets the parameter group.
            </summary>
            <value>The parameter group.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.SearchResult">
            <summary>
            Gets the search result.
            </summary>
            <value>The search result.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.MinimumPrefixLength">
            <summary>
            Gets or sets the minimum length of the prefix.
            </summary>
            <value>The minimum length of the prefix.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.ParameterTreeSearchPanel.MaximalNumberOfSearchRecommendationLines">
            <summary>
            Gets or sets the maximal number of search recommendation lines in the recommendation dropdown window.
            </summary>
            <value>The maximal number of search recommendation lines.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Primitives.AdornerTickBar">
            <summary>
            This class renders textual labels next to a slider track's tickmarks using the given string format.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.AdornerTickBar.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Draws the tick marks for a <see cref="T:System.Windows.Controls.Slider" /> control.
            </summary>
            <param name="dc">The <see cref="T:System.Windows.Media.DrawingContext" /> that is used to draw the ticks.</param>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.AdornerTickBar.StringFormatProperty">
            <summary>
            The string format property
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.AdornerTickBar.StringFormat">
            <summary>
            Gets or sets the string format.
            </summary>
            <value>The string format.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Primitives.AvoidToGrowDecorator">
            <summary>
            This decorator prevents content from increasing its width.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.AvoidToGrowDecorator.VerticalContentAlignmentProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Primitives.AvoidToGrowDecorator.VerticalContentAlignment"/> dependency property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.AvoidToGrowDecorator.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of a <see cref="T:System.Windows.Controls.Decorator" /> element.
            </summary>
            <param name="arrangeSize">The <see cref="T:System.Windows.Size" /> this element uses to arrange its child content.</param>
            <returns>The <see cref="T:System.Windows.Size" /> that represents the arranged size of this <see cref="T:System.Windows.Controls.Decorator" /> element and its child.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.AvoidToGrowDecorator.MeasureOverride(System.Windows.Size)">
            <summary>
            When overridden in a derived class, measures the size in layout required for child elements and determines a size for the <see cref="T:System.Windows.FrameworkElement" />-derived class.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available.</param>
            <returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.AvoidToGrowDecorator.VerticalContentAlignment">
            <summary>
            Gets or sets the vertical content alignment.
            </summary>
            <value>The vertical content alignment.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider">
            <summary>
            This custom control allows to continuously input values in a slider like fashion.
            The key differences in contrast to a standard slider are as follows:
            <list type="bullet">
                <item>
                The slider resides in a popup up and is opened via a toggle button,
                so that no screen estate is consumed when the slider is not needed.
                </item>
                <item>
                The slider thumb is moved without the need of holding down the left
                mouse button, which allows user for better input accuracy.
                </item>
                <item>
                The slider scale can be zoomed in and out to increase or decrease the
                resolution of the values being controlled.
                </item>
            </list>
            There are a couple of interaction shortcuts that make using the slider more
            convenient. These are as follows:
            <list type="bullet">
                <item>
                Mousewheel: increases or decreases the slider's resolution/scale.
                </item>
                <item>
                Right click: reset slider scale
                </item>
                <item>
                Left click: select current value and close popup.
                </item>
            </list>
            </summary>
            <remarks>
            Note that this is a prototypical implementation that contains loads of bugs
            and insufficiencies.
            Among others these are:
            <list type="bullet">
                <item>
                The popup position does not work properly. It should open up so that the mouse cursor
                is directly on top of the slider thumb, however, currently only opens up in position centered
                along the toggle button that opens the popup.
                </item>
                <item>
                The tickmark labels should reside in the adorner layer (or similar), so that they are always rendered on top.
                Also not all tickmarks are rendered properly.
                </item>
                <item>
                The scroll viewer of the zoomed scale does not center the viewport properly when the user changes the value
                in between zooming in or out activities.
                </item>
                <item>
                    <![CDATA[Zooming out (scale factor values < 1.0) are not supported.]]>
                </item>
                <item>
                The slider popup currently cannot be closed/aborted by clicking outside its borders.
                </item>
            </list>
            </remarks>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.IsAnimatedProperty">
            <summary>
            The is animated property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.SliderTypeProperty">
            <summary>
            The slider type property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.IsPopupOpenProperty">
            <summary>
            The is popup open property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.ScaleFactorProperty">
            <summary>
            The scale factor that modifies the slider's resolution.
            A scale factor of 1.0 means, no scale modifications at all.
            Values > 1.0 correspond to 'zooming in' to the scale (higher resolution)
            Values less then 1.0 correspond to 'zooming out' of the scale (lower resolution)
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.ScaleClickModeProperty">
            <summary>
            Click mode for the repeat buttons that control the scale factor.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.NormalizedSliderPositionProperty">
            <summary>
            The slider thumb position normalized to a range between 0.0 and 1.0.
            If the slider thumb is in the center of its track, the normalized slider position is 0.5.
            If the slider thumb is at the top of the track, the normalized slider position is 0.0.
            If the slider thumb is at the bottom of the track, the normalized slider position is 1.0.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.NormalizedOpticalSliderPositionProperty">
            <summary>
            Currently not in use.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.PopupWidthProperty">
            <summary>
            The popup width property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.PopupHeightProperty">
            <summary>
            The popup height property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.ScaleColumnWidthProperty">
            <summary>
            The width as a grid length value that the scale buttons (left and right to the slider track) should consume.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.DisplayPrecisionProperty">
            <summary>
            The display precision property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.TickNumberProperty">
            <summary>
            The tick number property. In the range from 3 to 9.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.SliderPopupHeightModeProperty">
            <summary>
            The slider popup height mode property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.ChangeSliderPopupStateCommand">
            <summary>
            Command for changing state of the slider popup.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.ResetScaleCommandProperty">
            <summary>
            The property that holds the command that resets the scale factor to 1.0.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:System.Windows.Controls.Slider" /> control.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.GetPopupPosition(System.Windows.Size,System.Windows.Size,System.Windows.Point)">
            <summary>
            Gets the popup position.
            </summary>
            <param name="popupSize">Size of the popup.</param>
            <param name="targetSize">Size of the target.</param>
            <param name="offset">The offset.</param>
            <returns>CustomPopupPlacement[][].</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.OnMaximumChanged(System.Double,System.Double)">
            <summary>
            Responds to a change in the value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" />
            property.
            </summary>
            <param name="oldMaximum">
            The old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" />
            property.
            </param>
            <param name="newMaximum">
            The new value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" />
            property.
            </param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.OnMinimumChanged(System.Double,System.Double)">
            <summary>
            Responds to a change in the value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" />
            property.
            </summary>
            <param name="oldMinimum">
            The old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" />
            property.
            </param>
            <param name="newMinimum">
            The new value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" />
            property.
            </param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.ScaleFactorChanged(System.Double,System.Double,System.Double)">
            <summary>
            Changing the scale factor actually means: increasing or decreasing the
            height of the slider track.
            </summary>
            <param name="oldValue"></param>
            <param name="scaleFactor"></param>
            <param name="value"></param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.SliderValueChanged(System.Double,System.Double)">
            <summary>
            Whenever the slider value changes, respective normalized slider position is calculated
            (that can in turn be used e.g. for centering the viewport around the slider value)
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.IsAnimated">
            <summary>
            Gets or sets a value indicating whether this instance is animated.
            </summary>
            <value><c>true</c> if this instance is animated; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.SliderType">
            <summary>
            Gets or sets the type of the slider.
            </summary>
            <value>The type of the slider.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.DisplayPrecision">
            <summary>
            Gets or sets the display precision.
            </summary>
            <value>The display precision.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.IsPopupOpen">
            <summary>
            Gets or sets a value indicating whether this instance is popup open.
            </summary>
            <value><c>true</c> if this instance is popup open; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.ScaleFactor">
            <summary>
            Gets or sets the scale factor.
            </summary>
            <value>The scale factor.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.ScaleClickMode">
            <summary>
            Gets or sets the scale click mode.
            </summary>
            <value>The scale click mode.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.NormalizedSliderPosition">
            <summary>
            Gets or sets the normalized slider position.
            </summary>
            <value>The normalized slider position.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.Pivot">
            <summary>
            Gets or sets the pivot.
            </summary>
            <value>The pivot.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.NormalizedOpticalSliderPosition">
            <summary>
            Gets or sets the normalized optical slider position.
            </summary>
            <value>The normalized optical slider position.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.PopupWidth">
            <summary>
            Gets or sets the width of the popup.
            </summary>
            <value>The width of the popup.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.PopupHeight">
            <summary>
            Gets or sets the height of the popup.
            </summary>
            <value>The height of the popup.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.ScaleColumnWidth">
            <summary>
            Gets or sets the width of the scale column.
            </summary>
            <value>The width of the scale column.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.ResetScaleCommand">
            <summary>
            Gets or sets the reset scale command.
            </summary>
            <value>The reset scale command.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.TickNumber">
            <summary>
            Gets or sets the tick number.
            </summary>
            <value>The tick number.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.SliderPopupHeightMode">
            <summary>
            Gets or sets the slider popup height mode.
            </summary>
            <value>The slider popup height mode.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.ResetScaleInternalCommand">
            <summary>
            The command that resets the scale factor to 1.0.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.ResetScaleInternalCommand.SetOwner(Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider)">
            <summary>
            Sets the owner.
            </summary>
            <param name="slider">The slider.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.ResetScaleInternalCommand.Execute(System.Object)">
            <summary>
            Defines the method to be called when the command is invoked.
            </summary>
            <param name="parameter">
            Data used by the command.  If the command does not require data to be passed, this object can
            be set to null.
            </param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.ResetScaleInternalCommand.CanExecute(System.Object)">
            <summary>
            Defines the method that determines whether the command can execute in its current state.
            </summary>
            <param name="parameter">
            Data used by the command.  If the command does not require data to be passed, this object can
            be set to null.
            </param>
            <returns>true if this command can be executed; otherwise, false.</returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.ResetScaleInternalCommand.RaiseCanExecuteChanged">
            <summary>
            Raises the can execute changed.
            </summary>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.Primitives.BaslerDynamicScaleSlider.ResetScaleInternalCommand.CanExecuteChanged">
            <summary>
            Occurs when changes occur that affect whether or not the command should execute.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Primitives.DynamicPanel">
            <summary>
            Class DynamicPanel. Stretch children elements proportionally child's width.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.DynamicPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            When overridden in a derived class, positions child elements and determines a size for a <see cref="T:System.Windows.FrameworkElement"/> derived class. 
            </summary>
            <returns>
            The actual size used.
            </returns>
            <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.DynamicPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            When overridden in a derived class, measures the size in layout required for child elements and determines a size for the <see cref="T:System.Windows.FrameworkElement"/>-derived class. 
            </summary>
            <returns>
            The size that this element determines it needs during layout, based on its calculations of child element sizes.
            </returns>
            <param name="availableSize">The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider">
            <summary>
            Slider with dynamic value range.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.PartTrack">
            <summary>
            The track control template part.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.PartStepperIncrementButton">
            <summary>
            The stepper increment button control template part.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.PartStepperDecrementButton">
            <summary>
            The stepper decrement button control template part.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.CurrentThumbPositionProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.CurrentThumbPosition"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.CurrentValueProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.CurrentValue"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.NegativeTickProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.NegativeTick"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.ZeroTickProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.ZeroTick"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.PositiveTickProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.PositiveTick"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.ButtonsVisibleProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.ButtonsVisible"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.ValueRoundingProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.ValueRounding"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.ThumbNumberStringFormatProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.ThumbNumberStringFormat"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.NumberStringFormatProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.NumberStringFormat"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.DelayProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.Delay"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.IntervalProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.Interval"/> dependency property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call
            <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.OnValueChanged(System.Double,System.Double)">
            <summary>
            Raises the <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged" /> routed event.
            </summary>
            <param name="oldValue">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property</param>
            <param name="newValue">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.GetKeyboardSpeed">
            <summary>
            Retrieves the keyboard repeat-speed setting, which is a value in the range from 0
            (approximately 2.5 repetitions per second) through 31 (approximately 30 repetitions per second).
            The actual repeat rates are hardware-dependent and may vary from a linear scale by as much as 20%
            </summary>
            <returns></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.GetKeyboardDelay">
            <summary>
            Retrieves the keyboard repeat-delay setting, which is a value in the range from 0
            (approximately 250 ms delay) through 3 (approximately 1 second delay).
            The actual delay associated with each value may vary depending on the hardware.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.OnMaximumChanged(System.Double,System.Double)">
            <summary>
            Called when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> property changes. 
            </summary>
            <param name="oldMaximum">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> property.</param><param name="newMaximum">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/> property.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.OnMinimumChanged(System.Double,System.Double)">
            <summary>
            Called when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> property changes. 
            </summary>
            <param name="oldMinimum">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> property.</param><param name="newMinimum">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/> property.</param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.DecreaseSmall">
            <summary>
            Gets the command decreasing the value by <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange"/>.
            </summary>
            <value>The command decreasing the value by <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange"/>.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.IncreaseSmall">
            <summary>
            Gets the command increasing the value by <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange"/>.
            </summary>
            <value>The command increasing the value by <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange"/>.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.DecreaseLarge">
            <summary>
            Gets the command decreasing the value by <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange"/>.
            </summary>
            <value>The command decreasing the value by <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange"/>.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.IncreaseLarge">
            <summary>
            Gets the command increasing the value by <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange"/>.
            </summary>
            <value>The command increasing the value by <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange"/>.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.MinimizeValue">
            <summary>
            Gets the command setting the value to <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/>.
            </summary>
            <value>The command setting the value to <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"/>.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.MaximizeValue">
            <summary>
            Gets the command setting the value to <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/>.
            </summary>
            <value>The command setting the value to <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"/>.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.ThumbNumberStringFormat">
            <summary>
            Gets or sets the thumb number string format.
            </summary>
            <value>The thumb number string format.</value>
            <seealso cref="M:System.Double.ToString(System.String)"/>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.NumberStringFormat">
            <summary>
            Gets or sets the number string format.
            </summary>
            <value>The number string format.</value>
            <seealso cref="M:System.Double.ToString(System.String)"/>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.ValueRounding">
            <summary>
            Gets or sets the value rounding.
            </summary>
            <value>
            The number of fractional digits in the displayed numbers or <see langword="null" /> to use no rounding.
            </value>
            <remarks>The value must be not less than 0 and not more than 15.</remarks>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.ButtonsVisible">
            <summary>
            Gets or sets a value indicating whether increment and decrement buttons are visible.
            </summary>
            <value>A value indicating whether increment and decrement buttons are visible.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.Delay">
            <summary>
            Gets or sets the amount of time in milliseconds that a <see cref="T:System.Windows.Controls.Primitives.RepeatButton"/>  waits,
            while it is pressed, before a command to move the Thumb executes.
            </summary>
            <value>
            A time delay in milliseconds. The default is the system key press delay.
            For more information, see <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Delay"/>.
            </value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.Interval">
            <summary>
            Gets or sets the amount of time in milliseconds between increase or decrease commands when a user clicks
            the <see cref="T:System.Windows.Controls.Primitives.RepeatButton"/> of a Slider.
            </summary>
            <value>
            A time in milliseconds between commands that change the Value of a Slider. The default is the system key repeat rate.
            For more information, see <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Interval"/>.
            </value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.CurrentThumbPosition">
            <summary>
            Gets the current thumb position.
            </summary>
            <value>The current thumb position.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.CurrentValue">
            <summary>
            Gets the current value.
            </summary>
            <value>The current value.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.NegativeTick">
            <summary>
            Gets the negative tick value.
            </summary>
            <value>The negative tick value.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.ZeroTick">
            <summary>
            Gets the zero tick value.
            </summary>
            <value>The zero tick value.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicScaleSlider.PositiveTick">
            <summary>
            Gets the positive tick value.
            </summary>
            <value>The positive tick value.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Primitives.DynamicTick">
            <summary>
            Class DynamicTick.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTick.TickTextProperty">
            <summary>
            The tick text property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTick.DashLengthProperty">
            <summary>
            The dash length property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTick.DashBrushProperty">
            <summary>
            The dash brush property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTick.TickBrushProperty">
            <summary>
            The tick brush property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTick.RightOffsetProperty">
            <summary>
            The right offset property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTick.TickTextForegroundProperty">
            <summary>
            The tick text foreground property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTick.TickValueProperty">
            <summary>
            The tick value property
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTick.TickText">
            <summary>
            Gets or sets the tick text.
            </summary>
            <value>The tick text.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTick.DashLength">
            <summary>
            Gets or sets the length of the dash.
            </summary>
            <value>The length of the dash.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTick.DashBrush">
            <summary>
            Gets or sets the dash brush.
            </summary>
            <value>The dash brush.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTick.TickBrush">
            <summary>
            Gets or sets the tick brush.
            </summary>
            <value>The tick brush.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTick.RightOffset">
            <summary>
            Gets or sets the right offset.
            </summary>
            <value>The right offset.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTick.TickTextForeground">
            <summary>
            Gets or sets the tick text foreground.
            </summary>
            <value>The tick text foreground.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTick.TickValue">
            <summary>
            Gets or sets the tick value.
            </summary>
            <value>The tick value.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar">
            <summary>
            Class DynamicTickBar.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.DisplayPrecisionProperty">
            <summary>
            The display precision property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.RightOffsetProperty">
            <summary>
            The right offset property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.DashLengthProperty">
            <summary>
            The dash length property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.ValueTickDashLengthProperty">
            <summary>
            The value tick dash length property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.DashBrushProperty">
            <summary>
            The dash brush property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.ValueTickDashBrushProperty">
            <summary>
            The value tick dash brush property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.TickBrushProperty">
            <summary>
            The tick brush property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.ValueTickBrushProperty">
            <summary>
            The value tick brush property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.MaximumProperty">
            <summary>
            The maximum property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.MinimumProperty">
            <summary>
            The minimum property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.CurrentValueProperty">
            <summary>
            The current value property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.TickFrequencyProperty">
            <summary>
            The tick frequency property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.VerticalOffsetProperty">
            <summary>
            The vertical offset property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.SliderHeightProperty">
            <summary>
            The slider height property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.ValueProperty">
            <summary>
            The value property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.TickTextForegroundProperty">
            <summary>
            The tick text foreground property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.ValueTickTextForegroundProperty">
            <summary>
            The value tick text foreground property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.SliderTypeProperty">
            <summary>
            The slider type property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.TickNumberProperty">
            <summary>
            The tick number property
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call
            <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event. This method is invoked whenever
            <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.OnTickFrequencyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="E:TickFrequencyChanged"/> event.
            </summary>
            <param name="d">The d.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.UpdateTicks(System.Windows.DependencyObject)">
            <summary>
            Updates the ticks.
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.OnVerticalOffsetChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="E:VerticalOffsetChanged"/> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.OnSliderHeightChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="E:SliderHeightChanged"/> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.OnValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="E:ValueChanged"/> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.OnTickNumberChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the <see cref="E:TickNumberChanged"/> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.UpdateTicks(Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar)">
            <summary>
            Updates the ticks.
            </summary>
            <param name="tickBar">The tick bar.</param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.TickNumber">
            <summary>
            Gets or sets the tick number.
            </summary>
            <value>The tick number.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.DisplayPrecision">
            <summary>
            Gets or sets the display precision.
            </summary>
            <value>The display precision.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.SliderType">
            <summary>
            Gets or sets the type of the slider.
            </summary>
            <value>The type of the slider.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.RightOffset">
            <summary>
            Gets or sets the right offset.
            </summary>
            <value>The right offset.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.DashLength">
            <summary>
            Gets or sets the length of the dash.
            </summary>
            <value>The length of the dash.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.ValueTickDashLength">
            <summary>
            Gets or sets the length of the value tick dash.
            </summary>
            <value>The length of the value tick dash.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.DashBrush">
            <summary>
            Gets or sets the dash brush.
            </summary>
            <value>The dash brush.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.ValueTickDashBrush">
            <summary>
            Gets or sets the value tick dash brush.
            </summary>
            <value>The value tick dash brush.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.TickBrush">
            <summary>
            Gets or sets the tick brush.
            </summary>
            <value>The tick brush.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.ValueTickBrush">
            <summary>
            Gets or sets the value tick brush.
            </summary>
            <value>The value tick brush.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.Maximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.Minimum">
            <summary>
            Gets or sets the minimum.
            </summary>
            <value>The minimum.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.CurrentValue">
            <summary>
            Gets or sets the current value.
            </summary>
            <value>The current value.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.TickFrequency">
            <summary>
            Gets or sets the tick frequency.
            </summary>
            <value>The tick frequency.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.TickContainer">
            <summary>
            Gets the tick container.
            </summary>
            <value>The tick container.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.VerticalOffset">
            <summary>
            Gets or sets the vertical offset.
            </summary>
            <value>The vertical offset.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.SliderHeight">
            <summary>
            Gets or sets the height of the slider.
            </summary>
            <value>The height of the slider.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.TickTextForeground">
            <summary>
            Gets or sets the tick text foreground.
            </summary>
            <value>The tick text foreground.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.DynamicTickBar.ValueTickTextForeground">
            <summary>
            Gets or sets the value tick text foreground.
            </summary>
            <value>The value tick text foreground.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Primitives.EnhancedScrollViewer">
            <summary>
            ScrollViewer with horizontal scrolling and optional zooming.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.EnhancedScrollViewer.ZoomInCommandProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Primitives.EnhancedScrollViewer.ZoomInCommand"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.EnhancedScrollViewer.ZoomOutCommandProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Primitives.EnhancedScrollViewer.ZoomOutCommand"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.EnhancedScrollViewer.ZoomCommandsTargetProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Primitives.EnhancedScrollViewer.ZoomCommandsTarget"/> dependency property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.EnhancedScrollViewer.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Responds to a click of the mouse wheel.
            </summary>
            <param name="e">Required arguments that describe this event.</param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.EnhancedScrollViewer.ZoomInCommand">
            <summary>
            Gets or sets the zoom in command.
            </summary>
            <value>The zoom in command.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.EnhancedScrollViewer.ZoomOutCommand">
            <summary>
            Gets or sets the zoom out command.
            </summary>
            <value>The zoom out command.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.EnhancedScrollViewer.ZoomCommandsTarget">
            <summary>
            Gets or sets the target for <see cref="P:Basler.Pylon.Controls.WPF.Primitives.EnhancedScrollViewer.ZoomInCommand"/> and <see cref="P:Basler.Pylon.Controls.WPF.Primitives.EnhancedScrollViewer.ZoomOutCommand"/>.
            </summary>
            <value>The zoom commands target.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Primitives.EnhancedTreeView">
            <summary>
            This <see cref="T:System.Windows.Controls.TreeView"/> descendant allows data binding of the <see cref="P:Basler.Pylon.Controls.WPF.Primitives.EnhancedTreeView.SelectedObject"/> property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.EnhancedTreeView.SelectedObjectProperty">
            <summary>
            The dependency property that allows use to bind the
            "SelectedObject" property
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.EnhancedTreeView.OnSelectedItemChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
            <summary>
            When the selected item is updated from inside the tree,
            this method will update the "SelectedObject" property.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.EnhancedTreeView.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether the specified item is its own container or can be its own container.
            </summary>
            <returns>
            true if <paramref name="item" /> is a <see cref="T:System.Windows.Controls.TreeViewItem" />; otherwise, false.
            </returns>
            <param name="item">The object to evaluate.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.EnhancedTreeView.GetContainerForItemOverride">
            <summary>
            Creates a <see cref="T:System.Windows.Controls.TreeViewItem" /> to use to display content.
            </summary>
            <returns>
            A new <see cref="T:System.Windows.Controls.TreeViewItem" /> to use as a container for content.
            </returns>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.EnhancedTreeView.SelectedObjectChangedCallback(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            This method is called whenever ever the selected
            object is changed, and if it was changed from the
            outside, this method will set the selected item.
            </summary>
            <param name="obj"></param>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.EnhancedTreeView.SelectItem(System.Windows.Controls.ItemsControl,System.Object,Basler.Pylon.Controls.WPF.Primitives.EnhancedTreeView.Ref{System.Boolean})">
            <summary>
            Searches the given item in the parent (recursively)
            and selects it, returns true if the item was found
            and selected, false otherwise.
            </summary>
            <param name="parent">The parent.</param>
            <param name="itemToSelect">The item to select.</param>
            <param name="found">The wrapper holding a value indicating whether the item is found.</param>
            <returns><see langword="true" /> if the item is selected, <see langword="false" /> otherwise.</returns>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.EnhancedTreeView.SelectedObject">
            <summary>
            Gets or sets the select object (a writable version of
            the "SelectedItem" property)
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Primitives.EnhancedTreeViewItem">
            <summary>
            TreeViewItem with suppressed 'Add' and 'Subtract' key handlers.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.EnhancedTreeViewItem.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:Basler.Pylon.Controls.WPF.Primitives.EnhancedTreeViewItem"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.EnhancedTreeViewItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when a keyboard key is pressed down. 
            </summary> 
            <param name="e">Event Arguments</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.EnhancedTreeViewItem.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines whether the specified item is its own container or can be its own container.
            </summary>
            <returns>
            true if <paramref name="item"/> is a <see cref="T:System.Windows.Controls.TreeViewItem"/>; otherwise, false.
            </returns>
            <param name="item">The object to evaluate.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.EnhancedTreeViewItem.GetContainerForItemOverride">
            <summary>
            Creates a <see cref="T:System.Windows.Controls.TreeViewItem"/> to use to display content.
            </summary>
            <returns>
            A new <see cref="T:System.Windows.Controls.TreeViewItem"/> to use as a container for content.
            </returns>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Primitives.GroupBoxControl">
            <summary>
            Custom Groupbox control wich have the Title, and the properties to hide/show Title
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.GroupBoxControl.TitleProperty">
            <summary>
            Group box Title dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.GroupBoxControl.IsTitleVisibleProperty">
            <summary>
            Is Title visible dependency property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.GroupBoxControl.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Basler.Pylon.Controls.WPF.Primitives.GroupBoxControl"/> class.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.GroupBoxControl.Title">
            <summary>
            Title property.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.GroupBoxControl.IsTitleVisible">
            <summary>
            Is Title visible property.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Primitives.HiddenPanelControl">
            <summary>
            Hidden Panel control.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.HiddenPanelControl.PinPositionProperty">
            <summary>
            Pin position dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.HiddenPanelControl.IsPinButtonCheckedProperty">
            <summary>
            Is pin button checked dependency property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.HiddenPanelControl.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Basler.Pylon.Controls.WPF.Primitives.HiddenPanelControl"/> class.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.HiddenPanelControl.PinPosition">
            <summary>
            Pin position property.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.HiddenPanelControl.IsPinButtonChecked">
            <summary>
            Is pin button checked property.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Primitives.PositionPinButton">
            <summary>
            Available pin button positions in Hidden Panel.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.PositionPinButton.Bottom">
            <summary>
            Set Pin on top side
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.PositionPinButton.Right">
            <summary>
            Set Pin on right side
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Primitives.LinearScaleSlider">
            <summary>
            The descendant of <see cref="T:System.Windows.Controls.Slider"/> that applies the value only after the user has released the thumb.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.LinearScaleSlider.PartTrack">
            <summary>
            The track control template part.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.LinearScaleSlider.PartStepperIncrementButton">
            <summary>
            The stepper increment button control template part.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.LinearScaleSlider.PartStepperDecrementButton">
            <summary>
            The stepper decrement button control template part.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.LinearScaleSlider.CurrentValueProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Primitives.LinearScaleSlider.CurrentValue"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.LinearScaleSlider.ValueRoundingProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Primitives.LinearScaleSlider.ValueRounding"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.LinearScaleSlider.NumberStringFormatProperty">
            <summary>
            Identifies <see cref="P:Basler.Pylon.Controls.WPF.Primitives.LinearScaleSlider.NumberStringFormat"/> dependency property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.LinearScaleSlider.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call
            <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.LinearScaleSlider.OnValueChanged(System.Double,System.Double)">
            <summary>
            Raises the <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged" /> routed event.
            </summary>
            <param name="oldValue">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property</param>
            <param name="newValue">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> property</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.LinearScaleSlider.OnDecreaseLarge">
            <summary>
            Responds to the <see cref="P:System.Windows.Controls.Slider.DecreaseLarge"/> command.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.LinearScaleSlider.OnIncreaseLarge">
            <summary>
            Responds to an <see cref="P:System.Windows.Controls.Slider.IncreaseLarge"/> command.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.LinearScaleSlider.OnDecreaseSmall">
            <summary>
            Responds to an <see cref="P:System.Windows.Controls.Slider.IncreaseSmall"/> command.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.LinearScaleSlider.OnIncreaseSmall">
            <summary>
            Responds to a <see cref="P:System.Windows.Controls.Slider.DecreaseSmall"/> command.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.LinearScaleSlider.OnThumbDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Provides class handling for the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta"/> event that occurs when the user drags the <see cref="T:System.Windows.Controls.Primitives.Thumb"/> of the <see cref="T:System.Windows.Controls.Slider"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.LinearScaleSlider.OnThumbDragCompleted(System.Windows.Controls.Primitives.DragCompletedEventArgs)">
            <summary>
            Provides class handling for the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted"/> event that occurs when the user stops dragging the <see cref="T:System.Windows.Controls.Primitives.Thumb"/> of the <see cref="T:System.Windows.Controls.Slider"/>.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.LinearScaleSlider.CurrentValue">
            <summary>
            Gets or sets the current value.
            </summary>
            <value>The current value.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.LinearScaleSlider.ValueRounding">
            <summary>
            Gets or sets the value rounding.
            </summary>
            <value>
            The number of fractional digits in the displayed numbers or <see langword="null" /> to use no rounding.
            </value>
            <remarks>The value must be not less than 0 and not more than 15.</remarks>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.LinearScaleSlider.NumberStringFormat">
            <summary>
            Gets or sets the number string format.
            </summary>
            <value>The number string format.</value>
            <seealso cref="M:System.Double.ToString(System.String)"/>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Primitives.MinMaxLabeledTickBar">
            <summary>
            Tick bar with min and max labels on the linear scale slider.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.MinMaxLabeledTickBar.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Draws the tick marks for a <see cref="T:System.Windows.Controls.Slider" /> control.
            </summary>
            <param name="dc">The <see cref="T:System.Windows.Media.DrawingContext" /> that is used to draw the ticks.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.MinMaxLabeledTickBar.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter" />Â attached event is raised on this
            element. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Primitives.TickFlagDecorator">
            <summary>
            Class TickFlagDecorator.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.Primitives.TickFlagDecorator.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            When overridden in a derived class, participates in rendering operations that are directed by the layout system. The rendering instructions for this element are not used directly when this method is invoked, and are instead preserved for later asynchronous use by layout and drawing. 
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element. This context is provided to the layout system.</param>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.TickFlagDecorator.BorderBrushProperty">
            <summary>
            The border brush property
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.Primitives.TickFlagDecorator.BackgroundProperty">
            <summary>
            The background property
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.TickFlagDecorator.BorderBrush">
            <summary>
            Gets or sets the border brush.
            </summary>
            <value>The border brush.</value>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Primitives.TickFlagDecorator.Background">
            <summary>
            Gets or sets the background.
            </summary>
            <value>The background.</value>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.Resources.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.AutoRefreshOnOffTooltip">
            <summary>
              Looks up a localized string similar to Enable/disable automatical refreshing the list.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.CameraListerHeader">
            <summary>
              Looks up a localized string similar to cameras.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.ClickToHideFilterSection">
            <summary>
              Looks up a localized string similar to Click to hide Filter section..
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.Close">
            <summary>
              Looks up a localized string similar to Close.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.ContainsNCategoies">
            <summary>
              Looks up a localized string similar to Contains {0} group(s).
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.ContainsNCategoiesAndNParameters">
            <summary>
              Looks up a localized string similar to Contains {0} group(s) and {1} parameter(s).
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.ContainsNGroups">
            <summary>
              Looks up a localized string similar to Contains {0} Group(s).
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.ContainsNParameters">
            <summary>
              Looks up a localized string similar to Contains {0} parameter(s).
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.ContainsSelectorWithNGroups">
            <summary>
              Looks up a localized string similar to Contains Selector with {0} group(s).
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.ContainsSelectorWithNGroupsAndNParameters">
            <summary>
              Looks up a localized string similar to Contains Selector with {0} group(s) and {1} parameter(s).
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.ContainsSelectorWithNParameters">
            <summary>
              Looks up a localized string similar to Contains Selector with {0} parameter(s).
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.EmptyDescription">
            <summary>
              Looks up a localized string similar to Select feature to view its description.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.Execute">
            <summary>
              Looks up a localized string similar to Execute.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.ExpanderHeaderDetailsClosedTooltip">
            <summary>
              Looks up a localized string similar to Click to show more information about the camera..
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.ExpanderHeaderDetailsOpenedTooltip">
            <summary>
              Looks up a localized string similar to Click to hide additional information..
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.FilterCategoryHeaderFormat">
            <summary>
              Looks up a localized string similar to Filter: &lt;{0}&gt;.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.FilterToggleButtonOff">
            <summary>
              Looks up a localized string similar to Toggle to see all search results in a separate section (Filter)..
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.FilterToggleButtonOn">
            <summary>
              Looks up a localized string similar to Toggle to hide Filter section..
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.Interface">
            <summary>
              Looks up a localized string similar to Interface:.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.ModelName">
            <summary>
              Looks up a localized string similar to Model Name:.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.NoConnectedcamerasFound">
            <summary>
              Looks up a localized string similar to No connected cameras found.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.NoItemsText">
            <summary>
              Looks up a localized string similar to No items.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.NoParametersWithNameContainingFoundTemplate">
            <summary>
              Looks up a localized string similar to No parameters with name containing &quot;{0}&quot; found..
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.NoSearchResultFound">
            <summary>
              Looks up a localized string similar to No search result found for.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.NResultsFoundTemplate">
            <summary>
              Looks up a localized string similar to {0} result(s) found.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.ParameterTreeHeader">
            <summary>
              Looks up a localized string similar to parameters.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.PauseRecording">
            <summary>
              Looks up a localized string similar to Pause Recording.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.Polling">
            <summary>
              Looks up a localized string similar to Polling.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.RefreshButtonTooltip">
            <summary>
              Looks up a localized string similar to Refresh the list.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.RefreshCameraListAutomatically">
            <summary>
              Looks up a localized string similar to Refresh the list automatically.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.SaveImage">
            <summary>
              Looks up a localized string similar to Save Image.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.SearchParametersWatermark">
            <summary>
              Looks up a localized string similar to search.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.SelectValue">
            <summary>
              Looks up a localized string similar to Select value.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.SerialNumber">
            <summary>
              Looks up a localized string similar to Serial-Number:.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.ShowAllResults">
             <summary>
               Looks up a localized string similar to Show all
            results.
             </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.ShowDescription">
            <summary>
              Looks up a localized string similar to Show description.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.StartRecording">
            <summary>
              Looks up a localized string similar to Start Recording.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.StartStreaming">
            <summary>
              Looks up a localized string similar to Start Streaming.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.StopRecording">
            <summary>
              Looks up a localized string similar to Stop Recording.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.StopStreaming">
            <summary>
              Looks up a localized string similar to Stop Streaming.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.TakeSingleShot">
            <summary>
              Looks up a localized string similar to Take Single Shot.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.TypeParameterNameToSearchMessage">
             <summary>
               Looks up a localized string similar to Type parameter name into Search box to see it in this section.
            All parameters, which names contain the defined text, will be displayed here..
             </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.TypeParameterNameToSearchToolTip">
            <summary>
              Looks up a localized string similar to Type the name of a parameter to find it in the Parameter Tree..
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.UserLevel">
            <summary>
              Looks up a localized string similar to User Level:.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.VendorName">
            <summary>
              Looks up a localized string similar to Vendor Name:.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.ZoomActual">
            <summary>
              Looks up a localized string similar to Zoom 100%.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.ZoomFit">
            <summary>
              Looks up a localized string similar to Zoom to Fit.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.ZoomIn">
            <summary>
              Looks up a localized string similar to Zoom In.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.Resources.Strings.ZoomOut">
            <summary>
              Looks up a localized string similar to Zoom Out.
            </summary>
        </member>
        <member name="T:Basler.Pylon.Controls.WPF.StreamController">
            <summary>
            Represents a control that allows the user to control image display and acquisition (e.g. start and stop acquisition, zoom in and out, record a video).
            <para>
            <img src="../media/StreamController.png" />
            </para>
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.StreamController.TakeSingleSnapshotCommand">
            <summary>
            The command to take a snapshot from the camera.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.StreamController.StartStreamingCommand">
            <summary>
            The command to start streaming from the camera.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.StreamController.StopStreamingCommand">
            <summary>
            The command to stop streaming from the camera.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.StreamController.StartRecordingCommand">
            <summary>
            The command to start recording.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.StreamController.PauseRecordingCommand">
            <summary>
            The command to pause recording.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.StreamController.StopRecordingCommand">
            <summary>
            The command to stop recording.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.StreamController.#cctor">
            <summary>
            Initializes a static instance of the <see cref="T:Basler.Pylon.Controls.WPF.StreamController"/> class.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.StreamController.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Basler.Pylon.Controls.WPF.StreamController"/> class.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.StreamController.CameraProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.StreamController.Camera"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.StreamController.OrientationProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.StreamController.Orientation"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.StreamController.ActiveViewerProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.StreamController.ActiveViewer"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.StreamController.IsSaveRegionVisibleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.StreamController.IsSaveRegionVisible"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.StreamController.IsStreamRegionVisibleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.StreamController.IsStreamRegionVisible"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.StreamController.IsZoomRegionVisibleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.StreamController.IsZoomRegionVisible"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.StreamController.IsRecordRegionVisibleProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.StreamController.IsRecordRegionVisible"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.StreamController.IsSaveRegionAvailableProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.StreamController.IsSaveRegionAvailable"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.StreamController.IsStreamRegionAvailableProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.StreamController.IsStreamRegionAvailable"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.StreamController.IsZoomRegionAvailableProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.StreamController.IsZoomRegionAvailable"/> dependency property.
            </summary>
        </member>
        <member name="F:Basler.Pylon.Controls.WPF.StreamController.IsRecordRegionAvailableProperty">
            <summary>
            The <see cref="P:Basler.Pylon.Controls.WPF.StreamController.IsRecordRegionAvailable"/> dependency property.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.StreamController.OnCameraChanged(Basler.Pylon.Controls.Common.Cameras.CameraEventArgs)">
            <summary>
            Handles the <see cref="E:CameraChanged"/> event.
            </summary>
            <param name="args">The <see cref="T:Basler.Pylon.Controls.Common.Cameras.CameraEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.StreamController.Dispose">
            <summary>
            Performs application-specific tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.StreamController.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources. Also releases managed resources, if desired.
            </summary>
            <param name="disposing"><c>True</c> to release both managed and unmanaged resources. <c>False</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Basler.Pylon.Controls.WPF.StreamController.OnPropertyChanged(System.String)">
            <summary>
            Called when a property has changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.StreamController.Camera">
            <summary>
            Gets and sets the binding path to the device.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.StreamController.Orientation">
            <summary>
            Gets and sets the model.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.StreamController.ActiveViewer">
            <summary>
            Gets or sets the active viewer.
            </summary>
            <remarks>
            <para>
            This property binds the <see cref="T:Basler.Pylon.Controls.WPF.StreamController"/> to an <see cref="T:Basler.Pylon.Controls.WPF.ImageViewer"/>.
            </para>
            <para>
            The stream controller uses the active image viewer as the command target for specific commands, e.g. zooming.
            If the value of this property is <see langword="null"/>, the focused <see cref="T:Basler.Pylon.Controls.WPF.ImageViewer"/> will be used
            as the command target.
            </para>
            </remarks>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.StreamController.IsSaveRegionVisible">
            <summary>
            Gets and sets the visibility of the save region.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.StreamController.IsStreamRegionVisible">
            <summary>
            Gets and sets the visibility of the stream region.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.StreamController.IsZoomRegionVisible">
            <summary>
            Gets and sets the visibility of the zoom region.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.StreamController.IsRecordRegionVisible">
            <summary>
            Gets and sets the visibility of the record region.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.StreamController.IsSaveRegionAvailable">
            <summary>
            Gets and sets the availability of the save region.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.StreamController.IsStreamRegionAvailable">
            <summary>
            Gets and sets the availability of the stream region.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.StreamController.IsZoomRegionAvailable">
            <summary>
            Gets and sets the availability of the zoom region.
            </summary>
        </member>
        <member name="P:Basler.Pylon.Controls.WPF.StreamController.IsRecordRegionAvailable">
            <summary>
            Gets and sets the availability of the record region.
            </summary>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.StreamController.CameraChanged">
            <summary>
            Occurs when the camera property is changed.
            </summary>
        </member>
        <member name="E:Basler.Pylon.Controls.WPF.StreamController.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
